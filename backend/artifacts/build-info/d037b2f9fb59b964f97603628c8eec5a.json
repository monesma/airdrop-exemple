{"id":"d037b2f9fb59b964f97603628c8eec5a","_format":"hh-sol-build-info-1","solcVersion":"0.8.24","solcLongVersion":"0.8.24+commit.e11b9ed9","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/MerkleProof.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev These functions deal with verification of Merkle Tree proofs.\n *\n * The tree and the proofs can be generated using our\n * https://github.com/OpenZeppelin/merkle-tree[JavaScript library].\n * You will find a quickstart guide in the readme.\n *\n * WARNING: You should avoid using leaf values that are 64 bytes long prior to\n * hashing, or use a hash function other than keccak256 for hashing leaves.\n * This is because the concatenation of a sorted pair of internal nodes in\n * the Merkle tree could be reinterpreted as a leaf value.\n * OpenZeppelin's JavaScript library generates Merkle trees that are safe\n * against this attack out of the box.\n */\nlibrary MerkleProof {\n    /**\n     *@dev The multiproof provided is not valid.\n     */\n    error MerkleProofInvalidMultiproof();\n\n    /**\n     * @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n     * defined by `root`. For this, a `proof` must be provided, containing\n     * sibling hashes on the branch from the leaf to the root of the tree. Each\n     * pair of leaves and each pair of pre-images are assumed to be sorted.\n     */\n    function verify(bytes32[] memory proof, bytes32 root, bytes32 leaf) internal pure returns (bool) {\n        return processProof(proof, leaf) == root;\n    }\n\n    /**\n     * @dev Calldata version of {verify}\n     */\n    function verifyCalldata(bytes32[] calldata proof, bytes32 root, bytes32 leaf) internal pure returns (bool) {\n        return processProofCalldata(proof, leaf) == root;\n    }\n\n    /**\n     * @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n     * from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n     * hash matches the root of the tree. When processing the proof, the pairs\n     * of leafs & pre-images are assumed to be sorted.\n     */\n    function processProof(bytes32[] memory proof, bytes32 leaf) internal pure returns (bytes32) {\n        bytes32 computedHash = leaf;\n        for (uint256 i = 0; i < proof.length; i++) {\n            computedHash = _hashPair(computedHash, proof[i]);\n        }\n        return computedHash;\n    }\n\n    /**\n     * @dev Calldata version of {processProof}\n     */\n    function processProofCalldata(bytes32[] calldata proof, bytes32 leaf) internal pure returns (bytes32) {\n        bytes32 computedHash = leaf;\n        for (uint256 i = 0; i < proof.length; i++) {\n            computedHash = _hashPair(computedHash, proof[i]);\n        }\n        return computedHash;\n    }\n\n    /**\n     * @dev Returns true if the `leaves` can be simultaneously proven to be a part of a Merkle tree defined by\n     * `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n     *\n     * CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details.\n     */\n    function multiProofVerify(\n        bytes32[] memory proof,\n        bool[] memory proofFlags,\n        bytes32 root,\n        bytes32[] memory leaves\n    ) internal pure returns (bool) {\n        return processMultiProof(proof, proofFlags, leaves) == root;\n    }\n\n    /**\n     * @dev Calldata version of {multiProofVerify}\n     *\n     * CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details.\n     */\n    function multiProofVerifyCalldata(\n        bytes32[] calldata proof,\n        bool[] calldata proofFlags,\n        bytes32 root,\n        bytes32[] memory leaves\n    ) internal pure returns (bool) {\n        return processMultiProofCalldata(proof, proofFlags, leaves) == root;\n    }\n\n    /**\n     * @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n     * proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n     * leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n     * respectively.\n     *\n     * CAUTION: Not all Merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n     * is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n     * tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n     */\n    function processMultiProof(\n        bytes32[] memory proof,\n        bool[] memory proofFlags,\n        bytes32[] memory leaves\n    ) internal pure returns (bytes32 merkleRoot) {\n        // This function rebuilds the root hash by traversing the tree up from the leaves. The root is rebuilt by\n        // consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the\n        // `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of\n        // the Merkle tree.\n        uint256 leavesLen = leaves.length;\n        uint256 proofLen = proof.length;\n        uint256 totalHashes = proofFlags.length;\n\n        // Check proof validity.\n        if (leavesLen + proofLen != totalHashes + 1) {\n            revert MerkleProofInvalidMultiproof();\n        }\n\n        // The xxxPos values are \"pointers\" to the next value to consume in each array. All accesses are done using\n        // `xxx[xxxPos++]`, which return the current value and increment the pointer, thus mimicking a queue's \"pop\".\n        bytes32[] memory hashes = new bytes32[](totalHashes);\n        uint256 leafPos = 0;\n        uint256 hashPos = 0;\n        uint256 proofPos = 0;\n        // At each step, we compute the next hash using two values:\n        // - a value from the \"main queue\". If not all leaves have been consumed, we get the next leaf, otherwise we\n        //   get the next hash.\n        // - depending on the flag, either another value from the \"main queue\" (merging branches) or an element from the\n        //   `proof` array.\n        for (uint256 i = 0; i < totalHashes; i++) {\n            bytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];\n            bytes32 b = proofFlags[i]\n                ? (leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++])\n                : proof[proofPos++];\n            hashes[i] = _hashPair(a, b);\n        }\n\n        if (totalHashes > 0) {\n            if (proofPos != proofLen) {\n                revert MerkleProofInvalidMultiproof();\n            }\n            unchecked {\n                return hashes[totalHashes - 1];\n            }\n        } else if (leavesLen > 0) {\n            return leaves[0];\n        } else {\n            return proof[0];\n        }\n    }\n\n    /**\n     * @dev Calldata version of {processMultiProof}.\n     *\n     * CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details.\n     */\n    function processMultiProofCalldata(\n        bytes32[] calldata proof,\n        bool[] calldata proofFlags,\n        bytes32[] memory leaves\n    ) internal pure returns (bytes32 merkleRoot) {\n        // This function rebuilds the root hash by traversing the tree up from the leaves. The root is rebuilt by\n        // consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the\n        // `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of\n        // the Merkle tree.\n        uint256 leavesLen = leaves.length;\n        uint256 proofLen = proof.length;\n        uint256 totalHashes = proofFlags.length;\n\n        // Check proof validity.\n        if (leavesLen + proofLen != totalHashes + 1) {\n            revert MerkleProofInvalidMultiproof();\n        }\n\n        // The xxxPos values are \"pointers\" to the next value to consume in each array. All accesses are done using\n        // `xxx[xxxPos++]`, which return the current value and increment the pointer, thus mimicking a queue's \"pop\".\n        bytes32[] memory hashes = new bytes32[](totalHashes);\n        uint256 leafPos = 0;\n        uint256 hashPos = 0;\n        uint256 proofPos = 0;\n        // At each step, we compute the next hash using two values:\n        // - a value from the \"main queue\". If not all leaves have been consumed, we get the next leaf, otherwise we\n        //   get the next hash.\n        // - depending on the flag, either another value from the \"main queue\" (merging branches) or an element from the\n        //   `proof` array.\n        for (uint256 i = 0; i < totalHashes; i++) {\n            bytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];\n            bytes32 b = proofFlags[i]\n                ? (leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++])\n                : proof[proofPos++];\n            hashes[i] = _hashPair(a, b);\n        }\n\n        if (totalHashes > 0) {\n            if (proofPos != proofLen) {\n                revert MerkleProofInvalidMultiproof();\n            }\n            unchecked {\n                return hashes[totalHashes - 1];\n            }\n        } else if (leavesLen > 0) {\n            return leaves[0];\n        } else {\n            return proof[0];\n        }\n    }\n\n    /**\n     * @dev Sorts the pair (a, b) and hashes the result.\n     */\n    function _hashPair(bytes32 a, bytes32 b) private pure returns (bytes32) {\n        return a < b ? _efficientHash(a, b) : _efficientHash(b, a);\n    }\n\n    /**\n     * @dev Implementation of keccak256(abi.encode(a, b)) that doesn't allocate or expand memory.\n     */\n    function _efficientHash(bytes32 a, bytes32 b) private pure returns (bytes32 value) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, a)\n            mstore(0x20, b)\n            value := keccak256(0x00, 0x40)\n        }\n    }\n}\n"},"contracts/AntekIsERC20.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.24;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n//permet d'avoir un propriétaire au contract intelligent\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n//librairie permettant de gérer les arbres de merkle en solidity\nimport \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\";\n\ncontract AntekIsERC20 is ERC20, Ownable {\n    //je défini tous mes whitelistés\n    bytes32 public merkleRoot;\n    //2 token de 18 décimals\n    uint256 private constant MINT_AMOUNT = 2 ether;\n    //mapping pour se souvenir qu'une address a mint (pour qu'il le fasse qu'une fois)\n    mapping(address => bool) private hasMinted;\n    //Dans la nouvelle version de Ownable on lui passe le proprio du contract et la racine de l'arbre de merkle\n    constructor(address _initialOwner, bytes32 _merkleRoot)\n        ERC20(\"Antek Mnm Token\", \"MNM\")\n        Ownable(_initialOwner)\n    {\n        merkleRoot = _merkleRoot;\n    }\n\n    /**\n    * @notice Change the merkle root\n    *\n    * @param _merkleRoot the new merkle root\n    **/\n    function setMerkleRoot(bytes32 _merkleRoot) external onlyOwner {\n        merkleRoot = _merkleRoot;\n    }\n\n    /**\n    * @notice Check if an address is whitelisted or not\n    * \n    * @param _account The account checked\n    * @param _proof The merkle proof\n    *\n    * @return bool return true if the address is whitelisted, false otherwise\n    **/\n    function isWhitelisted(address _account, bytes32[] calldata _proof) internal view returns(bool) {\n        //applique un double hash sur notre account\n        bytes32 leaf = keccak256(abi.encode(keccak256(abi.encode(_account))));\n        //on utilise verify qui va utiliser en fonction d'une preuve qu'une feuille fait partie d'un arbre de merkle définit par sa racine\n        return MerkleProof.verify(_proof, merkleRoot, leaf);\n    }\n\n    /**\n    * @notice Allows a whitelisted user to mint tokens\n    *\n    * @param _to The token receiver\n    * @param _proof The merkle proof\n    **/\n    function mint(address _to, bytes32[] calldata _proof) external {\n        //on vérifie si il est whitelisté\n        require(isWhitelisted(msg.sender, _proof), \"Not Whitelisted\");\n        //on vérifie qu'il n'a pas recu son airdrop\n        require(!hasMinted[msg.sender], \"Tokens already minted\");\n        //on indique qu'il a minté\n        hasMinted[msg.sender] = true;\n        //on mint\n        _mint(_to, MINT_AMOUNT);\n    }\n}"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[933],"Ownable":[147]},"id":148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":934,"src":"128:45:0","symbolAliases":[{"foreign":{"id":2,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":933,"src":"136:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Context","nameLocations":["692:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":933,"src":"692:7:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"692:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"175:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":147,"linearizedBaseContracts":[147,933],"name":"Ownable","nameLocation":"681:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8,"mutability":"mutable","name":"_owner","nameLocation":"722:6:0","nodeType":"VariableDeclaration","scope":147,"src":"706:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"735:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":13,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:0","nodeType":"ErrorDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"866:7:0","nodeType":"VariableDeclaration","scope":13,"src":"858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:0"},"src":"825:50:0"},{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"881:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":18,"name":"OwnableInvalidOwner","nameLocation":"974:19:0","nodeType":"ErrorDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"owner","nameLocation":"1002:5:0","nodeType":"VariableDeclaration","scope":18,"src":"994:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:0"},"src":"968:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":24,"name":"OwnershipTransferred","nameLocation":"1021:20:0","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:0","nodeType":"VariableDeclaration","scope":24,"src":"1042:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:0","nodeType":"VariableDeclaration","scope":24,"src":"1073:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:0"},"src":"1015:84:0"},{"body":{"id":49,"nodeType":"Block","src":"1259:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":30,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1273:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":44,"nodeType":"IfStatement","src":"1269:95:0","trueBody":{"id":43,"nodeType":"Block","src":"1301:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":38,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:0","typeDescriptions":{}}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1322:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":42,"nodeType":"RevertStatement","src":"1315:38:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1392:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1373:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1373:32:0"}]},"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1105:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1237:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1259:0:0"},"scope":147,"src":"1225:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":57,"nodeType":"Block","src":"1521:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":53,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1531:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1531:13:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1554:1:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1418:77:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nameLocation":"1509:9:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1518:2:0"},"src":"1500:62:0","virtual":false,"visibility":"internal"},{"body":{"id":66,"nodeType":"Block","src":"1693:30:0","statements":[{"expression":{"id":64,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1710:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":65,"nodeType":"Return","src":"1703:13:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1568:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":67,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1652:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"1684:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:0"},"scope":147,"src":"1638:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":83,"nodeType":"Block","src":"1841:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":73,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"1866:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":82,"nodeType":"IfStatement","src":"1851:101:0","trueBody":{"id":81,"nodeType":"Block","src":"1880:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":77,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"1928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1901:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":80,"nodeType":"RevertStatement","src":"1894:47:0"}]}}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1729:62:0","text":" @dev Throws if the sender is not the owner."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1816:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1841:0:0"},"scope":147,"src":"1796:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":97,"nodeType":"Block","src":"2347:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2357:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"2357:30:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1964:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":98,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2337:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2337:9:0"},"nodeType":"ModifierInvocation","src":"2337:9:0"}],"name":"renounceOwnership","nameLocation":"2302:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"2319:2:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2347:0:0"},"scope":147,"src":"2293:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2613:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":106,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2627:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:0","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2623:91:0","trueBody":{"id":119,"nodeType":"Block","src":"2651:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":112,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2672:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":118,"nodeType":"RevertStatement","src":"2665:38:0"}]}},{"expression":{"arguments":[{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2742:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":121,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2723:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"ExpressionStatement","src":"2723:28:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2400:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":126,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nameLocations":["2603:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2603:9:0"},"nodeType":"ModifierInvocation","src":"2603:9:0"}],"name":"transferOwnership","nameLocation":"2552:17:0","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2570:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2613:0:0"},"scope":147,"src":"2543:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":145,"nodeType":"Block","src":"2975:124:0","statements":[{"assignments":[133],"declarations":[{"constant":false,"id":133,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:0","nodeType":"VariableDeclaration","scope":145,"src":"2985:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":135,"initialValue":{"id":134,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":136,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":137,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3029:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":139,"nodeType":"ExpressionStatement","src":"3020:17:0"},{"eventCall":{"arguments":[{"id":141,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3073:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":142,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3083:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":140,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3052:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"3047:45:0"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2764:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:0","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:0","nodeType":"VariableDeclaration","scope":146,"src":"2940:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:0"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"2975:0:0"},"scope":147,"src":"2912:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":148,"src":"663:2438:0","usedErrors":[13,18],"usedEvents":[24]}],"src":"102:3000:0"},"id":0},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[284],"IERC20Errors":[189],"IERC721Errors":[237]},"id":285,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":149,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":150,"nodeType":"StructuredDocumentation","src":"138:139:1","text":" @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."},"fullyImplemented":true,"id":189,"linearizedBaseContracts":[189],"name":"IERC20Errors","nameLocation":"288:12:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":151,"nodeType":"StructuredDocumentation","src":"307:309:1","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":159,"name":"ERC20InsufficientBalance","nameLocation":"627:24:1","nodeType":"ErrorDefinition","parameters":{"id":158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":153,"mutability":"mutable","name":"sender","nameLocation":"660:6:1","nodeType":"VariableDeclaration","scope":159,"src":"652:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":152,"name":"address","nodeType":"ElementaryTypeName","src":"652:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":155,"mutability":"mutable","name":"balance","nameLocation":"676:7:1","nodeType":"VariableDeclaration","scope":159,"src":"668:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":154,"name":"uint256","nodeType":"ElementaryTypeName","src":"668:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":157,"mutability":"mutable","name":"needed","nameLocation":"693:6:1","nodeType":"VariableDeclaration","scope":159,"src":"685:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":156,"name":"uint256","nodeType":"ElementaryTypeName","src":"685:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"651:49:1"},"src":"621:80:1"},{"documentation":{"id":160,"nodeType":"StructuredDocumentation","src":"707:152:1","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":164,"name":"ERC20InvalidSender","nameLocation":"870:18:1","nodeType":"ErrorDefinition","parameters":{"id":163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":162,"mutability":"mutable","name":"sender","nameLocation":"897:6:1","nodeType":"VariableDeclaration","scope":164,"src":"889:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":161,"name":"address","nodeType":"ElementaryTypeName","src":"889:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"888:16:1"},"src":"864:41:1"},{"documentation":{"id":165,"nodeType":"StructuredDocumentation","src":"911:159:1","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":169,"name":"ERC20InvalidReceiver","nameLocation":"1081:20:1","nodeType":"ErrorDefinition","parameters":{"id":168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":167,"mutability":"mutable","name":"receiver","nameLocation":"1110:8:1","nodeType":"VariableDeclaration","scope":169,"src":"1102:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":166,"name":"address","nodeType":"ElementaryTypeName","src":"1102:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1101:18:1"},"src":"1075:45:1"},{"documentation":{"id":170,"nodeType":"StructuredDocumentation","src":"1126:345:1","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":178,"name":"ERC20InsufficientAllowance","nameLocation":"1482:26:1","nodeType":"ErrorDefinition","parameters":{"id":177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":172,"mutability":"mutable","name":"spender","nameLocation":"1517:7:1","nodeType":"VariableDeclaration","scope":178,"src":"1509:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":171,"name":"address","nodeType":"ElementaryTypeName","src":"1509:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":174,"mutability":"mutable","name":"allowance","nameLocation":"1534:9:1","nodeType":"VariableDeclaration","scope":178,"src":"1526:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":173,"name":"uint256","nodeType":"ElementaryTypeName","src":"1526:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":176,"mutability":"mutable","name":"needed","nameLocation":"1553:6:1","nodeType":"VariableDeclaration","scope":178,"src":"1545:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":175,"name":"uint256","nodeType":"ElementaryTypeName","src":"1545:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1508:52:1"},"src":"1476:85:1"},{"documentation":{"id":179,"nodeType":"StructuredDocumentation","src":"1567:174:1","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":183,"name":"ERC20InvalidApprover","nameLocation":"1752:20:1","nodeType":"ErrorDefinition","parameters":{"id":182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":181,"mutability":"mutable","name":"approver","nameLocation":"1781:8:1","nodeType":"VariableDeclaration","scope":183,"src":"1773:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":180,"name":"address","nodeType":"ElementaryTypeName","src":"1773:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1772:18:1"},"src":"1746:45:1"},{"documentation":{"id":184,"nodeType":"StructuredDocumentation","src":"1797:195:1","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":188,"name":"ERC20InvalidSpender","nameLocation":"2003:19:1","nodeType":"ErrorDefinition","parameters":{"id":187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":186,"mutability":"mutable","name":"spender","nameLocation":"2031:7:1","nodeType":"VariableDeclaration","scope":188,"src":"2023:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":185,"name":"address","nodeType":"ElementaryTypeName","src":"2023:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2022:17:1"},"src":"1997:43:1"}],"scope":285,"src":"278:1764:1","usedErrors":[159,164,169,178,183,188],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":190,"nodeType":"StructuredDocumentation","src":"2044:141:1","text":" @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."},"fullyImplemented":true,"id":237,"linearizedBaseContracts":[237],"name":"IERC721Errors","nameLocation":"2196:13:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":191,"nodeType":"StructuredDocumentation","src":"2216:219:1","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":195,"name":"ERC721InvalidOwner","nameLocation":"2446:18:1","nodeType":"ErrorDefinition","parameters":{"id":194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":193,"mutability":"mutable","name":"owner","nameLocation":"2473:5:1","nodeType":"VariableDeclaration","scope":195,"src":"2465:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":192,"name":"address","nodeType":"ElementaryTypeName","src":"2465:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2464:15:1"},"src":"2440:40:1"},{"documentation":{"id":196,"nodeType":"StructuredDocumentation","src":"2486:132:1","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":200,"name":"ERC721NonexistentToken","nameLocation":"2629:22:1","nodeType":"ErrorDefinition","parameters":{"id":199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":198,"mutability":"mutable","name":"tokenId","nameLocation":"2660:7:1","nodeType":"VariableDeclaration","scope":200,"src":"2652:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":197,"name":"uint256","nodeType":"ElementaryTypeName","src":"2652:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2651:17:1"},"src":"2623:46:1"},{"documentation":{"id":201,"nodeType":"StructuredDocumentation","src":"2675:289:1","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":209,"name":"ERC721IncorrectOwner","nameLocation":"2975:20:1","nodeType":"ErrorDefinition","parameters":{"id":208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":203,"mutability":"mutable","name":"sender","nameLocation":"3004:6:1","nodeType":"VariableDeclaration","scope":209,"src":"2996:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":202,"name":"address","nodeType":"ElementaryTypeName","src":"2996:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":205,"mutability":"mutable","name":"tokenId","nameLocation":"3020:7:1","nodeType":"VariableDeclaration","scope":209,"src":"3012:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":204,"name":"uint256","nodeType":"ElementaryTypeName","src":"3012:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":207,"mutability":"mutable","name":"owner","nameLocation":"3037:5:1","nodeType":"VariableDeclaration","scope":209,"src":"3029:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":206,"name":"address","nodeType":"ElementaryTypeName","src":"3029:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2995:48:1"},"src":"2969:75:1"},{"documentation":{"id":210,"nodeType":"StructuredDocumentation","src":"3050:152:1","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":214,"name":"ERC721InvalidSender","nameLocation":"3213:19:1","nodeType":"ErrorDefinition","parameters":{"id":213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":212,"mutability":"mutable","name":"sender","nameLocation":"3241:6:1","nodeType":"VariableDeclaration","scope":214,"src":"3233:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":211,"name":"address","nodeType":"ElementaryTypeName","src":"3233:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3232:16:1"},"src":"3207:42:1"},{"documentation":{"id":215,"nodeType":"StructuredDocumentation","src":"3255:159:1","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":219,"name":"ERC721InvalidReceiver","nameLocation":"3425:21:1","nodeType":"ErrorDefinition","parameters":{"id":218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":217,"mutability":"mutable","name":"receiver","nameLocation":"3455:8:1","nodeType":"VariableDeclaration","scope":219,"src":"3447:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":216,"name":"address","nodeType":"ElementaryTypeName","src":"3447:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3446:18:1"},"src":"3419:46:1"},{"documentation":{"id":220,"nodeType":"StructuredDocumentation","src":"3471:247:1","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":226,"name":"ERC721InsufficientApproval","nameLocation":"3729:26:1","nodeType":"ErrorDefinition","parameters":{"id":225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":222,"mutability":"mutable","name":"operator","nameLocation":"3764:8:1","nodeType":"VariableDeclaration","scope":226,"src":"3756:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":221,"name":"address","nodeType":"ElementaryTypeName","src":"3756:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":224,"mutability":"mutable","name":"tokenId","nameLocation":"3782:7:1","nodeType":"VariableDeclaration","scope":226,"src":"3774:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":223,"name":"uint256","nodeType":"ElementaryTypeName","src":"3774:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3755:35:1"},"src":"3723:68:1"},{"documentation":{"id":227,"nodeType":"StructuredDocumentation","src":"3797:174:1","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":231,"name":"ERC721InvalidApprover","nameLocation":"3982:21:1","nodeType":"ErrorDefinition","parameters":{"id":230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":229,"mutability":"mutable","name":"approver","nameLocation":"4012:8:1","nodeType":"VariableDeclaration","scope":231,"src":"4004:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":228,"name":"address","nodeType":"ElementaryTypeName","src":"4004:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4003:18:1"},"src":"3976:46:1"},{"documentation":{"id":232,"nodeType":"StructuredDocumentation","src":"4028:197:1","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":236,"name":"ERC721InvalidOperator","nameLocation":"4236:21:1","nodeType":"ErrorDefinition","parameters":{"id":235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":234,"mutability":"mutable","name":"operator","nameLocation":"4266:8:1","nodeType":"VariableDeclaration","scope":236,"src":"4258:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":233,"name":"address","nodeType":"ElementaryTypeName","src":"4258:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4257:18:1"},"src":"4230:46:1"}],"scope":285,"src":"2186:2092:1","usedErrors":[195,200,209,214,219,226,231,236],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":238,"nodeType":"StructuredDocumentation","src":"4280:143:1","text":" @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."},"fullyImplemented":true,"id":284,"linearizedBaseContracts":[284],"name":"IERC1155Errors","nameLocation":"4434:14:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":239,"nodeType":"StructuredDocumentation","src":"4455:361:1","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":249,"name":"ERC1155InsufficientBalance","nameLocation":"4827:26:1","nodeType":"ErrorDefinition","parameters":{"id":248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":241,"mutability":"mutable","name":"sender","nameLocation":"4862:6:1","nodeType":"VariableDeclaration","scope":249,"src":"4854:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":240,"name":"address","nodeType":"ElementaryTypeName","src":"4854:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":243,"mutability":"mutable","name":"balance","nameLocation":"4878:7:1","nodeType":"VariableDeclaration","scope":249,"src":"4870:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":242,"name":"uint256","nodeType":"ElementaryTypeName","src":"4870:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":245,"mutability":"mutable","name":"needed","nameLocation":"4895:6:1","nodeType":"VariableDeclaration","scope":249,"src":"4887:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":244,"name":"uint256","nodeType":"ElementaryTypeName","src":"4887:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":247,"mutability":"mutable","name":"tokenId","nameLocation":"4911:7:1","nodeType":"VariableDeclaration","scope":249,"src":"4903:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":246,"name":"uint256","nodeType":"ElementaryTypeName","src":"4903:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4853:66:1"},"src":"4821:99:1"},{"documentation":{"id":250,"nodeType":"StructuredDocumentation","src":"4926:152:1","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":254,"name":"ERC1155InvalidSender","nameLocation":"5089:20:1","nodeType":"ErrorDefinition","parameters":{"id":253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":252,"mutability":"mutable","name":"sender","nameLocation":"5118:6:1","nodeType":"VariableDeclaration","scope":254,"src":"5110:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":251,"name":"address","nodeType":"ElementaryTypeName","src":"5110:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5109:16:1"},"src":"5083:43:1"},{"documentation":{"id":255,"nodeType":"StructuredDocumentation","src":"5132:159:1","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":259,"name":"ERC1155InvalidReceiver","nameLocation":"5302:22:1","nodeType":"ErrorDefinition","parameters":{"id":258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":257,"mutability":"mutable","name":"receiver","nameLocation":"5333:8:1","nodeType":"VariableDeclaration","scope":259,"src":"5325:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":256,"name":"address","nodeType":"ElementaryTypeName","src":"5325:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5324:18:1"},"src":"5296:47:1"},{"documentation":{"id":260,"nodeType":"StructuredDocumentation","src":"5349:256:1","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":266,"name":"ERC1155MissingApprovalForAll","nameLocation":"5616:28:1","nodeType":"ErrorDefinition","parameters":{"id":265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":262,"mutability":"mutable","name":"operator","nameLocation":"5653:8:1","nodeType":"VariableDeclaration","scope":266,"src":"5645:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":261,"name":"address","nodeType":"ElementaryTypeName","src":"5645:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":264,"mutability":"mutable","name":"owner","nameLocation":"5671:5:1","nodeType":"VariableDeclaration","scope":266,"src":"5663:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":263,"name":"address","nodeType":"ElementaryTypeName","src":"5663:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5644:33:1"},"src":"5610:68:1"},{"documentation":{"id":267,"nodeType":"StructuredDocumentation","src":"5684:174:1","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":271,"name":"ERC1155InvalidApprover","nameLocation":"5869:22:1","nodeType":"ErrorDefinition","parameters":{"id":270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":269,"mutability":"mutable","name":"approver","nameLocation":"5900:8:1","nodeType":"VariableDeclaration","scope":271,"src":"5892:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":268,"name":"address","nodeType":"ElementaryTypeName","src":"5892:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5891:18:1"},"src":"5863:47:1"},{"documentation":{"id":272,"nodeType":"StructuredDocumentation","src":"5916:197:1","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":276,"name":"ERC1155InvalidOperator","nameLocation":"6124:22:1","nodeType":"ErrorDefinition","parameters":{"id":275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":274,"mutability":"mutable","name":"operator","nameLocation":"6155:8:1","nodeType":"VariableDeclaration","scope":276,"src":"6147:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":273,"name":"address","nodeType":"ElementaryTypeName","src":"6147:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6146:18:1"},"src":"6118:47:1"},{"documentation":{"id":277,"nodeType":"StructuredDocumentation","src":"6171:280:1","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":283,"name":"ERC1155InvalidArrayLength","nameLocation":"6462:25:1","nodeType":"ErrorDefinition","parameters":{"id":282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":279,"mutability":"mutable","name":"idsLength","nameLocation":"6496:9:1","nodeType":"VariableDeclaration","scope":283,"src":"6488:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":278,"name":"uint256","nodeType":"ElementaryTypeName","src":"6488:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":281,"mutability":"mutable","name":"valuesLength","nameLocation":"6515:12:1","nodeType":"VariableDeclaration","scope":283,"src":"6507:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":280,"name":"uint256","nodeType":"ElementaryTypeName","src":"6507:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6487:41:1"},"src":"6456:73:1"}],"scope":285,"src":"4424:2107:1","usedErrors":[249,254,259,266,271,276,283],"usedEvents":[]}],"src":"112:6420:1"},"id":1},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[933],"ERC20":[799],"IERC20":[877],"IERC20Errors":[189],"IERC20Metadata":[903]},"id":800,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":286,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:2"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":288,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":800,"sourceUnit":878,"src":"131:36:2","symbolAliases":[{"foreign":{"id":287,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":877,"src":"139:6:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":290,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":800,"sourceUnit":904,"src":"168:63:2","symbolAliases":[{"foreign":{"id":289,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":903,"src":"176:14:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":292,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":800,"sourceUnit":934,"src":"232:48:2","symbolAliases":[{"foreign":{"id":291,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":933,"src":"240:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":294,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":800,"sourceUnit":285,"src":"281:65:2","symbolAliases":[{"foreign":{"id":293,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"289:12:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":296,"name":"Context","nameLocations":["1428:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":933,"src":"1428:7:2"},"id":297,"nodeType":"InheritanceSpecifier","src":"1428:7:2"},{"baseName":{"id":298,"name":"IERC20","nameLocations":["1437:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":877,"src":"1437:6:2"},"id":299,"nodeType":"InheritanceSpecifier","src":"1437:6:2"},{"baseName":{"id":300,"name":"IERC20Metadata","nameLocations":["1445:14:2"],"nodeType":"IdentifierPath","referencedDeclaration":903,"src":"1445:14:2"},"id":301,"nodeType":"InheritanceSpecifier","src":"1445:14:2"},{"baseName":{"id":302,"name":"IERC20Errors","nameLocations":["1461:12:2"],"nodeType":"IdentifierPath","referencedDeclaration":189,"src":"1461:12:2"},"id":303,"nodeType":"InheritanceSpecifier","src":"1461:12:2"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":295,"nodeType":"StructuredDocumentation","src":"348:1052:2","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."},"fullyImplemented":true,"id":799,"linearizedBaseContracts":[799,189,903,877,933],"name":"ERC20","nameLocation":"1419:5:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":307,"mutability":"mutable","name":"_balances","nameLocation":"1524:9:2","nodeType":"VariableDeclaration","scope":799,"src":"1480:53:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":306,"keyName":"account","keyNameLocation":"1496:7:2","keyType":{"id":304,"name":"address","nodeType":"ElementaryTypeName","src":"1488:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1480:35:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":305,"name":"uint256","nodeType":"ElementaryTypeName","src":"1507:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":313,"mutability":"mutable","name":"_allowances","nameLocation":"1612:11:2","nodeType":"VariableDeclaration","scope":799,"src":"1540:83:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":312,"keyName":"account","keyNameLocation":"1556:7:2","keyType":{"id":308,"name":"address","nodeType":"ElementaryTypeName","src":"1548:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1540:63:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":311,"keyName":"spender","keyNameLocation":"1583:7:2","keyType":{"id":309,"name":"address","nodeType":"ElementaryTypeName","src":"1575:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1567:35:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":310,"name":"uint256","nodeType":"ElementaryTypeName","src":"1594:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":315,"mutability":"mutable","name":"_totalSupply","nameLocation":"1646:12:2","nodeType":"VariableDeclaration","scope":799,"src":"1630:28:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":314,"name":"uint256","nodeType":"ElementaryTypeName","src":"1630:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":317,"mutability":"mutable","name":"_name","nameLocation":"1680:5:2","nodeType":"VariableDeclaration","scope":799,"src":"1665:20:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":316,"name":"string","nodeType":"ElementaryTypeName","src":"1665:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":319,"mutability":"mutable","name":"_symbol","nameLocation":"1706:7:2","nodeType":"VariableDeclaration","scope":799,"src":"1691:22:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":318,"name":"string","nodeType":"ElementaryTypeName","src":"1691:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":335,"nodeType":"Block","src":"1952:57:2","statements":[{"expression":{"id":329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":327,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"1962:5:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":328,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":322,"src":"1970:5:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1962:13:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":330,"nodeType":"ExpressionStatement","src":"1962:13:2"},{"expression":{"id":333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":331,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":319,"src":"1985:7:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":332,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":324,"src":"1995:7:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1985:17:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":334,"nodeType":"ExpressionStatement","src":"1985:17:2"}]},"documentation":{"id":320,"nodeType":"StructuredDocumentation","src":"1720:171:2","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":336,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":322,"mutability":"mutable","name":"name_","nameLocation":"1922:5:2","nodeType":"VariableDeclaration","scope":336,"src":"1908:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":321,"name":"string","nodeType":"ElementaryTypeName","src":"1908:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":324,"mutability":"mutable","name":"symbol_","nameLocation":"1943:7:2","nodeType":"VariableDeclaration","scope":336,"src":"1929:21:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":323,"name":"string","nodeType":"ElementaryTypeName","src":"1929:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1907:44:2"},"returnParameters":{"id":326,"nodeType":"ParameterList","parameters":[],"src":"1952:0:2"},"scope":799,"src":"1896:113:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[890],"body":{"id":344,"nodeType":"Block","src":"2134:29:2","statements":[{"expression":{"id":342,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"2151:5:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":341,"id":343,"nodeType":"Return","src":"2144:12:2"}]},"documentation":{"id":337,"nodeType":"StructuredDocumentation","src":"2015:54:2","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":345,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2083:4:2","nodeType":"FunctionDefinition","parameters":{"id":338,"nodeType":"ParameterList","parameters":[],"src":"2087:2:2"},"returnParameters":{"id":341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":340,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":345,"src":"2119:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":339,"name":"string","nodeType":"ElementaryTypeName","src":"2119:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2118:15:2"},"scope":799,"src":"2074:89:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[896],"body":{"id":353,"nodeType":"Block","src":"2338:31:2","statements":[{"expression":{"id":351,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":319,"src":"2355:7:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":350,"id":352,"nodeType":"Return","src":"2348:14:2"}]},"documentation":{"id":346,"nodeType":"StructuredDocumentation","src":"2169:102:2","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":354,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2285:6:2","nodeType":"FunctionDefinition","parameters":{"id":347,"nodeType":"ParameterList","parameters":[],"src":"2291:2:2"},"returnParameters":{"id":350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":349,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":354,"src":"2323:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":348,"name":"string","nodeType":"ElementaryTypeName","src":"2323:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2322:15:2"},"scope":799,"src":"2276:93:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[902],"body":{"id":362,"nodeType":"Block","src":"3058:26:2","statements":[{"expression":{"hexValue":"3138","id":360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3075:2:2","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":359,"id":361,"nodeType":"Return","src":"3068:9:2"}]},"documentation":{"id":355,"nodeType":"StructuredDocumentation","src":"2375:622:2","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":363,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3011:8:2","nodeType":"FunctionDefinition","parameters":{"id":356,"nodeType":"ParameterList","parameters":[],"src":"3019:2:2"},"returnParameters":{"id":359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":358,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":363,"src":"3051:5:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":357,"name":"uint8","nodeType":"ElementaryTypeName","src":"3051:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3050:7:2"},"scope":799,"src":"3002:82:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[826],"body":{"id":371,"nodeType":"Block","src":"3205:36:2","statements":[{"expression":{"id":369,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"3222:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":368,"id":370,"nodeType":"Return","src":"3215:19:2"}]},"documentation":{"id":364,"nodeType":"StructuredDocumentation","src":"3090:49:2","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":372,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3153:11:2","nodeType":"FunctionDefinition","parameters":{"id":365,"nodeType":"ParameterList","parameters":[],"src":"3164:2:2"},"returnParameters":{"id":368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":367,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":372,"src":"3196:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":366,"name":"uint256","nodeType":"ElementaryTypeName","src":"3196:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3195:9:2"},"scope":799,"src":"3144:97:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[834],"body":{"id":384,"nodeType":"Block","src":"3373:42:2","statements":[{"expression":{"baseExpression":{"id":380,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"3390:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":382,"indexExpression":{"id":381,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":375,"src":"3400:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3390:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":379,"id":383,"nodeType":"Return","src":"3383:25:2"}]},"documentation":{"id":373,"nodeType":"StructuredDocumentation","src":"3247:47:2","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":385,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3308:9:2","nodeType":"FunctionDefinition","parameters":{"id":376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":375,"mutability":"mutable","name":"account","nameLocation":"3326:7:2","nodeType":"VariableDeclaration","scope":385,"src":"3318:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":374,"name":"address","nodeType":"ElementaryTypeName","src":"3318:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3317:17:2"},"returnParameters":{"id":379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":378,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":385,"src":"3364:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":377,"name":"uint256","nodeType":"ElementaryTypeName","src":"3364:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3363:9:2"},"scope":799,"src":"3299:116:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[844],"body":{"id":408,"nodeType":"Block","src":"3685:103:2","statements":[{"assignments":[396],"declarations":[{"constant":false,"id":396,"mutability":"mutable","name":"owner","nameLocation":"3703:5:2","nodeType":"VariableDeclaration","scope":408,"src":"3695:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":395,"name":"address","nodeType":"ElementaryTypeName","src":"3695:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":399,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":397,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"3711:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3711:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3695:28:2"},{"expression":{"arguments":[{"id":401,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":396,"src":"3743:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":402,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"3750:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":403,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":390,"src":"3754:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":400,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"3733:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3733:27:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":405,"nodeType":"ExpressionStatement","src":"3733:27:2"},{"expression":{"hexValue":"74727565","id":406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3777:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":394,"id":407,"nodeType":"Return","src":"3770:11:2"}]},"documentation":{"id":386,"nodeType":"StructuredDocumentation","src":"3421:184:2","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":409,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3619:8:2","nodeType":"FunctionDefinition","parameters":{"id":391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":388,"mutability":"mutable","name":"to","nameLocation":"3636:2:2","nodeType":"VariableDeclaration","scope":409,"src":"3628:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":387,"name":"address","nodeType":"ElementaryTypeName","src":"3628:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":390,"mutability":"mutable","name":"value","nameLocation":"3648:5:2","nodeType":"VariableDeclaration","scope":409,"src":"3640:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":389,"name":"uint256","nodeType":"ElementaryTypeName","src":"3640:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3627:27:2"},"returnParameters":{"id":394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":393,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":409,"src":"3679:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":392,"name":"bool","nodeType":"ElementaryTypeName","src":"3679:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3678:6:2"},"scope":799,"src":"3610:178:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[854],"body":{"id":425,"nodeType":"Block","src":"3935:51:2","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":419,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":313,"src":"3952:11:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":421,"indexExpression":{"id":420,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":412,"src":"3964:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3952:18:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":423,"indexExpression":{"id":422,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"3971:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3952:27:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":418,"id":424,"nodeType":"Return","src":"3945:34:2"}]},"documentation":{"id":410,"nodeType":"StructuredDocumentation","src":"3794:47:2","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":426,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3855:9:2","nodeType":"FunctionDefinition","parameters":{"id":415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":412,"mutability":"mutable","name":"owner","nameLocation":"3873:5:2","nodeType":"VariableDeclaration","scope":426,"src":"3865:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":411,"name":"address","nodeType":"ElementaryTypeName","src":"3865:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":414,"mutability":"mutable","name":"spender","nameLocation":"3888:7:2","nodeType":"VariableDeclaration","scope":426,"src":"3880:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":413,"name":"address","nodeType":"ElementaryTypeName","src":"3880:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3864:32:2"},"returnParameters":{"id":418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":417,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":426,"src":"3926:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":416,"name":"uint256","nodeType":"ElementaryTypeName","src":"3926:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3925:9:2"},"scope":799,"src":"3846:140:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[864],"body":{"id":449,"nodeType":"Block","src":"4372:107:2","statements":[{"assignments":[437],"declarations":[{"constant":false,"id":437,"mutability":"mutable","name":"owner","nameLocation":"4390:5:2","nodeType":"VariableDeclaration","scope":449,"src":"4382:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":436,"name":"address","nodeType":"ElementaryTypeName","src":"4382:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":440,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":438,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"4398:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4398:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4382:28:2"},{"expression":{"arguments":[{"id":442,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":437,"src":"4429:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":443,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":429,"src":"4436:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":444,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":431,"src":"4445:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":441,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[690,750],"referencedDeclaration":690,"src":"4420:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4420:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":446,"nodeType":"ExpressionStatement","src":"4420:31:2"},{"expression":{"hexValue":"74727565","id":447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4468:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":435,"id":448,"nodeType":"Return","src":"4461:11:2"}]},"documentation":{"id":427,"nodeType":"StructuredDocumentation","src":"3992:296:2","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":450,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4302:7:2","nodeType":"FunctionDefinition","parameters":{"id":432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":429,"mutability":"mutable","name":"spender","nameLocation":"4318:7:2","nodeType":"VariableDeclaration","scope":450,"src":"4310:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":428,"name":"address","nodeType":"ElementaryTypeName","src":"4310:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":431,"mutability":"mutable","name":"value","nameLocation":"4335:5:2","nodeType":"VariableDeclaration","scope":450,"src":"4327:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":430,"name":"uint256","nodeType":"ElementaryTypeName","src":"4327:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4309:32:2"},"returnParameters":{"id":435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":434,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":450,"src":"4366:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":433,"name":"bool","nodeType":"ElementaryTypeName","src":"4366:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4365:6:2"},"scope":799,"src":"4293:186:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[876],"body":{"id":481,"nodeType":"Block","src":"5132:151:2","statements":[{"assignments":[463],"declarations":[{"constant":false,"id":463,"mutability":"mutable","name":"spender","nameLocation":"5150:7:2","nodeType":"VariableDeclaration","scope":481,"src":"5142:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":462,"name":"address","nodeType":"ElementaryTypeName","src":"5142:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":466,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":464,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"5160:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5160:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5142:30:2"},{"expression":{"arguments":[{"id":468,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":453,"src":"5198:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":469,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":463,"src":"5204:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":470,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":457,"src":"5213:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":467,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":798,"src":"5182:15:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5182:37:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":472,"nodeType":"ExpressionStatement","src":"5182:37:2"},{"expression":{"arguments":[{"id":474,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":453,"src":"5239:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":475,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":455,"src":"5245:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":476,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":457,"src":"5249:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":473,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"5229:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5229:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":478,"nodeType":"ExpressionStatement","src":"5229:26:2"},{"expression":{"hexValue":"74727565","id":479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5272:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":461,"id":480,"nodeType":"Return","src":"5265:11:2"}]},"documentation":{"id":451,"nodeType":"StructuredDocumentation","src":"4485:549:2","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":482,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5048:12:2","nodeType":"FunctionDefinition","parameters":{"id":458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":453,"mutability":"mutable","name":"from","nameLocation":"5069:4:2","nodeType":"VariableDeclaration","scope":482,"src":"5061:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":452,"name":"address","nodeType":"ElementaryTypeName","src":"5061:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":455,"mutability":"mutable","name":"to","nameLocation":"5083:2:2","nodeType":"VariableDeclaration","scope":482,"src":"5075:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":454,"name":"address","nodeType":"ElementaryTypeName","src":"5075:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":457,"mutability":"mutable","name":"value","nameLocation":"5095:5:2","nodeType":"VariableDeclaration","scope":482,"src":"5087:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":456,"name":"uint256","nodeType":"ElementaryTypeName","src":"5087:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5060:41:2"},"returnParameters":{"id":461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":460,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":482,"src":"5126:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":459,"name":"bool","nodeType":"ElementaryTypeName","src":"5126:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5125:6:2"},"scope":799,"src":"5039:244:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":528,"nodeType":"Block","src":"5725:231:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":492,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"5739:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5755:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":494,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5747:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":493,"name":"address","nodeType":"ElementaryTypeName","src":"5747:7:2","typeDescriptions":{}}},"id":496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5747:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5739:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":506,"nodeType":"IfStatement","src":"5735:86:2","trueBody":{"id":505,"nodeType":"Block","src":"5759:62:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5807:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":500,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5799:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":499,"name":"address","nodeType":"ElementaryTypeName","src":"5799:7:2","typeDescriptions":{}}},"id":502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5799:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":498,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":164,"src":"5780:18:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5780:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":504,"nodeType":"RevertStatement","src":"5773:37:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":507,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":487,"src":"5834:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5848:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":509,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5840:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":508,"name":"address","nodeType":"ElementaryTypeName","src":"5840:7:2","typeDescriptions":{}}},"id":511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5840:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5834:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":521,"nodeType":"IfStatement","src":"5830:86:2","trueBody":{"id":520,"nodeType":"Block","src":"5852:64:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5902:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":515,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5894:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":514,"name":"address","nodeType":"ElementaryTypeName","src":"5894:7:2","typeDescriptions":{}}},"id":517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5894:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":513,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"5873:20:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5873:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":519,"nodeType":"RevertStatement","src":"5866:39:2"}]}},{"expression":{"arguments":[{"id":523,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"5933:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":524,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":487,"src":"5939:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":525,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"5943:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":522,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"5925:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5925:24:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":527,"nodeType":"ExpressionStatement","src":"5925:24:2"}]},"documentation":{"id":483,"nodeType":"StructuredDocumentation","src":"5289:362:2","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":529,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"5665:9:2","nodeType":"FunctionDefinition","parameters":{"id":490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":485,"mutability":"mutable","name":"from","nameLocation":"5683:4:2","nodeType":"VariableDeclaration","scope":529,"src":"5675:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":484,"name":"address","nodeType":"ElementaryTypeName","src":"5675:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":487,"mutability":"mutable","name":"to","nameLocation":"5697:2:2","nodeType":"VariableDeclaration","scope":529,"src":"5689:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":486,"name":"address","nodeType":"ElementaryTypeName","src":"5689:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":489,"mutability":"mutable","name":"value","nameLocation":"5709:5:2","nodeType":"VariableDeclaration","scope":529,"src":"5701:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":488,"name":"uint256","nodeType":"ElementaryTypeName","src":"5701:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:41:2"},"returnParameters":{"id":491,"nodeType":"ParameterList","parameters":[],"src":"5725:0:2"},"scope":799,"src":"5656:300:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":605,"nodeType":"Block","src":"6346:1032:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":539,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"6360:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6376:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":541,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6368:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":540,"name":"address","nodeType":"ElementaryTypeName","src":"6368:7:2","typeDescriptions":{}}},"id":543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6368:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6360:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":576,"nodeType":"Block","src":"6534:362:2","statements":[{"assignments":[551],"declarations":[{"constant":false,"id":551,"mutability":"mutable","name":"fromBalance","nameLocation":"6556:11:2","nodeType":"VariableDeclaration","scope":576,"src":"6548:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":550,"name":"uint256","nodeType":"ElementaryTypeName","src":"6548:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":555,"initialValue":{"baseExpression":{"id":552,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"6570:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":554,"indexExpression":{"id":553,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"6580:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6570:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6548:37:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":556,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":551,"src":"6603:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":557,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"6617:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6603:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":566,"nodeType":"IfStatement","src":"6599:115:2","trueBody":{"id":565,"nodeType":"Block","src":"6624:90:2","statements":[{"errorCall":{"arguments":[{"id":560,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"6674:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":561,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":551,"src":"6680:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":562,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"6693:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":559,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"6649:24:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6649:50:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":564,"nodeType":"RevertStatement","src":"6642:57:2"}]}},{"id":575,"nodeType":"UncheckedBlock","src":"6727:159:2","statements":[{"expression":{"id":573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":567,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"6834:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":569,"indexExpression":{"id":568,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"6844:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6834:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":570,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":551,"src":"6852:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":571,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"6866:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6852:19:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6834:37:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":574,"nodeType":"ExpressionStatement","src":"6834:37:2"}]}]},"id":577,"nodeType":"IfStatement","src":"6356:540:2","trueBody":{"id":549,"nodeType":"Block","src":"6380:148:2","statements":[{"expression":{"id":547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":545,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"6496:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":546,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"6512:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6496:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":548,"nodeType":"ExpressionStatement","src":"6496:21:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":578,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":534,"src":"6910:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6924:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":580,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":579,"name":"address","nodeType":"ElementaryTypeName","src":"6916:7:2","typeDescriptions":{}}},"id":582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6910:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":597,"nodeType":"Block","src":"7125:206:2","statements":[{"id":596,"nodeType":"UncheckedBlock","src":"7139:182:2","statements":[{"expression":{"id":594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":590,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"7284:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":592,"indexExpression":{"id":591,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":534,"src":"7294:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7284:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":593,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"7301:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7284:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":595,"nodeType":"ExpressionStatement","src":"7284:22:2"}]}]},"id":598,"nodeType":"IfStatement","src":"6906:425:2","trueBody":{"id":589,"nodeType":"Block","src":"6928:191:2","statements":[{"id":588,"nodeType":"UncheckedBlock","src":"6942:167:2","statements":[{"expression":{"id":586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":584,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"7073:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":585,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"7089:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7073:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":587,"nodeType":"ExpressionStatement","src":"7073:21:2"}]}]}},{"eventCall":{"arguments":[{"id":600,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"7355:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":601,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":534,"src":"7361:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":602,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"7365:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":599,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":811,"src":"7346:8:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7346:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":604,"nodeType":"EmitStatement","src":"7341:30:2"}]},"documentation":{"id":530,"nodeType":"StructuredDocumentation","src":"5962:304:2","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":606,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"6280:7:2","nodeType":"FunctionDefinition","parameters":{"id":537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":532,"mutability":"mutable","name":"from","nameLocation":"6296:4:2","nodeType":"VariableDeclaration","scope":606,"src":"6288:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":531,"name":"address","nodeType":"ElementaryTypeName","src":"6288:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":534,"mutability":"mutable","name":"to","nameLocation":"6310:2:2","nodeType":"VariableDeclaration","scope":606,"src":"6302:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":533,"name":"address","nodeType":"ElementaryTypeName","src":"6302:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":536,"mutability":"mutable","name":"value","nameLocation":"6322:5:2","nodeType":"VariableDeclaration","scope":606,"src":"6314:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":535,"name":"uint256","nodeType":"ElementaryTypeName","src":"6314:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6287:41:2"},"returnParameters":{"id":538,"nodeType":"ParameterList","parameters":[],"src":"6346:0:2"},"scope":799,"src":"6271:1107:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":638,"nodeType":"Block","src":"7777:152:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":614,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"7791:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7810:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":616,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7802:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":615,"name":"address","nodeType":"ElementaryTypeName","src":"7802:7:2","typeDescriptions":{}}},"id":618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7802:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7791:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":628,"nodeType":"IfStatement","src":"7787:91:2","trueBody":{"id":627,"nodeType":"Block","src":"7814:64:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7864:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":622,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7856:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":621,"name":"address","nodeType":"ElementaryTypeName","src":"7856:7:2","typeDescriptions":{}}},"id":624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7856:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":620,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"7835:20:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7835:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":626,"nodeType":"RevertStatement","src":"7828:39:2"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7903:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":631,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7895:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":630,"name":"address","nodeType":"ElementaryTypeName","src":"7895:7:2","typeDescriptions":{}}},"id":633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7895:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":634,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"7907:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":635,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":611,"src":"7916:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":629,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"7887:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7887:35:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":637,"nodeType":"ExpressionStatement","src":"7887:35:2"}]},"documentation":{"id":607,"nodeType":"StructuredDocumentation","src":"7384:332:2","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":639,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7730:5:2","nodeType":"FunctionDefinition","parameters":{"id":612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":609,"mutability":"mutable","name":"account","nameLocation":"7744:7:2","nodeType":"VariableDeclaration","scope":639,"src":"7736:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":608,"name":"address","nodeType":"ElementaryTypeName","src":"7736:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":611,"mutability":"mutable","name":"value","nameLocation":"7761:5:2","nodeType":"VariableDeclaration","scope":639,"src":"7753:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":610,"name":"uint256","nodeType":"ElementaryTypeName","src":"7753:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7735:32:2"},"returnParameters":{"id":613,"nodeType":"ParameterList","parameters":[],"src":"7777:0:2"},"scope":799,"src":"7721:208:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":671,"nodeType":"Block","src":"8303:150:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":647,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"8317:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8336:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":649,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8328:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":648,"name":"address","nodeType":"ElementaryTypeName","src":"8328:7:2","typeDescriptions":{}}},"id":651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8328:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8317:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":661,"nodeType":"IfStatement","src":"8313:89:2","trueBody":{"id":660,"nodeType":"Block","src":"8340:62:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8388:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":655,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8380:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":654,"name":"address","nodeType":"ElementaryTypeName","src":"8380:7:2","typeDescriptions":{}}},"id":657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8380:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":653,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":164,"src":"8361:18:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8361:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":659,"nodeType":"RevertStatement","src":"8354:37:2"}]}},{"expression":{"arguments":[{"id":663,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"8419:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8436:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":665,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8428:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":664,"name":"address","nodeType":"ElementaryTypeName","src":"8428:7:2","typeDescriptions":{}}},"id":667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8428:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":668,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"8440:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":662,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"8411:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8411:35:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":670,"nodeType":"ExpressionStatement","src":"8411:35:2"}]},"documentation":{"id":640,"nodeType":"StructuredDocumentation","src":"7935:307:2","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":672,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"8256:5:2","nodeType":"FunctionDefinition","parameters":{"id":645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":642,"mutability":"mutable","name":"account","nameLocation":"8270:7:2","nodeType":"VariableDeclaration","scope":672,"src":"8262:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":641,"name":"address","nodeType":"ElementaryTypeName","src":"8262:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":644,"mutability":"mutable","name":"value","nameLocation":"8287:5:2","nodeType":"VariableDeclaration","scope":672,"src":"8279:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":643,"name":"uint256","nodeType":"ElementaryTypeName","src":"8279:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8261:32:2"},"returnParameters":{"id":646,"nodeType":"ParameterList","parameters":[],"src":"8303:0:2"},"scope":799,"src":"8247:206:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":689,"nodeType":"Block","src":"9063:54:2","statements":[{"expression":{"arguments":[{"id":683,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":675,"src":"9082:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":684,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":677,"src":"9089:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":685,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":679,"src":"9098:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9105:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":682,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[690,750],"referencedDeclaration":750,"src":"9073:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9073:37:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":688,"nodeType":"ExpressionStatement","src":"9073:37:2"}]},"documentation":{"id":673,"nodeType":"StructuredDocumentation","src":"8459:525:2","text":" @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":690,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"8998:8:2","nodeType":"FunctionDefinition","parameters":{"id":680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":675,"mutability":"mutable","name":"owner","nameLocation":"9015:5:2","nodeType":"VariableDeclaration","scope":690,"src":"9007:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":674,"name":"address","nodeType":"ElementaryTypeName","src":"9007:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":677,"mutability":"mutable","name":"spender","nameLocation":"9030:7:2","nodeType":"VariableDeclaration","scope":690,"src":"9022:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":676,"name":"address","nodeType":"ElementaryTypeName","src":"9022:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":679,"mutability":"mutable","name":"value","nameLocation":"9047:5:2","nodeType":"VariableDeclaration","scope":690,"src":"9039:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":678,"name":"uint256","nodeType":"ElementaryTypeName","src":"9039:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9006:47:2"},"returnParameters":{"id":681,"nodeType":"ParameterList","parameters":[],"src":"9063:0:2"},"scope":799,"src":"8989:128:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":749,"nodeType":"Block","src":"10047:334:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":702,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":693,"src":"10061:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10078:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":704,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10070:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":703,"name":"address","nodeType":"ElementaryTypeName","src":"10070:7:2","typeDescriptions":{}}},"id":706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10070:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10061:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":716,"nodeType":"IfStatement","src":"10057:89:2","trueBody":{"id":715,"nodeType":"Block","src":"10082:64:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10132:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":710,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10124:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":709,"name":"address","nodeType":"ElementaryTypeName","src":"10124:7:2","typeDescriptions":{}}},"id":712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10124:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":708,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":183,"src":"10103:20:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10103:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":714,"nodeType":"RevertStatement","src":"10096:39:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":717,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":695,"src":"10159:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10178:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":719,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10170:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":718,"name":"address","nodeType":"ElementaryTypeName","src":"10170:7:2","typeDescriptions":{}}},"id":721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10170:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10159:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":731,"nodeType":"IfStatement","src":"10155:90:2","trueBody":{"id":730,"nodeType":"Block","src":"10182:63:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10231:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":725,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10223:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":724,"name":"address","nodeType":"ElementaryTypeName","src":"10223:7:2","typeDescriptions":{}}},"id":727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10223:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":723,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":188,"src":"10203:19:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10203:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":729,"nodeType":"RevertStatement","src":"10196:38:2"}]}},{"expression":{"id":738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":732,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":313,"src":"10254:11:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":735,"indexExpression":{"id":733,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":693,"src":"10266:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10254:18:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":736,"indexExpression":{"id":734,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":695,"src":"10273:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10254:27:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":737,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":697,"src":"10284:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10254:35:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":739,"nodeType":"ExpressionStatement","src":"10254:35:2"},{"condition":{"id":740,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":699,"src":"10303:9:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":748,"nodeType":"IfStatement","src":"10299:76:2","trueBody":{"id":747,"nodeType":"Block","src":"10314:61:2","statements":[{"eventCall":{"arguments":[{"id":742,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":693,"src":"10342:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":743,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":695,"src":"10349:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":744,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":697,"src":"10358:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":741,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":820,"src":"10333:8:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10333:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":746,"nodeType":"EmitStatement","src":"10328:36:2"}]}}]},"documentation":{"id":691,"nodeType":"StructuredDocumentation","src":"9123:821:2","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":750,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"9958:8:2","nodeType":"FunctionDefinition","parameters":{"id":700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":693,"mutability":"mutable","name":"owner","nameLocation":"9975:5:2","nodeType":"VariableDeclaration","scope":750,"src":"9967:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":692,"name":"address","nodeType":"ElementaryTypeName","src":"9967:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":695,"mutability":"mutable","name":"spender","nameLocation":"9990:7:2","nodeType":"VariableDeclaration","scope":750,"src":"9982:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":694,"name":"address","nodeType":"ElementaryTypeName","src":"9982:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":697,"mutability":"mutable","name":"value","nameLocation":"10007:5:2","nodeType":"VariableDeclaration","scope":750,"src":"9999:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":696,"name":"uint256","nodeType":"ElementaryTypeName","src":"9999:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":699,"mutability":"mutable","name":"emitEvent","nameLocation":"10019:9:2","nodeType":"VariableDeclaration","scope":750,"src":"10014:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":698,"name":"bool","nodeType":"ElementaryTypeName","src":"10014:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9966:63:2"},"returnParameters":{"id":701,"nodeType":"ParameterList","parameters":[],"src":"10047:0:2"},"scope":799,"src":"9949:432:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":797,"nodeType":"Block","src":"10752:388:2","statements":[{"assignments":[761],"declarations":[{"constant":false,"id":761,"mutability":"mutable","name":"currentAllowance","nameLocation":"10770:16:2","nodeType":"VariableDeclaration","scope":797,"src":"10762:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":760,"name":"uint256","nodeType":"ElementaryTypeName","src":"10762:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":766,"initialValue":{"arguments":[{"id":763,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"10799:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":764,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"10806:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":762,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":426,"src":"10789:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10789:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10762:52:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":767,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"10828:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":770,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10853:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":769,"name":"uint256","nodeType":"ElementaryTypeName","src":"10853:7:2","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":768,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10848:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10848:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":772,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10862:3:2","memberName":"max","nodeType":"MemberAccess","src":"10848:17:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10828:37:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":796,"nodeType":"IfStatement","src":"10824:310:2","trueBody":{"id":795,"nodeType":"Block","src":"10867:267:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":774,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"10885:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":775,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"10904:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10885:24:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":784,"nodeType":"IfStatement","src":"10881:130:2","trueBody":{"id":783,"nodeType":"Block","src":"10911:100:2","statements":[{"errorCall":{"arguments":[{"id":778,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"10963:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":779,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"10972:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":780,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"10990:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":777,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":178,"src":"10936:26:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10936:60:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":782,"nodeType":"RevertStatement","src":"10929:67:2"}]}},{"id":794,"nodeType":"UncheckedBlock","src":"11024:100:2","statements":[{"expression":{"arguments":[{"id":786,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"11061:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":787,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"11068:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":788,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"11077:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":789,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"11096:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11077:24:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11103:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":785,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[690,750],"referencedDeclaration":750,"src":"11052:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11052:57:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":793,"nodeType":"ExpressionStatement","src":"11052:57:2"}]}]}}]},"documentation":{"id":751,"nodeType":"StructuredDocumentation","src":"10387:271:2","text":" @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":798,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"10672:15:2","nodeType":"FunctionDefinition","parameters":{"id":758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":753,"mutability":"mutable","name":"owner","nameLocation":"10696:5:2","nodeType":"VariableDeclaration","scope":798,"src":"10688:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":752,"name":"address","nodeType":"ElementaryTypeName","src":"10688:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":755,"mutability":"mutable","name":"spender","nameLocation":"10711:7:2","nodeType":"VariableDeclaration","scope":798,"src":"10703:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":754,"name":"address","nodeType":"ElementaryTypeName","src":"10703:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":757,"mutability":"mutable","name":"value","nameLocation":"10728:5:2","nodeType":"VariableDeclaration","scope":798,"src":"10720:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":756,"name":"uint256","nodeType":"ElementaryTypeName","src":"10720:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10687:47:2"},"returnParameters":{"id":759,"nodeType":"ParameterList","parameters":[],"src":"10752:0:2"},"scope":799,"src":"10663:477:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":800,"src":"1401:9741:2","usedErrors":[159,164,169,178,183,188],"usedEvents":[811,820]}],"src":"105:11038:2"},"id":2},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[877]},"id":878,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":801,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:3"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":802,"nodeType":"StructuredDocumentation","src":"132:70:3","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":877,"linearizedBaseContracts":[877],"name":"IERC20","nameLocation":"213:6:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":803,"nodeType":"StructuredDocumentation","src":"226:158:3","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":811,"name":"Transfer","nameLocation":"395:8:3","nodeType":"EventDefinition","parameters":{"id":810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":805,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"420:4:3","nodeType":"VariableDeclaration","scope":811,"src":"404:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":804,"name":"address","nodeType":"ElementaryTypeName","src":"404:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":807,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"442:2:3","nodeType":"VariableDeclaration","scope":811,"src":"426:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":806,"name":"address","nodeType":"ElementaryTypeName","src":"426:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":809,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"454:5:3","nodeType":"VariableDeclaration","scope":811,"src":"446:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":808,"name":"uint256","nodeType":"ElementaryTypeName","src":"446:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"403:57:3"},"src":"389:72:3"},{"anonymous":false,"documentation":{"id":812,"nodeType":"StructuredDocumentation","src":"467:148:3","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":820,"name":"Approval","nameLocation":"626:8:3","nodeType":"EventDefinition","parameters":{"id":819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":814,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"651:5:3","nodeType":"VariableDeclaration","scope":820,"src":"635:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":813,"name":"address","nodeType":"ElementaryTypeName","src":"635:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":816,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"674:7:3","nodeType":"VariableDeclaration","scope":820,"src":"658:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":815,"name":"address","nodeType":"ElementaryTypeName","src":"658:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":818,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"691:5:3","nodeType":"VariableDeclaration","scope":820,"src":"683:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":817,"name":"uint256","nodeType":"ElementaryTypeName","src":"683:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"634:63:3"},"src":"620:78:3"},{"documentation":{"id":821,"nodeType":"StructuredDocumentation","src":"704:65:3","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":826,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:3","nodeType":"FunctionDefinition","parameters":{"id":822,"nodeType":"ParameterList","parameters":[],"src":"794:2:3"},"returnParameters":{"id":825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":824,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":826,"src":"820:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":823,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:3"},"scope":877,"src":"774:55:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":827,"nodeType":"StructuredDocumentation","src":"835:71:3","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":834,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"920:9:3","nodeType":"FunctionDefinition","parameters":{"id":830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":829,"mutability":"mutable","name":"account","nameLocation":"938:7:3","nodeType":"VariableDeclaration","scope":834,"src":"930:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":828,"name":"address","nodeType":"ElementaryTypeName","src":"930:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"929:17:3"},"returnParameters":{"id":833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":832,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":834,"src":"970:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":831,"name":"uint256","nodeType":"ElementaryTypeName","src":"970:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"969:9:3"},"scope":877,"src":"911:68:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":835,"nodeType":"StructuredDocumentation","src":"985:213:3","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":844,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1212:8:3","nodeType":"FunctionDefinition","parameters":{"id":840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":837,"mutability":"mutable","name":"to","nameLocation":"1229:2:3","nodeType":"VariableDeclaration","scope":844,"src":"1221:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":836,"name":"address","nodeType":"ElementaryTypeName","src":"1221:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":839,"mutability":"mutable","name":"value","nameLocation":"1241:5:3","nodeType":"VariableDeclaration","scope":844,"src":"1233:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":838,"name":"uint256","nodeType":"ElementaryTypeName","src":"1233:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1220:27:3"},"returnParameters":{"id":843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":842,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":844,"src":"1266:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":841,"name":"bool","nodeType":"ElementaryTypeName","src":"1266:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1265:6:3"},"scope":877,"src":"1203:69:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":845,"nodeType":"StructuredDocumentation","src":"1278:264:3","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":854,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1556:9:3","nodeType":"FunctionDefinition","parameters":{"id":850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":847,"mutability":"mutable","name":"owner","nameLocation":"1574:5:3","nodeType":"VariableDeclaration","scope":854,"src":"1566:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":846,"name":"address","nodeType":"ElementaryTypeName","src":"1566:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":849,"mutability":"mutable","name":"spender","nameLocation":"1589:7:3","nodeType":"VariableDeclaration","scope":854,"src":"1581:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":848,"name":"address","nodeType":"ElementaryTypeName","src":"1581:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1565:32:3"},"returnParameters":{"id":853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":852,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":854,"src":"1621:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":851,"name":"uint256","nodeType":"ElementaryTypeName","src":"1621:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1620:9:3"},"scope":877,"src":"1547:83:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":855,"nodeType":"StructuredDocumentation","src":"1636:667:3","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":864,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2317:7:3","nodeType":"FunctionDefinition","parameters":{"id":860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":857,"mutability":"mutable","name":"spender","nameLocation":"2333:7:3","nodeType":"VariableDeclaration","scope":864,"src":"2325:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":856,"name":"address","nodeType":"ElementaryTypeName","src":"2325:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":859,"mutability":"mutable","name":"value","nameLocation":"2350:5:3","nodeType":"VariableDeclaration","scope":864,"src":"2342:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":858,"name":"uint256","nodeType":"ElementaryTypeName","src":"2342:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2324:32:3"},"returnParameters":{"id":863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":862,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":864,"src":"2375:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":861,"name":"bool","nodeType":"ElementaryTypeName","src":"2375:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2374:6:3"},"scope":877,"src":"2308:73:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":865,"nodeType":"StructuredDocumentation","src":"2387:297:3","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":876,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2698:12:3","nodeType":"FunctionDefinition","parameters":{"id":872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":867,"mutability":"mutable","name":"from","nameLocation":"2719:4:3","nodeType":"VariableDeclaration","scope":876,"src":"2711:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":866,"name":"address","nodeType":"ElementaryTypeName","src":"2711:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":869,"mutability":"mutable","name":"to","nameLocation":"2733:2:3","nodeType":"VariableDeclaration","scope":876,"src":"2725:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":868,"name":"address","nodeType":"ElementaryTypeName","src":"2725:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":871,"mutability":"mutable","name":"value","nameLocation":"2745:5:3","nodeType":"VariableDeclaration","scope":876,"src":"2737:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":870,"name":"uint256","nodeType":"ElementaryTypeName","src":"2737:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2710:41:3"},"returnParameters":{"id":875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":874,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":876,"src":"2770:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":873,"name":"bool","nodeType":"ElementaryTypeName","src":"2770:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2769:6:3"},"scope":877,"src":"2689:87:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":878,"src":"203:2575:3","usedErrors":[],"usedEvents":[811,820]}],"src":"106:2673:3"},"id":3},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[877],"IERC20Metadata":[903]},"id":904,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":879,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"125:24:4"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":881,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":904,"sourceUnit":878,"src":"151:37:4","symbolAliases":[{"foreign":{"id":880,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":877,"src":"159:6:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":883,"name":"IERC20","nameLocations":["305:6:4"],"nodeType":"IdentifierPath","referencedDeclaration":877,"src":"305:6:4"},"id":884,"nodeType":"InheritanceSpecifier","src":"305:6:4"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":882,"nodeType":"StructuredDocumentation","src":"190:86:4","text":" @dev Interface for the optional metadata functions from the ERC20 standard."},"fullyImplemented":false,"id":903,"linearizedBaseContracts":[903,877],"name":"IERC20Metadata","nameLocation":"287:14:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":885,"nodeType":"StructuredDocumentation","src":"318:54:4","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":890,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:4","nodeType":"FunctionDefinition","parameters":{"id":886,"nodeType":"ParameterList","parameters":[],"src":"390:2:4"},"returnParameters":{"id":889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":888,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":890,"src":"416:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":887,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:4"},"scope":903,"src":"377:54:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":891,"nodeType":"StructuredDocumentation","src":"437:56:4","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":896,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:4","nodeType":"FunctionDefinition","parameters":{"id":892,"nodeType":"ParameterList","parameters":[],"src":"513:2:4"},"returnParameters":{"id":895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":894,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":896,"src":"539:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":893,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:4"},"scope":903,"src":"498:56:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":897,"nodeType":"StructuredDocumentation","src":"560:65:4","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":902,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:4","nodeType":"FunctionDefinition","parameters":{"id":898,"nodeType":"ParameterList","parameters":[],"src":"647:2:4"},"returnParameters":{"id":901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":900,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":902,"src":"673:5:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":899,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:4"},"scope":903,"src":"630:50:4","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":904,"src":"277:405:4","usedErrors":[],"usedEvents":[811,820]}],"src":"125:558:4"},"id":4},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[933]},"id":934,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":905,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:5"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":906,"nodeType":"StructuredDocumentation","src":"127:496:5","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":933,"linearizedBaseContracts":[933],"name":"Context","nameLocation":"642:7:5","nodeType":"ContractDefinition","nodes":[{"body":{"id":914,"nodeType":"Block","src":"718:34:5","statements":[{"expression":{"expression":{"id":911,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:5","memberName":"sender","nodeType":"MemberAccess","src":"735:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":910,"id":913,"nodeType":"Return","src":"728:17:5"}]},"id":915,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:5","nodeType":"FunctionDefinition","parameters":{"id":907,"nodeType":"ParameterList","parameters":[],"src":"675:2:5"},"returnParameters":{"id":910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":909,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":915,"src":"709:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":908,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:5"},"scope":933,"src":"656:96:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":923,"nodeType":"Block","src":"825:32:5","statements":[{"expression":{"expression":{"id":920,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:5","memberName":"data","nodeType":"MemberAccess","src":"842:8:5","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":919,"id":922,"nodeType":"Return","src":"835:15:5"}]},"id":924,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:5","nodeType":"FunctionDefinition","parameters":{"id":916,"nodeType":"ParameterList","parameters":[],"src":"775:2:5"},"returnParameters":{"id":919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":918,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":924,"src":"809:14:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":917,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:5"},"scope":933,"src":"758:99:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":931,"nodeType":"Block","src":"935:25:5","statements":[{"expression":{"hexValue":"30","id":929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":928,"id":930,"nodeType":"Return","src":"945:8:5"}]},"id":932,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:5","nodeType":"FunctionDefinition","parameters":{"id":925,"nodeType":"ParameterList","parameters":[],"src":"892:2:5"},"returnParameters":{"id":928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":927,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":932,"src":"926:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":926,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:5"},"scope":933,"src":"863:97:5","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":934,"src":"624:338:5","usedErrors":[],"usedEvents":[]}],"src":"101:862:5"},"id":5},"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol","exportedSymbols":{"MerkleProof":[1470]},"id":1471,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":935,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"118:24:6"},{"abstract":false,"baseContracts":[],"canonicalName":"MerkleProof","contractDependencies":[],"contractKind":"library","documentation":{"id":936,"nodeType":"StructuredDocumentation","src":"144:658:6","text":" @dev These functions deal with verification of Merkle Tree proofs.\n The tree and the proofs can be generated using our\n https://github.com/OpenZeppelin/merkle-tree[JavaScript library].\n You will find a quickstart guide in the readme.\n WARNING: You should avoid using leaf values that are 64 bytes long prior to\n hashing, or use a hash function other than keccak256 for hashing leaves.\n This is because the concatenation of a sorted pair of internal nodes in\n the Merkle tree could be reinterpreted as a leaf value.\n OpenZeppelin's JavaScript library generates Merkle trees that are safe\n against this attack out of the box."},"fullyImplemented":true,"id":1470,"linearizedBaseContracts":[1470],"name":"MerkleProof","nameLocation":"811:11:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":937,"nodeType":"StructuredDocumentation","src":"829:60:6","text":"@dev The multiproof provided is not valid."},"errorSelector":"35140492","id":939,"name":"MerkleProofInvalidMultiproof","nameLocation":"900:28:6","nodeType":"ErrorDefinition","parameters":{"id":938,"nodeType":"ParameterList","parameters":[],"src":"928:2:6"},"src":"894:37:6"},{"body":{"id":959,"nodeType":"Block","src":"1362:57:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":953,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":943,"src":"1392:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":954,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":947,"src":"1399:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":952,"name":"processProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"1379:12:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32[] memory,bytes32) pure returns (bytes32)"}},"id":955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1379:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":956,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":945,"src":"1408:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1379:33:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":951,"id":958,"nodeType":"Return","src":"1372:40:6"}]},"documentation":{"id":940,"nodeType":"StructuredDocumentation","src":"937:323:6","text":" @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n defined by `root`. For this, a `proof` must be provided, containing\n sibling hashes on the branch from the leaf to the root of the tree. Each\n pair of leaves and each pair of pre-images are assumed to be sorted."},"id":960,"implemented":true,"kind":"function","modifiers":[],"name":"verify","nameLocation":"1274:6:6","nodeType":"FunctionDefinition","parameters":{"id":948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":943,"mutability":"mutable","name":"proof","nameLocation":"1298:5:6","nodeType":"VariableDeclaration","scope":960,"src":"1281:22:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":941,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1281:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":942,"nodeType":"ArrayTypeName","src":"1281:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":945,"mutability":"mutable","name":"root","nameLocation":"1313:4:6","nodeType":"VariableDeclaration","scope":960,"src":"1305:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":944,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1305:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":947,"mutability":"mutable","name":"leaf","nameLocation":"1327:4:6","nodeType":"VariableDeclaration","scope":960,"src":"1319:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":946,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1319:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1280:52:6"},"returnParameters":{"id":951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":950,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":960,"src":"1356:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":949,"name":"bool","nodeType":"ElementaryTypeName","src":"1356:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1355:6:6"},"scope":1470,"src":"1265:154:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":980,"nodeType":"Block","src":"1589:65:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":974,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":964,"src":"1627:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":975,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":968,"src":"1634:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":973,"name":"processProofCalldata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1061,"src":"1606:20:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32[] calldata,bytes32) pure returns (bytes32)"}},"id":976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1606:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":977,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"1643:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1606:41:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":972,"id":979,"nodeType":"Return","src":"1599:48:6"}]},"documentation":{"id":961,"nodeType":"StructuredDocumentation","src":"1425:52:6","text":" @dev Calldata version of {verify}"},"id":981,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCalldata","nameLocation":"1491:14:6","nodeType":"FunctionDefinition","parameters":{"id":969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":964,"mutability":"mutable","name":"proof","nameLocation":"1525:5:6","nodeType":"VariableDeclaration","scope":981,"src":"1506:24:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":962,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1506:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":963,"nodeType":"ArrayTypeName","src":"1506:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":966,"mutability":"mutable","name":"root","nameLocation":"1540:4:6","nodeType":"VariableDeclaration","scope":981,"src":"1532:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":965,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1532:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":968,"mutability":"mutable","name":"leaf","nameLocation":"1554:4:6","nodeType":"VariableDeclaration","scope":981,"src":"1546:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":967,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1546:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1505:54:6"},"returnParameters":{"id":972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":971,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":981,"src":"1583:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":970,"name":"bool","nodeType":"ElementaryTypeName","src":"1583:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1582:6:6"},"scope":1470,"src":"1482:172:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1020,"nodeType":"Block","src":"2059:198:6","statements":[{"assignments":[993],"declarations":[{"constant":false,"id":993,"mutability":"mutable","name":"computedHash","nameLocation":"2077:12:6","nodeType":"VariableDeclaration","scope":1020,"src":"2069:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":992,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2069:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":995,"initialValue":{"id":994,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":987,"src":"2092:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2069:27:6"},{"body":{"id":1016,"nodeType":"Block","src":"2149:73:6","statements":[{"expression":{"id":1014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1007,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":993,"src":"2163:12:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1009,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":993,"src":"2188:12:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":1010,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"2202:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1012,"indexExpression":{"id":1011,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":997,"src":"2208:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2202:8:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1008,"name":"_hashPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1457,"src":"2178:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":1013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2178:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2163:48:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1015,"nodeType":"ExpressionStatement","src":"2163:48:6"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1000,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":997,"src":"2126:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1001,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"2130:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2136:6:6","memberName":"length","nodeType":"MemberAccess","src":"2130:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2126:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1017,"initializationExpression":{"assignments":[997],"declarations":[{"constant":false,"id":997,"mutability":"mutable","name":"i","nameLocation":"2119:1:6","nodeType":"VariableDeclaration","scope":1017,"src":"2111:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":996,"name":"uint256","nodeType":"ElementaryTypeName","src":"2111:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":999,"initialValue":{"hexValue":"30","id":998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2123:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2111:13:6"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":1005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2144:3:6","subExpression":{"id":1004,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":997,"src":"2144:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1006,"nodeType":"ExpressionStatement","src":"2144:3:6"},"nodeType":"ForStatement","src":"2106:116:6"},{"expression":{"id":1018,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":993,"src":"2238:12:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":991,"id":1019,"nodeType":"Return","src":"2231:19:6"}]},"documentation":{"id":982,"nodeType":"StructuredDocumentation","src":"1660:302:6","text":" @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n hash matches the root of the tree. When processing the proof, the pairs\n of leafs & pre-images are assumed to be sorted."},"id":1021,"implemented":true,"kind":"function","modifiers":[],"name":"processProof","nameLocation":"1976:12:6","nodeType":"FunctionDefinition","parameters":{"id":988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":985,"mutability":"mutable","name":"proof","nameLocation":"2006:5:6","nodeType":"VariableDeclaration","scope":1021,"src":"1989:22:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":983,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1989:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":984,"nodeType":"ArrayTypeName","src":"1989:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":987,"mutability":"mutable","name":"leaf","nameLocation":"2021:4:6","nodeType":"VariableDeclaration","scope":1021,"src":"2013:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":986,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2013:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1988:38:6"},"returnParameters":{"id":991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":990,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1021,"src":"2050:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":989,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2050:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2049:9:6"},"scope":1470,"src":"1967:290:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1060,"nodeType":"Block","src":"2428:198:6","statements":[{"assignments":[1033],"declarations":[{"constant":false,"id":1033,"mutability":"mutable","name":"computedHash","nameLocation":"2446:12:6","nodeType":"VariableDeclaration","scope":1060,"src":"2438:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1032,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2438:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1035,"initialValue":{"id":1034,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1027,"src":"2461:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2438:27:6"},{"body":{"id":1056,"nodeType":"Block","src":"2518:73:6","statements":[{"expression":{"id":1054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1047,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"2532:12:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1049,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"2557:12:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":1050,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1025,"src":"2571:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":1052,"indexExpression":{"id":1051,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1037,"src":"2577:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2571:8:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1048,"name":"_hashPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1457,"src":"2547:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":1053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2547:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2532:48:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1055,"nodeType":"ExpressionStatement","src":"2532:48:6"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1040,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1037,"src":"2495:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1041,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1025,"src":"2499:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":1042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2505:6:6","memberName":"length","nodeType":"MemberAccess","src":"2499:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2495:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1057,"initializationExpression":{"assignments":[1037],"declarations":[{"constant":false,"id":1037,"mutability":"mutable","name":"i","nameLocation":"2488:1:6","nodeType":"VariableDeclaration","scope":1057,"src":"2480:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1036,"name":"uint256","nodeType":"ElementaryTypeName","src":"2480:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1039,"initialValue":{"hexValue":"30","id":1038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2492:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2480:13:6"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":1045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2513:3:6","subExpression":{"id":1044,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1037,"src":"2513:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1046,"nodeType":"ExpressionStatement","src":"2513:3:6"},"nodeType":"ForStatement","src":"2475:116:6"},{"expression":{"id":1058,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"2607:12:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1031,"id":1059,"nodeType":"Return","src":"2600:19:6"}]},"documentation":{"id":1022,"nodeType":"StructuredDocumentation","src":"2263:58:6","text":" @dev Calldata version of {processProof}"},"id":1061,"implemented":true,"kind":"function","modifiers":[],"name":"processProofCalldata","nameLocation":"2335:20:6","nodeType":"FunctionDefinition","parameters":{"id":1028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1025,"mutability":"mutable","name":"proof","nameLocation":"2375:5:6","nodeType":"VariableDeclaration","scope":1061,"src":"2356:24:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1023,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2356:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1024,"nodeType":"ArrayTypeName","src":"2356:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1027,"mutability":"mutable","name":"leaf","nameLocation":"2390:4:6","nodeType":"VariableDeclaration","scope":1061,"src":"2382:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1026,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2382:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2355:40:6"},"returnParameters":{"id":1031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1030,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1061,"src":"2419:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1029,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2419:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2418:9:6"},"scope":1470,"src":"2326:300:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1086,"nodeType":"Block","src":"3131:76:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1079,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"3166:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":1080,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"3173:10:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},{"id":1081,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1073,"src":"3185:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":1078,"name":"processMultiProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1273,"src":"3148:17:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_array$_t_bool_$dyn_memory_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes32[] memory,bool[] memory,bytes32[] memory) pure returns (bytes32)"}},"id":1082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3148:44:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1083,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"3196:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3148:52:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1077,"id":1085,"nodeType":"Return","src":"3141:59:6"}]},"documentation":{"id":1062,"nodeType":"StructuredDocumentation","src":"2632:312:6","text":" @dev Returns true if the `leaves` can be simultaneously proven to be a part of a Merkle tree defined by\n `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details."},"id":1087,"implemented":true,"kind":"function","modifiers":[],"name":"multiProofVerify","nameLocation":"2958:16:6","nodeType":"FunctionDefinition","parameters":{"id":1074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1065,"mutability":"mutable","name":"proof","nameLocation":"3001:5:6","nodeType":"VariableDeclaration","scope":1087,"src":"2984:22:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1063,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2984:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1064,"nodeType":"ArrayTypeName","src":"2984:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1068,"mutability":"mutable","name":"proofFlags","nameLocation":"3030:10:6","nodeType":"VariableDeclaration","scope":1087,"src":"3016:24:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":1066,"name":"bool","nodeType":"ElementaryTypeName","src":"3016:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1067,"nodeType":"ArrayTypeName","src":"3016:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":1070,"mutability":"mutable","name":"root","nameLocation":"3058:4:6","nodeType":"VariableDeclaration","scope":1087,"src":"3050:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1069,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3050:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1073,"mutability":"mutable","name":"leaves","nameLocation":"3089:6:6","nodeType":"VariableDeclaration","scope":1087,"src":"3072:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1071,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3072:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1072,"nodeType":"ArrayTypeName","src":"3072:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"2974:127:6"},"returnParameters":{"id":1077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1076,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1087,"src":"3125:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1075,"name":"bool","nodeType":"ElementaryTypeName","src":"3125:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3124:6:6"},"scope":1470,"src":"2949:258:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1112,"nodeType":"Block","src":"3574:84:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1105,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1091,"src":"3617:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":1106,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1094,"src":"3624:10:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},{"id":1107,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1099,"src":"3636:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":1104,"name":"processMultiProofCalldata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"3591:25:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_array$_t_bool_$dyn_calldata_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes32[] calldata,bool[] calldata,bytes32[] memory) pure returns (bytes32)"}},"id":1108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3591:52:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1109,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"3647:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3591:60:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1103,"id":1111,"nodeType":"Return","src":"3584:67:6"}]},"documentation":{"id":1088,"nodeType":"StructuredDocumentation","src":"3213:162:6","text":" @dev Calldata version of {multiProofVerify}\n CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details."},"id":1113,"implemented":true,"kind":"function","modifiers":[],"name":"multiProofVerifyCalldata","nameLocation":"3389:24:6","nodeType":"FunctionDefinition","parameters":{"id":1100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1091,"mutability":"mutable","name":"proof","nameLocation":"3442:5:6","nodeType":"VariableDeclaration","scope":1113,"src":"3423:24:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1089,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3423:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1090,"nodeType":"ArrayTypeName","src":"3423:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1094,"mutability":"mutable","name":"proofFlags","nameLocation":"3473:10:6","nodeType":"VariableDeclaration","scope":1113,"src":"3457:26:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":1092,"name":"bool","nodeType":"ElementaryTypeName","src":"3457:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1093,"nodeType":"ArrayTypeName","src":"3457:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":1096,"mutability":"mutable","name":"root","nameLocation":"3501:4:6","nodeType":"VariableDeclaration","scope":1113,"src":"3493:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1095,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3493:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1099,"mutability":"mutable","name":"leaves","nameLocation":"3532:6:6","nodeType":"VariableDeclaration","scope":1113,"src":"3515:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1097,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3515:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1098,"nodeType":"ArrayTypeName","src":"3515:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"3413:131:6"},"returnParameters":{"id":1103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1102,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1113,"src":"3568:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1101,"name":"bool","nodeType":"ElementaryTypeName","src":"3568:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3567:6:6"},"scope":1470,"src":"3380:278:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1272,"nodeType":"Block","src":"4574:2107:6","statements":[{"assignments":[1129],"declarations":[{"constant":false,"id":1129,"mutability":"mutable","name":"leavesLen","nameLocation":"4966:9:6","nodeType":"VariableDeclaration","scope":1272,"src":"4958:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1128,"name":"uint256","nodeType":"ElementaryTypeName","src":"4958:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1132,"initialValue":{"expression":{"id":1130,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1123,"src":"4978:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4985:6:6","memberName":"length","nodeType":"MemberAccess","src":"4978:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4958:33:6"},{"assignments":[1134],"declarations":[{"constant":false,"id":1134,"mutability":"mutable","name":"proofLen","nameLocation":"5009:8:6","nodeType":"VariableDeclaration","scope":1272,"src":"5001:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1133,"name":"uint256","nodeType":"ElementaryTypeName","src":"5001:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1137,"initialValue":{"expression":{"id":1135,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"5020:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5026:6:6","memberName":"length","nodeType":"MemberAccess","src":"5020:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5001:31:6"},{"assignments":[1139],"declarations":[{"constant":false,"id":1139,"mutability":"mutable","name":"totalHashes","nameLocation":"5050:11:6","nodeType":"VariableDeclaration","scope":1272,"src":"5042:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1138,"name":"uint256","nodeType":"ElementaryTypeName","src":"5042:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1142,"initialValue":{"expression":{"id":1140,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1120,"src":"5064:10:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":1141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5075:6:6","memberName":"length","nodeType":"MemberAccess","src":"5064:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5042:39:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1143,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1129,"src":"5129:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1144,"name":"proofLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1134,"src":"5141:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5129:20:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1146,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"5153:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5167:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5153:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5129:39:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1154,"nodeType":"IfStatement","src":"5125:107:6","trueBody":{"id":1153,"nodeType":"Block","src":"5170:62:6","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1150,"name":"MerkleProofInvalidMultiproof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":939,"src":"5191:28:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5191:30:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1152,"nodeType":"RevertStatement","src":"5184:37:6"}]}},{"assignments":[1159],"declarations":[{"constant":false,"id":1159,"mutability":"mutable","name":"hashes","nameLocation":"5493:6:6","nodeType":"VariableDeclaration","scope":1272,"src":"5476:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1157,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5476:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1158,"nodeType":"ArrayTypeName","src":"5476:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":1165,"initialValue":{"arguments":[{"id":1163,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"5516:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1162,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5502:13:6","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":1160,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5506:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1161,"nodeType":"ArrayTypeName","src":"5506:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":1164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5502:26:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"5476:52:6"},{"assignments":[1167],"declarations":[{"constant":false,"id":1167,"mutability":"mutable","name":"leafPos","nameLocation":"5546:7:6","nodeType":"VariableDeclaration","scope":1272,"src":"5538:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1166,"name":"uint256","nodeType":"ElementaryTypeName","src":"5538:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1169,"initialValue":{"hexValue":"30","id":1168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5556:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5538:19:6"},{"assignments":[1171],"declarations":[{"constant":false,"id":1171,"mutability":"mutable","name":"hashPos","nameLocation":"5575:7:6","nodeType":"VariableDeclaration","scope":1272,"src":"5567:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1170,"name":"uint256","nodeType":"ElementaryTypeName","src":"5567:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1173,"initialValue":{"hexValue":"30","id":1172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5585:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5567:19:6"},{"assignments":[1175],"declarations":[{"constant":false,"id":1175,"mutability":"mutable","name":"proofPos","nameLocation":"5604:8:6","nodeType":"VariableDeclaration","scope":1272,"src":"5596:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1174,"name":"uint256","nodeType":"ElementaryTypeName","src":"5596:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1177,"initialValue":{"hexValue":"30","id":1176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5615:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5596:20:6"},{"body":{"id":1236,"nodeType":"Block","src":"6034:292:6","statements":[{"assignments":[1189],"declarations":[{"constant":false,"id":1189,"mutability":"mutable","name":"a","nameLocation":"6056:1:6","nodeType":"VariableDeclaration","scope":1236,"src":"6048:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1188,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6048:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1202,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1190,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"6060:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1191,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1129,"src":"6070:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6060:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1197,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"6102:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1200,"indexExpression":{"id":1199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6109:9:6","subExpression":{"id":1198,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1171,"src":"6109:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6102:17:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"6060:59:6","trueExpression":{"baseExpression":{"id":1193,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1123,"src":"6082:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1196,"indexExpression":{"id":1195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6089:9:6","subExpression":{"id":1194,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"6089:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6082:17:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"6048:71:6"},{"assignments":[1204],"declarations":[{"constant":false,"id":1204,"mutability":"mutable","name":"b","nameLocation":"6141:1:6","nodeType":"VariableDeclaration","scope":1236,"src":"6133:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1203,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6133:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1226,"initialValue":{"condition":{"baseExpression":{"id":1205,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1120,"src":"6145:10:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":1207,"indexExpression":{"id":1206,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"6156:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6145:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1221,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"6257:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1224,"indexExpression":{"id":1223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6263:10:6","subExpression":{"id":1222,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1175,"src":"6263:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6257:17:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"6145:129:6","trueExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1208,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"6178:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1209,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1129,"src":"6188:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6178:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1215,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"6220:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1218,"indexExpression":{"id":1217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6227:9:6","subExpression":{"id":1216,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1171,"src":"6227:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6220:17:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"6178:59:6","trueExpression":{"baseExpression":{"id":1211,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1123,"src":"6200:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1214,"indexExpression":{"id":1213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6207:9:6","subExpression":{"id":1212,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"6207:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6200:17:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1220,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6177:61:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"6133:141:6"},{"expression":{"id":1234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1227,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"6288:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1229,"indexExpression":{"id":1228,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"6295:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6288:9:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1231,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1189,"src":"6310:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1232,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1204,"src":"6313:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1230,"name":"_hashPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1457,"src":"6300:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":1233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6300:15:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6288:27:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1235,"nodeType":"ExpressionStatement","src":"6288:27:6"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1182,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"6012:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1183,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"6016:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6012:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1237,"initializationExpression":{"assignments":[1179],"declarations":[{"constant":false,"id":1179,"mutability":"mutable","name":"i","nameLocation":"6005:1:6","nodeType":"VariableDeclaration","scope":1237,"src":"5997:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1178,"name":"uint256","nodeType":"ElementaryTypeName","src":"5997:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1181,"initialValue":{"hexValue":"30","id":1180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6009:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5997:13:6"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":1186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6029:3:6","subExpression":{"id":1185,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"6029:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1187,"nodeType":"ExpressionStatement","src":"6029:3:6"},"nodeType":"ForStatement","src":"5992:334:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1238,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"6340:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6354:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6340:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1257,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1129,"src":"6573:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6585:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6573:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1269,"nodeType":"Block","src":"6635:40:6","statements":[{"expression":{"baseExpression":{"id":1265,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"6656:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1267,"indexExpression":{"hexValue":"30","id":1266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6662:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6656:8:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1127,"id":1268,"nodeType":"Return","src":"6649:15:6"}]},"id":1270,"nodeType":"IfStatement","src":"6569:106:6","trueBody":{"id":1264,"nodeType":"Block","src":"6588:41:6","statements":[{"expression":{"baseExpression":{"id":1260,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1123,"src":"6609:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1262,"indexExpression":{"hexValue":"30","id":1261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6616:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6609:9:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1127,"id":1263,"nodeType":"Return","src":"6602:16:6"}]}},"id":1271,"nodeType":"IfStatement","src":"6336:339:6","trueBody":{"id":1256,"nodeType":"Block","src":"6357:206:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1241,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1175,"src":"6375:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1242,"name":"proofLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1134,"src":"6387:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6375:20:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1248,"nodeType":"IfStatement","src":"6371:96:6","trueBody":{"id":1247,"nodeType":"Block","src":"6397:70:6","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1244,"name":"MerkleProofInvalidMultiproof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":939,"src":"6422:28:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6422:30:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1246,"nodeType":"RevertStatement","src":"6415:37:6"}]}},{"id":1255,"nodeType":"UncheckedBlock","src":"6480:73:6","statements":[{"expression":{"baseExpression":{"id":1249,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"6515:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1253,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1250,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"6522:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6536:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6522:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6515:23:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1127,"id":1254,"nodeType":"Return","src":"6508:30:6"}]}]}}]},"documentation":{"id":1114,"nodeType":"StructuredDocumentation","src":"3664:730:6","text":" @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n respectively.\n CAUTION: Not all Merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer)."},"id":1273,"implemented":true,"kind":"function","modifiers":[],"name":"processMultiProof","nameLocation":"4408:17:6","nodeType":"FunctionDefinition","parameters":{"id":1124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1117,"mutability":"mutable","name":"proof","nameLocation":"4452:5:6","nodeType":"VariableDeclaration","scope":1273,"src":"4435:22:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1115,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4435:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1116,"nodeType":"ArrayTypeName","src":"4435:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1120,"mutability":"mutable","name":"proofFlags","nameLocation":"4481:10:6","nodeType":"VariableDeclaration","scope":1273,"src":"4467:24:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":1118,"name":"bool","nodeType":"ElementaryTypeName","src":"4467:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1119,"nodeType":"ArrayTypeName","src":"4467:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":1123,"mutability":"mutable","name":"leaves","nameLocation":"4518:6:6","nodeType":"VariableDeclaration","scope":1273,"src":"4501:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1121,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4501:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1122,"nodeType":"ArrayTypeName","src":"4501:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4425:105:6"},"returnParameters":{"id":1127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1126,"mutability":"mutable","name":"merkleRoot","nameLocation":"4562:10:6","nodeType":"VariableDeclaration","scope":1273,"src":"4554:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1125,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4554:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4553:20:6"},"scope":1470,"src":"4399:2282:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1432,"nodeType":"Block","src":"7043:2107:6","statements":[{"assignments":[1289],"declarations":[{"constant":false,"id":1289,"mutability":"mutable","name":"leavesLen","nameLocation":"7435:9:6","nodeType":"VariableDeclaration","scope":1432,"src":"7427:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1288,"name":"uint256","nodeType":"ElementaryTypeName","src":"7427:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1292,"initialValue":{"expression":{"id":1290,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1283,"src":"7447:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7454:6:6","memberName":"length","nodeType":"MemberAccess","src":"7447:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7427:33:6"},{"assignments":[1294],"declarations":[{"constant":false,"id":1294,"mutability":"mutable","name":"proofLen","nameLocation":"7478:8:6","nodeType":"VariableDeclaration","scope":1432,"src":"7470:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1293,"name":"uint256","nodeType":"ElementaryTypeName","src":"7470:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1297,"initialValue":{"expression":{"id":1295,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1277,"src":"7489:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":1296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7495:6:6","memberName":"length","nodeType":"MemberAccess","src":"7489:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7470:31:6"},{"assignments":[1299],"declarations":[{"constant":false,"id":1299,"mutability":"mutable","name":"totalHashes","nameLocation":"7519:11:6","nodeType":"VariableDeclaration","scope":1432,"src":"7511:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1298,"name":"uint256","nodeType":"ElementaryTypeName","src":"7511:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1302,"initialValue":{"expression":{"id":1300,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1280,"src":"7533:10:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},"id":1301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7544:6:6","memberName":"length","nodeType":"MemberAccess","src":"7533:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7511:39:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1303,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1289,"src":"7598:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1304,"name":"proofLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"7610:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7598:20:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1306,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1299,"src":"7622:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7636:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7622:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7598:39:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1314,"nodeType":"IfStatement","src":"7594:107:6","trueBody":{"id":1313,"nodeType":"Block","src":"7639:62:6","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1310,"name":"MerkleProofInvalidMultiproof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":939,"src":"7660:28:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7660:30:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1312,"nodeType":"RevertStatement","src":"7653:37:6"}]}},{"assignments":[1319],"declarations":[{"constant":false,"id":1319,"mutability":"mutable","name":"hashes","nameLocation":"7962:6:6","nodeType":"VariableDeclaration","scope":1432,"src":"7945:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1317,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7945:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1318,"nodeType":"ArrayTypeName","src":"7945:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":1325,"initialValue":{"arguments":[{"id":1323,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1299,"src":"7985:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1322,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"7971:13:6","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":1320,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7975:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1321,"nodeType":"ArrayTypeName","src":"7975:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":1324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7971:26:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"7945:52:6"},{"assignments":[1327],"declarations":[{"constant":false,"id":1327,"mutability":"mutable","name":"leafPos","nameLocation":"8015:7:6","nodeType":"VariableDeclaration","scope":1432,"src":"8007:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1326,"name":"uint256","nodeType":"ElementaryTypeName","src":"8007:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1329,"initialValue":{"hexValue":"30","id":1328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8025:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8007:19:6"},{"assignments":[1331],"declarations":[{"constant":false,"id":1331,"mutability":"mutable","name":"hashPos","nameLocation":"8044:7:6","nodeType":"VariableDeclaration","scope":1432,"src":"8036:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1330,"name":"uint256","nodeType":"ElementaryTypeName","src":"8036:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1333,"initialValue":{"hexValue":"30","id":1332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8054:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8036:19:6"},{"assignments":[1335],"declarations":[{"constant":false,"id":1335,"mutability":"mutable","name":"proofPos","nameLocation":"8073:8:6","nodeType":"VariableDeclaration","scope":1432,"src":"8065:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1334,"name":"uint256","nodeType":"ElementaryTypeName","src":"8065:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1337,"initialValue":{"hexValue":"30","id":1336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8084:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8065:20:6"},{"body":{"id":1396,"nodeType":"Block","src":"8503:292:6","statements":[{"assignments":[1349],"declarations":[{"constant":false,"id":1349,"mutability":"mutable","name":"a","nameLocation":"8525:1:6","nodeType":"VariableDeclaration","scope":1396,"src":"8517:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1348,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8517:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1362,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1350,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1327,"src":"8529:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1351,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1289,"src":"8539:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8529:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1357,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1319,"src":"8571:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1360,"indexExpression":{"id":1359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8578:9:6","subExpression":{"id":1358,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1331,"src":"8578:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8571:17:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8529:59:6","trueExpression":{"baseExpression":{"id":1353,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1283,"src":"8551:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1356,"indexExpression":{"id":1355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8558:9:6","subExpression":{"id":1354,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1327,"src":"8558:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8551:17:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"8517:71:6"},{"assignments":[1364],"declarations":[{"constant":false,"id":1364,"mutability":"mutable","name":"b","nameLocation":"8610:1:6","nodeType":"VariableDeclaration","scope":1396,"src":"8602:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1363,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8602:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1386,"initialValue":{"condition":{"baseExpression":{"id":1365,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1280,"src":"8614:10:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},"id":1367,"indexExpression":{"id":1366,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1339,"src":"8625:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8614:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1381,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1277,"src":"8726:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":1384,"indexExpression":{"id":1383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8732:10:6","subExpression":{"id":1382,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"8732:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8726:17:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8614:129:6","trueExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1368,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1327,"src":"8647:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1369,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1289,"src":"8657:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8647:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":1375,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1319,"src":"8689:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1378,"indexExpression":{"id":1377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8696:9:6","subExpression":{"id":1376,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1331,"src":"8696:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8689:17:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8647:59:6","trueExpression":{"baseExpression":{"id":1371,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1283,"src":"8669:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1374,"indexExpression":{"id":1373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8676:9:6","subExpression":{"id":1372,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1327,"src":"8676:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8669:17:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1380,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8646:61:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"8602:141:6"},{"expression":{"id":1394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1387,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1319,"src":"8757:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1389,"indexExpression":{"id":1388,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1339,"src":"8764:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8757:9:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1391,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1349,"src":"8779:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1392,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1364,"src":"8782:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1390,"name":"_hashPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1457,"src":"8769:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":1393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8769:15:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"8757:27:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1395,"nodeType":"ExpressionStatement","src":"8757:27:6"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1342,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1339,"src":"8481:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1343,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1299,"src":"8485:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8481:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1397,"initializationExpression":{"assignments":[1339],"declarations":[{"constant":false,"id":1339,"mutability":"mutable","name":"i","nameLocation":"8474:1:6","nodeType":"VariableDeclaration","scope":1397,"src":"8466:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1338,"name":"uint256","nodeType":"ElementaryTypeName","src":"8466:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1341,"initialValue":{"hexValue":"30","id":1340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8478:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8466:13:6"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":1346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8498:3:6","subExpression":{"id":1345,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1339,"src":"8498:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1347,"nodeType":"ExpressionStatement","src":"8498:3:6"},"nodeType":"ForStatement","src":"8461:334:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1398,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1299,"src":"8809:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8823:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8809:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1417,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1289,"src":"9042:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9054:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9042:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1429,"nodeType":"Block","src":"9104:40:6","statements":[{"expression":{"baseExpression":{"id":1425,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1277,"src":"9125:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":1427,"indexExpression":{"hexValue":"30","id":1426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9131:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9125:8:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1287,"id":1428,"nodeType":"Return","src":"9118:15:6"}]},"id":1430,"nodeType":"IfStatement","src":"9038:106:6","trueBody":{"id":1424,"nodeType":"Block","src":"9057:41:6","statements":[{"expression":{"baseExpression":{"id":1420,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1283,"src":"9078:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1422,"indexExpression":{"hexValue":"30","id":1421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9085:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9078:9:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1287,"id":1423,"nodeType":"Return","src":"9071:16:6"}]}},"id":1431,"nodeType":"IfStatement","src":"8805:339:6","trueBody":{"id":1416,"nodeType":"Block","src":"8826:206:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1401,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"8844:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1402,"name":"proofLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"8856:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8844:20:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1408,"nodeType":"IfStatement","src":"8840:96:6","trueBody":{"id":1407,"nodeType":"Block","src":"8866:70:6","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1404,"name":"MerkleProofInvalidMultiproof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":939,"src":"8891:28:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8891:30:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1406,"nodeType":"RevertStatement","src":"8884:37:6"}]}},{"id":1415,"nodeType":"UncheckedBlock","src":"8949:73:6","statements":[{"expression":{"baseExpression":{"id":1409,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1319,"src":"8984:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1413,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1410,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1299,"src":"8991:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9005:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8991:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8984:23:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1287,"id":1414,"nodeType":"Return","src":"8977:30:6"}]}]}}]},"documentation":{"id":1274,"nodeType":"StructuredDocumentation","src":"6687:164:6","text":" @dev Calldata version of {processMultiProof}.\n CAUTION: Not all Merkle trees admit multiproofs. See {processMultiProof} for details."},"id":1433,"implemented":true,"kind":"function","modifiers":[],"name":"processMultiProofCalldata","nameLocation":"6865:25:6","nodeType":"FunctionDefinition","parameters":{"id":1284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1277,"mutability":"mutable","name":"proof","nameLocation":"6919:5:6","nodeType":"VariableDeclaration","scope":1433,"src":"6900:24:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1275,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6900:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1276,"nodeType":"ArrayTypeName","src":"6900:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1280,"mutability":"mutable","name":"proofFlags","nameLocation":"6950:10:6","nodeType":"VariableDeclaration","scope":1433,"src":"6934:26:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":1278,"name":"bool","nodeType":"ElementaryTypeName","src":"6934:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1279,"nodeType":"ArrayTypeName","src":"6934:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":1283,"mutability":"mutable","name":"leaves","nameLocation":"6987:6:6","nodeType":"VariableDeclaration","scope":1433,"src":"6970:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1281,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6970:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1282,"nodeType":"ArrayTypeName","src":"6970:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"6890:109:6"},"returnParameters":{"id":1287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1286,"mutability":"mutable","name":"merkleRoot","nameLocation":"7031:10:6","nodeType":"VariableDeclaration","scope":1433,"src":"7023:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1285,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7023:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7022:20:6"},"scope":1470,"src":"6856:2294:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1456,"nodeType":"Block","src":"9301:75:6","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1443,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1436,"src":"9318:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1444,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1438,"src":"9322:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"9318:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":1451,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1438,"src":"9364:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1452,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1436,"src":"9367:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1450,"name":"_efficientHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1469,"src":"9349:14:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":1453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9349:20:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9318:51:6","trueExpression":{"arguments":[{"id":1447,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1436,"src":"9341:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1448,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1438,"src":"9344:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1446,"name":"_efficientHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1469,"src":"9326:14:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":1449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9326:20:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1442,"id":1455,"nodeType":"Return","src":"9311:58:6"}]},"documentation":{"id":1434,"nodeType":"StructuredDocumentation","src":"9156:68:6","text":" @dev Sorts the pair (a, b) and hashes the result."},"id":1457,"implemented":true,"kind":"function","modifiers":[],"name":"_hashPair","nameLocation":"9238:9:6","nodeType":"FunctionDefinition","parameters":{"id":1439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1436,"mutability":"mutable","name":"a","nameLocation":"9256:1:6","nodeType":"VariableDeclaration","scope":1457,"src":"9248:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1435,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9248:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1438,"mutability":"mutable","name":"b","nameLocation":"9267:1:6","nodeType":"VariableDeclaration","scope":1457,"src":"9259:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1437,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9259:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9247:22:6"},"returnParameters":{"id":1442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1441,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1457,"src":"9292:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1440,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9292:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9291:9:6"},"scope":1470,"src":"9229:147:6","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1468,"nodeType":"Block","src":"9579:178:6","statements":[{"AST":{"nativeSrc":"9641:110:6","nodeType":"YulBlock","src":"9641:110:6","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"9662:4:6","nodeType":"YulLiteral","src":"9662:4:6","type":"","value":"0x00"},{"name":"a","nativeSrc":"9668:1:6","nodeType":"YulIdentifier","src":"9668:1:6"}],"functionName":{"name":"mstore","nativeSrc":"9655:6:6","nodeType":"YulIdentifier","src":"9655:6:6"},"nativeSrc":"9655:15:6","nodeType":"YulFunctionCall","src":"9655:15:6"},"nativeSrc":"9655:15:6","nodeType":"YulExpressionStatement","src":"9655:15:6"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"9690:4:6","nodeType":"YulLiteral","src":"9690:4:6","type":"","value":"0x20"},{"name":"b","nativeSrc":"9696:1:6","nodeType":"YulIdentifier","src":"9696:1:6"}],"functionName":{"name":"mstore","nativeSrc":"9683:6:6","nodeType":"YulIdentifier","src":"9683:6:6"},"nativeSrc":"9683:15:6","nodeType":"YulFunctionCall","src":"9683:15:6"},"nativeSrc":"9683:15:6","nodeType":"YulExpressionStatement","src":"9683:15:6"},{"nativeSrc":"9711:30:6","nodeType":"YulAssignment","src":"9711:30:6","value":{"arguments":[{"kind":"number","nativeSrc":"9730:4:6","nodeType":"YulLiteral","src":"9730:4:6","type":"","value":"0x00"},{"kind":"number","nativeSrc":"9736:4:6","nodeType":"YulLiteral","src":"9736:4:6","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nativeSrc":"9720:9:6","nodeType":"YulIdentifier","src":"9720:9:6"},"nativeSrc":"9720:21:6","nodeType":"YulFunctionCall","src":"9720:21:6"},"variableNames":[{"name":"value","nativeSrc":"9711:5:6","nodeType":"YulIdentifier","src":"9711:5:6"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1460,"isOffset":false,"isSlot":false,"src":"9668:1:6","valueSize":1},{"declaration":1462,"isOffset":false,"isSlot":false,"src":"9696:1:6","valueSize":1},{"declaration":1465,"isOffset":false,"isSlot":false,"src":"9711:5:6","valueSize":1}],"id":1467,"nodeType":"InlineAssembly","src":"9632:119:6"}]},"documentation":{"id":1458,"nodeType":"StructuredDocumentation","src":"9382:109:6","text":" @dev Implementation of keccak256(abi.encode(a, b)) that doesn't allocate or expand memory."},"id":1469,"implemented":true,"kind":"function","modifiers":[],"name":"_efficientHash","nameLocation":"9505:14:6","nodeType":"FunctionDefinition","parameters":{"id":1463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1460,"mutability":"mutable","name":"a","nameLocation":"9528:1:6","nodeType":"VariableDeclaration","scope":1469,"src":"9520:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1459,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9520:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1462,"mutability":"mutable","name":"b","nameLocation":"9539:1:6","nodeType":"VariableDeclaration","scope":1469,"src":"9531:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1461,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9531:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9519:22:6"},"returnParameters":{"id":1466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1465,"mutability":"mutable","name":"value","nameLocation":"9572:5:6","nodeType":"VariableDeclaration","scope":1469,"src":"9564:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1464,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9564:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9563:15:6"},"scope":1470,"src":"9496:261:6","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1471,"src":"803:8956:6","usedErrors":[939],"usedEvents":[]}],"src":"118:9642:6"},"id":6},"contracts/AntekIsERC20.sol":{"ast":{"absolutePath":"contracts/AntekIsERC20.sol","exportedSymbols":{"AntekIsERC20":[1594],"Context":[933],"ERC20":[799],"IERC20":[877],"IERC20Errors":[189],"IERC20Metadata":[903],"MerkleProof":[1470],"Ownable":[147]},"id":1595,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1472,"literals":["solidity","0.8",".24"],"nodeType":"PragmaDirective","src":"32:23:7"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":1473,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1595,"sourceUnit":800,"src":"57:55:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":1474,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1595,"sourceUnit":148,"src":"171:52:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol","file":"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol","id":1475,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1595,"sourceUnit":1471,"src":"290:68:7","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1476,"name":"ERC20","nameLocations":["385:5:7"],"nodeType":"IdentifierPath","referencedDeclaration":799,"src":"385:5:7"},"id":1477,"nodeType":"InheritanceSpecifier","src":"385:5:7"},{"baseName":{"id":1478,"name":"Ownable","nameLocations":["392:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"392:7:7"},"id":1479,"nodeType":"InheritanceSpecifier","src":"392:7:7"}],"canonicalName":"AntekIsERC20","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1594,"linearizedBaseContracts":[1594,147,799,189,903,877,933],"name":"AntekIsERC20","nameLocation":"369:12:7","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"2eb4a7ab","id":1481,"mutability":"mutable","name":"merkleRoot","nameLocation":"460:10:7","nodeType":"VariableDeclaration","scope":1594,"src":"445:25:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1480,"name":"bytes32","nodeType":"ElementaryTypeName","src":"445:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"id":1484,"mutability":"constant","name":"MINT_AMOUNT","nameLocation":"531:11:7","nodeType":"VariableDeclaration","scope":1594,"src":"506:46:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1482,"name":"uint256","nodeType":"ElementaryTypeName","src":"506:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":1483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"545:7:7","subdenomination":"ether","typeDescriptions":{"typeIdentifier":"t_rational_2000000000000000000_by_1","typeString":"int_const 2000000000000000000"},"value":"2"},"visibility":"private"},{"constant":false,"id":1488,"mutability":"mutable","name":"hasMinted","nameLocation":"678:9:7","nodeType":"VariableDeclaration","scope":1594,"src":"645:42:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":1487,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1485,"name":"address","nodeType":"ElementaryTypeName","src":"653:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"645:24:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1486,"name":"bool","nodeType":"ElementaryTypeName","src":"664:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"private"},{"body":{"id":1506,"nodeType":"Block","src":"936:41:7","statements":[{"expression":{"id":1504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1502,"name":"merkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1481,"src":"946:10:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1503,"name":"_merkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1492,"src":"959:11:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"946:24:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1505,"nodeType":"ExpressionStatement","src":"946:24:7"}]},"id":1507,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"416e74656b204d6e6d20546f6b656e","id":1495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"875:17:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_d0f90b79abef1bcc99ddf099b1550f34897e5a469129cd35cd770e72cff5d4f7","typeString":"literal_string \"Antek Mnm Token\""},"value":"Antek Mnm Token"},{"hexValue":"4d4e4d","id":1496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"894:5:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_c178214c408653ab2df3b386d7d9ef3d353b0f5d6ee6d228c20615de723c7e1c","typeString":"literal_string \"MNM\""},"value":"MNM"}],"id":1497,"kind":"baseConstructorSpecifier","modifierName":{"id":1494,"name":"ERC20","nameLocations":["869:5:7"],"nodeType":"IdentifierPath","referencedDeclaration":799,"src":"869:5:7"},"nodeType":"ModifierInvocation","src":"869:31:7"},{"arguments":[{"id":1499,"name":"_initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1490,"src":"917:13:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1500,"kind":"baseConstructorSpecifier","modifierName":{"id":1498,"name":"Ownable","nameLocations":["909:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"909:7:7"},"nodeType":"ModifierInvocation","src":"909:22:7"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1490,"mutability":"mutable","name":"_initialOwner","nameLocation":"825:13:7","nodeType":"VariableDeclaration","scope":1507,"src":"817:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1489,"name":"address","nodeType":"ElementaryTypeName","src":"817:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1492,"mutability":"mutable","name":"_merkleRoot","nameLocation":"848:11:7","nodeType":"VariableDeclaration","scope":1507,"src":"840:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1491,"name":"bytes32","nodeType":"ElementaryTypeName","src":"840:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"816:44:7"},"returnParameters":{"id":1501,"nodeType":"ParameterList","parameters":[],"src":"936:0:7"},"scope":1594,"src":"805:172:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1519,"nodeType":"Block","src":"1150:41:7","statements":[{"expression":{"id":1517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1515,"name":"merkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1481,"src":"1160:10:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1516,"name":"_merkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1510,"src":"1173:11:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1160:24:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1518,"nodeType":"ExpressionStatement","src":"1160:24:7"}]},"documentation":{"id":1508,"nodeType":"StructuredDocumentation","src":"983:99:7","text":" @notice Change the merkle root\n @param _merkleRoot the new merkle root*"},"functionSelector":"7cb64759","id":1520,"implemented":true,"kind":"function","modifiers":[{"id":1513,"kind":"modifierInvocation","modifierName":{"id":1512,"name":"onlyOwner","nameLocations":["1140:9:7"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"1140:9:7"},"nodeType":"ModifierInvocation","src":"1140:9:7"}],"name":"setMerkleRoot","nameLocation":"1096:13:7","nodeType":"FunctionDefinition","parameters":{"id":1511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1510,"mutability":"mutable","name":"_merkleRoot","nameLocation":"1118:11:7","nodeType":"VariableDeclaration","scope":1520,"src":"1110:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1509,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1110:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1109:21:7"},"returnParameters":{"id":1514,"nodeType":"ParameterList","parameters":[],"src":"1150:0:7"},"scope":1594,"src":"1087:104:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1552,"nodeType":"Block","src":"1535:339:7","statements":[{"assignments":[1532],"declarations":[{"constant":false,"id":1532,"mutability":"mutable","name":"leaf","nameLocation":"1605:4:7","nodeType":"VariableDeclaration","scope":1552,"src":"1597:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1531,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1597:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1544,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"id":1539,"name":"_account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1523,"src":"1654:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1537,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1643:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1538,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1647:6:7","memberName":"encode","nodeType":"MemberAccess","src":"1643:10:7","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1643:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1536,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1633:9:7","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1633:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1534,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1622:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1535,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1626:6:7","memberName":"encode","nodeType":"MemberAccess","src":"1622:10:7","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1622:43:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1533,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1612:9:7","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1612:54:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1597:69:7"},{"expression":{"arguments":[{"id":1547,"name":"_proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1526,"src":"1842:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":1548,"name":"merkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1481,"src":"1850:10:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1549,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1532,"src":"1862:4:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1545,"name":"MerkleProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1470,"src":"1823:11:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MerkleProof_$1470_$","typeString":"type(library MerkleProof)"}},"id":1546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1835:6:7","memberName":"verify","nodeType":"MemberAccess","referencedDeclaration":960,"src":"1823:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"}},"id":1550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1823:44:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1530,"id":1551,"nodeType":"Return","src":"1816:51:7"}]},"documentation":{"id":1521,"nodeType":"StructuredDocumentation","src":"1197:237:7","text":" @notice Check if an address is whitelisted or not\n \n @param _account The account checked\n @param _proof The merkle proof\n @return bool return true if the address is whitelisted, false otherwise*"},"id":1553,"implemented":true,"kind":"function","modifiers":[],"name":"isWhitelisted","nameLocation":"1448:13:7","nodeType":"FunctionDefinition","parameters":{"id":1527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1523,"mutability":"mutable","name":"_account","nameLocation":"1470:8:7","nodeType":"VariableDeclaration","scope":1553,"src":"1462:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1522,"name":"address","nodeType":"ElementaryTypeName","src":"1462:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1526,"mutability":"mutable","name":"_proof","nameLocation":"1499:6:7","nodeType":"VariableDeclaration","scope":1553,"src":"1480:25:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1524,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1480:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1525,"nodeType":"ArrayTypeName","src":"1480:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"1461:45:7"},"returnParameters":{"id":1530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1529,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1553,"src":"1529:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1528,"name":"bool","nodeType":"ElementaryTypeName","src":"1529:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1528:6:7"},"scope":1594,"src":"1439:435:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1592,"nodeType":"Block","src":"2093:366:7","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":1564,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2169:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2173:6:7","memberName":"sender","nodeType":"MemberAccess","src":"2169:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1566,"name":"_proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1559,"src":"2181:6:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}],"id":1563,"name":"isWhitelisted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1553,"src":"2155:13:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_array$_t_bytes32_$dyn_calldata_ptr_$returns$_t_bool_$","typeString":"function (address,bytes32[] calldata) view returns (bool)"}},"id":1567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2155:33:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f742057686974656c6973746564","id":1568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2190:17:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_ea2ff205e74795d23c54c2e44a18bbafce9858e9cd78e091fb1af6ef9ede78ff","typeString":"literal_string \"Not Whitelisted\""},"value":"Not Whitelisted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ea2ff205e74795d23c54c2e44a18bbafce9858e9cd78e091fb1af6ef9ede78ff","typeString":"literal_string \"Not Whitelisted\""}],"id":1562,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2147:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2147:61:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1570,"nodeType":"ExpressionStatement","src":"2147:61:7"},{"expression":{"arguments":[{"id":1576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2279:22:7","subExpression":{"baseExpression":{"id":1572,"name":"hasMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1488,"src":"2280:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1575,"indexExpression":{"expression":{"id":1573,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2290:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2294:6:7","memberName":"sender","nodeType":"MemberAccess","src":"2290:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2280:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e7320616c7265616479206d696e746564","id":1577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2303:23:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_ac4ee45368755067e98bcabb5ab6f92b0a070c5f5367426552e5a625dd61b5e4","typeString":"literal_string \"Tokens already minted\""},"value":"Tokens already minted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ac4ee45368755067e98bcabb5ab6f92b0a070c5f5367426552e5a625dd61b5e4","typeString":"literal_string \"Tokens already minted\""}],"id":1571,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2271:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2271:56:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1579,"nodeType":"ExpressionStatement","src":"2271:56:7"},{"expression":{"id":1585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1580,"name":"hasMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1488,"src":"2373:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1583,"indexExpression":{"expression":{"id":1581,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2383:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2387:6:7","memberName":"sender","nodeType":"MemberAccess","src":"2383:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2373:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2397:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2373:28:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1586,"nodeType":"ExpressionStatement","src":"2373:28:7"},{"expression":{"arguments":[{"id":1588,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1556,"src":"2435:3:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1589,"name":"MINT_AMOUNT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1484,"src":"2440:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1587,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"2429:5:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2429:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1591,"nodeType":"ExpressionStatement","src":"2429:23:7"}]},"documentation":{"id":1554,"nodeType":"StructuredDocumentation","src":"1880:145:7","text":" @notice Allows a whitelisted user to mint tokens\n @param _to The token receiver\n @param _proof The merkle proof*"},"functionSelector":"7bf32270","id":1593,"implemented":true,"kind":"function","modifiers":[],"name":"mint","nameLocation":"2039:4:7","nodeType":"FunctionDefinition","parameters":{"id":1560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1556,"mutability":"mutable","name":"_to","nameLocation":"2052:3:7","nodeType":"VariableDeclaration","scope":1593,"src":"2044:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1555,"name":"address","nodeType":"ElementaryTypeName","src":"2044:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1559,"mutability":"mutable","name":"_proof","nameLocation":"2076:6:7","nodeType":"VariableDeclaration","scope":1593,"src":"2057:25:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1557,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2057:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1558,"nodeType":"ArrayTypeName","src":"2057:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"2043:40:7"},"returnParameters":{"id":1561,"nodeType":"ParameterList","parameters":[],"src":"2093:0:7"},"scope":1594,"src":"2030:429:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1595,"src":"360:2101:7","usedErrors":[13,18,159,164,169,178,183,188],"usedEvents":[24,811,820]}],"src":"32:2429:7"},"id":7}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}"},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}"},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol":{"MerkleProof":{"abi":[{"inputs":[],"name":"MerkleProofInvalidMultiproof","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b98e7ab792817e953408e28ea2d5c401d13d4e6da65b05ff5d9f7ffba997851364736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB9 DUP15 PUSH27 0xB792817E953408E28EA2D5C401D13D4E6DA65B05FF5D9F7FFBA997 DUP6 SGT PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"803:8956:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b98e7ab792817e953408e28ea2d5c401d13d4e6da65b05ff5d9f7ffba997851364736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB9 DUP15 PUSH27 0xB792817E953408E28EA2D5C401D13D4E6DA65B05FF5D9F7FFBA997 DUP6 SGT PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"803:8956:6:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MerkleProofInvalidMultiproof\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"These functions deal with verification of Merkle Tree proofs. The tree and the proofs can be generated using our https://github.com/OpenZeppelin/merkle-tree[JavaScript library]. You will find a quickstart guide in the readme. WARNING: You should avoid using leaf values that are 64 bytes long prior to hashing, or use a hash function other than keccak256 for hashing leaves. This is because the concatenation of a sorted pair of internal nodes in the Merkle tree could be reinterpreted as a leaf value. OpenZeppelin's JavaScript library generates Merkle trees that are safe against this attack out of the box.\",\"errors\":{\"MerkleProofInvalidMultiproof()\":[{\"details\":\"The multiproof provided is not valid.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":\"MerkleProof\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0x6400c4bee15052e043e5d10315135972529bd1c8012f43da494dc6b4f4661058\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5d3d47d35af4373743a559ea4b9b7ecfe4bab6f0703f410c1e59959b7966ac\",\"dweb:/ipfs/QmTHdoghh4WLu4yURjGEgRk162pcwwdsG52MPGa12GqnGR\"]}},\"version\":1}"}},"contracts/AntekIsERC20.sol":{"AntekIsERC20":{"abi":[{"inputs":[{"internalType":"address","name":"_initialOwner","type":"address"},{"internalType":"bytes32","name":"_merkleRoot","type":"bytes32"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"merkleRoot","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_to","type":"address"},{"internalType":"bytes32[]","name":"_proof","type":"bytes32[]"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_merkleRoot","type":"bytes32"}],"name":"setMerkleRoot","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_1507":{"entryPoint":null,"id":1507,"parameterSlots":2,"returnSlots":0},"@_336":{"entryPoint":null,"id":336,"parameterSlots":2,"returnSlots":0},"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":352,"id":146,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":633,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32_fromMemory":{"entryPoint":692,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_bytes32_fromMemory":{"entryPoint":715,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":1651,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":1668,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":944,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":786,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":1265,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":587,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":656,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":555,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":1080,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":1226,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":1100,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1420,"id":null,"parameterSlots":2,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":965,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":891,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":1390,"id":null,"parameterSlots":2,"returnSlots":1},"identity":{"entryPoint":1090,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":1358,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":844,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":797,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":1140,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":550,"id":null,"parameterSlots":0,"returnSlots":0},"shift_left_dynamic":{"entryPoint":981,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":1345,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":1198,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":994,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":1150,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":607,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":666,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":1193,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:7294:8","nodeType":"YulBlock","src":"0:7294:8","statements":[{"body":{"nativeSrc":"47:35:8","nodeType":"YulBlock","src":"47:35:8","statements":[{"nativeSrc":"57:19:8","nodeType":"YulAssignment","src":"57:19:8","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:8","nodeType":"YulLiteral","src":"73:2:8","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:8","nodeType":"YulIdentifier","src":"67:5:8"},"nativeSrc":"67:9:8","nodeType":"YulFunctionCall","src":"67:9:8"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:8","nodeType":"YulIdentifier","src":"57:6:8"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:8","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:8","nodeType":"YulTypedName","src":"40:6:8","type":""}],"src":"7:75:8"},{"body":{"nativeSrc":"177:28:8","nodeType":"YulBlock","src":"177:28:8","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:8","nodeType":"YulLiteral","src":"194:1:8","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:8","nodeType":"YulLiteral","src":"197:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:8","nodeType":"YulIdentifier","src":"187:6:8"},"nativeSrc":"187:12:8","nodeType":"YulFunctionCall","src":"187:12:8"},"nativeSrc":"187:12:8","nodeType":"YulExpressionStatement","src":"187:12:8"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:8","nodeType":"YulFunctionDefinition","src":"88:117:8"},{"body":{"nativeSrc":"300:28:8","nodeType":"YulBlock","src":"300:28:8","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:8","nodeType":"YulLiteral","src":"317:1:8","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:8","nodeType":"YulLiteral","src":"320:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:8","nodeType":"YulIdentifier","src":"310:6:8"},"nativeSrc":"310:12:8","nodeType":"YulFunctionCall","src":"310:12:8"},"nativeSrc":"310:12:8","nodeType":"YulExpressionStatement","src":"310:12:8"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:8","nodeType":"YulFunctionDefinition","src":"211:117:8"},{"body":{"nativeSrc":"379:81:8","nodeType":"YulBlock","src":"379:81:8","statements":[{"nativeSrc":"389:65:8","nodeType":"YulAssignment","src":"389:65:8","value":{"arguments":[{"name":"value","nativeSrc":"404:5:8","nodeType":"YulIdentifier","src":"404:5:8"},{"kind":"number","nativeSrc":"411:42:8","nodeType":"YulLiteral","src":"411:42:8","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"400:3:8","nodeType":"YulIdentifier","src":"400:3:8"},"nativeSrc":"400:54:8","nodeType":"YulFunctionCall","src":"400:54:8"},"variableNames":[{"name":"cleaned","nativeSrc":"389:7:8","nodeType":"YulIdentifier","src":"389:7:8"}]}]},"name":"cleanup_t_uint160","nativeSrc":"334:126:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"361:5:8","nodeType":"YulTypedName","src":"361:5:8","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"371:7:8","nodeType":"YulTypedName","src":"371:7:8","type":""}],"src":"334:126:8"},{"body":{"nativeSrc":"511:51:8","nodeType":"YulBlock","src":"511:51:8","statements":[{"nativeSrc":"521:35:8","nodeType":"YulAssignment","src":"521:35:8","value":{"arguments":[{"name":"value","nativeSrc":"550:5:8","nodeType":"YulIdentifier","src":"550:5:8"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"532:17:8","nodeType":"YulIdentifier","src":"532:17:8"},"nativeSrc":"532:24:8","nodeType":"YulFunctionCall","src":"532:24:8"},"variableNames":[{"name":"cleaned","nativeSrc":"521:7:8","nodeType":"YulIdentifier","src":"521:7:8"}]}]},"name":"cleanup_t_address","nativeSrc":"466:96:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"493:5:8","nodeType":"YulTypedName","src":"493:5:8","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"503:7:8","nodeType":"YulTypedName","src":"503:7:8","type":""}],"src":"466:96:8"},{"body":{"nativeSrc":"611:79:8","nodeType":"YulBlock","src":"611:79:8","statements":[{"body":{"nativeSrc":"668:16:8","nodeType":"YulBlock","src":"668:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"677:1:8","nodeType":"YulLiteral","src":"677:1:8","type":"","value":"0"},{"kind":"number","nativeSrc":"680:1:8","nodeType":"YulLiteral","src":"680:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"670:6:8","nodeType":"YulIdentifier","src":"670:6:8"},"nativeSrc":"670:12:8","nodeType":"YulFunctionCall","src":"670:12:8"},"nativeSrc":"670:12:8","nodeType":"YulExpressionStatement","src":"670:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"634:5:8","nodeType":"YulIdentifier","src":"634:5:8"},{"arguments":[{"name":"value","nativeSrc":"659:5:8","nodeType":"YulIdentifier","src":"659:5:8"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"641:17:8","nodeType":"YulIdentifier","src":"641:17:8"},"nativeSrc":"641:24:8","nodeType":"YulFunctionCall","src":"641:24:8"}],"functionName":{"name":"eq","nativeSrc":"631:2:8","nodeType":"YulIdentifier","src":"631:2:8"},"nativeSrc":"631:35:8","nodeType":"YulFunctionCall","src":"631:35:8"}],"functionName":{"name":"iszero","nativeSrc":"624:6:8","nodeType":"YulIdentifier","src":"624:6:8"},"nativeSrc":"624:43:8","nodeType":"YulFunctionCall","src":"624:43:8"},"nativeSrc":"621:63:8","nodeType":"YulIf","src":"621:63:8"}]},"name":"validator_revert_t_address","nativeSrc":"568:122:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"604:5:8","nodeType":"YulTypedName","src":"604:5:8","type":""}],"src":"568:122:8"},{"body":{"nativeSrc":"759:80:8","nodeType":"YulBlock","src":"759:80:8","statements":[{"nativeSrc":"769:22:8","nodeType":"YulAssignment","src":"769:22:8","value":{"arguments":[{"name":"offset","nativeSrc":"784:6:8","nodeType":"YulIdentifier","src":"784:6:8"}],"functionName":{"name":"mload","nativeSrc":"778:5:8","nodeType":"YulIdentifier","src":"778:5:8"},"nativeSrc":"778:13:8","nodeType":"YulFunctionCall","src":"778:13:8"},"variableNames":[{"name":"value","nativeSrc":"769:5:8","nodeType":"YulIdentifier","src":"769:5:8"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"827:5:8","nodeType":"YulIdentifier","src":"827:5:8"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"800:26:8","nodeType":"YulIdentifier","src":"800:26:8"},"nativeSrc":"800:33:8","nodeType":"YulFunctionCall","src":"800:33:8"},"nativeSrc":"800:33:8","nodeType":"YulExpressionStatement","src":"800:33:8"}]},"name":"abi_decode_t_address_fromMemory","nativeSrc":"696:143:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"737:6:8","nodeType":"YulTypedName","src":"737:6:8","type":""},{"name":"end","nativeSrc":"745:3:8","nodeType":"YulTypedName","src":"745:3:8","type":""}],"returnVariables":[{"name":"value","nativeSrc":"753:5:8","nodeType":"YulTypedName","src":"753:5:8","type":""}],"src":"696:143:8"},{"body":{"nativeSrc":"890:32:8","nodeType":"YulBlock","src":"890:32:8","statements":[{"nativeSrc":"900:16:8","nodeType":"YulAssignment","src":"900:16:8","value":{"name":"value","nativeSrc":"911:5:8","nodeType":"YulIdentifier","src":"911:5:8"},"variableNames":[{"name":"cleaned","nativeSrc":"900:7:8","nodeType":"YulIdentifier","src":"900:7:8"}]}]},"name":"cleanup_t_bytes32","nativeSrc":"845:77:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"872:5:8","nodeType":"YulTypedName","src":"872:5:8","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"882:7:8","nodeType":"YulTypedName","src":"882:7:8","type":""}],"src":"845:77:8"},{"body":{"nativeSrc":"971:79:8","nodeType":"YulBlock","src":"971:79:8","statements":[{"body":{"nativeSrc":"1028:16:8","nodeType":"YulBlock","src":"1028:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1037:1:8","nodeType":"YulLiteral","src":"1037:1:8","type":"","value":"0"},{"kind":"number","nativeSrc":"1040:1:8","nodeType":"YulLiteral","src":"1040:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1030:6:8","nodeType":"YulIdentifier","src":"1030:6:8"},"nativeSrc":"1030:12:8","nodeType":"YulFunctionCall","src":"1030:12:8"},"nativeSrc":"1030:12:8","nodeType":"YulExpressionStatement","src":"1030:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"994:5:8","nodeType":"YulIdentifier","src":"994:5:8"},{"arguments":[{"name":"value","nativeSrc":"1019:5:8","nodeType":"YulIdentifier","src":"1019:5:8"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"1001:17:8","nodeType":"YulIdentifier","src":"1001:17:8"},"nativeSrc":"1001:24:8","nodeType":"YulFunctionCall","src":"1001:24:8"}],"functionName":{"name":"eq","nativeSrc":"991:2:8","nodeType":"YulIdentifier","src":"991:2:8"},"nativeSrc":"991:35:8","nodeType":"YulFunctionCall","src":"991:35:8"}],"functionName":{"name":"iszero","nativeSrc":"984:6:8","nodeType":"YulIdentifier","src":"984:6:8"},"nativeSrc":"984:43:8","nodeType":"YulFunctionCall","src":"984:43:8"},"nativeSrc":"981:63:8","nodeType":"YulIf","src":"981:63:8"}]},"name":"validator_revert_t_bytes32","nativeSrc":"928:122:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"964:5:8","nodeType":"YulTypedName","src":"964:5:8","type":""}],"src":"928:122:8"},{"body":{"nativeSrc":"1119:80:8","nodeType":"YulBlock","src":"1119:80:8","statements":[{"nativeSrc":"1129:22:8","nodeType":"YulAssignment","src":"1129:22:8","value":{"arguments":[{"name":"offset","nativeSrc":"1144:6:8","nodeType":"YulIdentifier","src":"1144:6:8"}],"functionName":{"name":"mload","nativeSrc":"1138:5:8","nodeType":"YulIdentifier","src":"1138:5:8"},"nativeSrc":"1138:13:8","nodeType":"YulFunctionCall","src":"1138:13:8"},"variableNames":[{"name":"value","nativeSrc":"1129:5:8","nodeType":"YulIdentifier","src":"1129:5:8"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"1187:5:8","nodeType":"YulIdentifier","src":"1187:5:8"}],"functionName":{"name":"validator_revert_t_bytes32","nativeSrc":"1160:26:8","nodeType":"YulIdentifier","src":"1160:26:8"},"nativeSrc":"1160:33:8","nodeType":"YulFunctionCall","src":"1160:33:8"},"nativeSrc":"1160:33:8","nodeType":"YulExpressionStatement","src":"1160:33:8"}]},"name":"abi_decode_t_bytes32_fromMemory","nativeSrc":"1056:143:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"1097:6:8","nodeType":"YulTypedName","src":"1097:6:8","type":""},{"name":"end","nativeSrc":"1105:3:8","nodeType":"YulTypedName","src":"1105:3:8","type":""}],"returnVariables":[{"name":"value","nativeSrc":"1113:5:8","nodeType":"YulTypedName","src":"1113:5:8","type":""}],"src":"1056:143:8"},{"body":{"nativeSrc":"1299:413:8","nodeType":"YulBlock","src":"1299:413:8","statements":[{"body":{"nativeSrc":"1345:83:8","nodeType":"YulBlock","src":"1345:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"1347:77:8","nodeType":"YulIdentifier","src":"1347:77:8"},"nativeSrc":"1347:79:8","nodeType":"YulFunctionCall","src":"1347:79:8"},"nativeSrc":"1347:79:8","nodeType":"YulExpressionStatement","src":"1347:79:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1320:7:8","nodeType":"YulIdentifier","src":"1320:7:8"},{"name":"headStart","nativeSrc":"1329:9:8","nodeType":"YulIdentifier","src":"1329:9:8"}],"functionName":{"name":"sub","nativeSrc":"1316:3:8","nodeType":"YulIdentifier","src":"1316:3:8"},"nativeSrc":"1316:23:8","nodeType":"YulFunctionCall","src":"1316:23:8"},{"kind":"number","nativeSrc":"1341:2:8","nodeType":"YulLiteral","src":"1341:2:8","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"1312:3:8","nodeType":"YulIdentifier","src":"1312:3:8"},"nativeSrc":"1312:32:8","nodeType":"YulFunctionCall","src":"1312:32:8"},"nativeSrc":"1309:119:8","nodeType":"YulIf","src":"1309:119:8"},{"nativeSrc":"1438:128:8","nodeType":"YulBlock","src":"1438:128:8","statements":[{"nativeSrc":"1453:15:8","nodeType":"YulVariableDeclaration","src":"1453:15:8","value":{"kind":"number","nativeSrc":"1467:1:8","nodeType":"YulLiteral","src":"1467:1:8","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"1457:6:8","nodeType":"YulTypedName","src":"1457:6:8","type":""}]},{"nativeSrc":"1482:74:8","nodeType":"YulAssignment","src":"1482:74:8","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1528:9:8","nodeType":"YulIdentifier","src":"1528:9:8"},{"name":"offset","nativeSrc":"1539:6:8","nodeType":"YulIdentifier","src":"1539:6:8"}],"functionName":{"name":"add","nativeSrc":"1524:3:8","nodeType":"YulIdentifier","src":"1524:3:8"},"nativeSrc":"1524:22:8","nodeType":"YulFunctionCall","src":"1524:22:8"},{"name":"dataEnd","nativeSrc":"1548:7:8","nodeType":"YulIdentifier","src":"1548:7:8"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nativeSrc":"1492:31:8","nodeType":"YulIdentifier","src":"1492:31:8"},"nativeSrc":"1492:64:8","nodeType":"YulFunctionCall","src":"1492:64:8"},"variableNames":[{"name":"value0","nativeSrc":"1482:6:8","nodeType":"YulIdentifier","src":"1482:6:8"}]}]},{"nativeSrc":"1576:129:8","nodeType":"YulBlock","src":"1576:129:8","statements":[{"nativeSrc":"1591:16:8","nodeType":"YulVariableDeclaration","src":"1591:16:8","value":{"kind":"number","nativeSrc":"1605:2:8","nodeType":"YulLiteral","src":"1605:2:8","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"1595:6:8","nodeType":"YulTypedName","src":"1595:6:8","type":""}]},{"nativeSrc":"1621:74:8","nodeType":"YulAssignment","src":"1621:74:8","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1667:9:8","nodeType":"YulIdentifier","src":"1667:9:8"},{"name":"offset","nativeSrc":"1678:6:8","nodeType":"YulIdentifier","src":"1678:6:8"}],"functionName":{"name":"add","nativeSrc":"1663:3:8","nodeType":"YulIdentifier","src":"1663:3:8"},"nativeSrc":"1663:22:8","nodeType":"YulFunctionCall","src":"1663:22:8"},{"name":"dataEnd","nativeSrc":"1687:7:8","nodeType":"YulIdentifier","src":"1687:7:8"}],"functionName":{"name":"abi_decode_t_bytes32_fromMemory","nativeSrc":"1631:31:8","nodeType":"YulIdentifier","src":"1631:31:8"},"nativeSrc":"1631:64:8","nodeType":"YulFunctionCall","src":"1631:64:8"},"variableNames":[{"name":"value1","nativeSrc":"1621:6:8","nodeType":"YulIdentifier","src":"1621:6:8"}]}]}]},"name":"abi_decode_tuple_t_addresst_bytes32_fromMemory","nativeSrc":"1205:507:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1261:9:8","nodeType":"YulTypedName","src":"1261:9:8","type":""},{"name":"dataEnd","nativeSrc":"1272:7:8","nodeType":"YulTypedName","src":"1272:7:8","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1284:6:8","nodeType":"YulTypedName","src":"1284:6:8","type":""},{"name":"value1","nativeSrc":"1292:6:8","nodeType":"YulTypedName","src":"1292:6:8","type":""}],"src":"1205:507:8"},{"body":{"nativeSrc":"1777:40:8","nodeType":"YulBlock","src":"1777:40:8","statements":[{"nativeSrc":"1788:22:8","nodeType":"YulAssignment","src":"1788:22:8","value":{"arguments":[{"name":"value","nativeSrc":"1804:5:8","nodeType":"YulIdentifier","src":"1804:5:8"}],"functionName":{"name":"mload","nativeSrc":"1798:5:8","nodeType":"YulIdentifier","src":"1798:5:8"},"nativeSrc":"1798:12:8","nodeType":"YulFunctionCall","src":"1798:12:8"},"variableNames":[{"name":"length","nativeSrc":"1788:6:8","nodeType":"YulIdentifier","src":"1788:6:8"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"1718:99:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1760:5:8","nodeType":"YulTypedName","src":"1760:5:8","type":""}],"returnVariables":[{"name":"length","nativeSrc":"1770:6:8","nodeType":"YulTypedName","src":"1770:6:8","type":""}],"src":"1718:99:8"},{"body":{"nativeSrc":"1851:152:8","nodeType":"YulBlock","src":"1851:152:8","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1868:1:8","nodeType":"YulLiteral","src":"1868:1:8","type":"","value":"0"},{"kind":"number","nativeSrc":"1871:77:8","nodeType":"YulLiteral","src":"1871:77:8","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"1861:6:8","nodeType":"YulIdentifier","src":"1861:6:8"},"nativeSrc":"1861:88:8","nodeType":"YulFunctionCall","src":"1861:88:8"},"nativeSrc":"1861:88:8","nodeType":"YulExpressionStatement","src":"1861:88:8"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1965:1:8","nodeType":"YulLiteral","src":"1965:1:8","type":"","value":"4"},{"kind":"number","nativeSrc":"1968:4:8","nodeType":"YulLiteral","src":"1968:4:8","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"1958:6:8","nodeType":"YulIdentifier","src":"1958:6:8"},"nativeSrc":"1958:15:8","nodeType":"YulFunctionCall","src":"1958:15:8"},"nativeSrc":"1958:15:8","nodeType":"YulExpressionStatement","src":"1958:15:8"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1989:1:8","nodeType":"YulLiteral","src":"1989:1:8","type":"","value":"0"},{"kind":"number","nativeSrc":"1992:4:8","nodeType":"YulLiteral","src":"1992:4:8","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1982:6:8","nodeType":"YulIdentifier","src":"1982:6:8"},"nativeSrc":"1982:15:8","nodeType":"YulFunctionCall","src":"1982:15:8"},"nativeSrc":"1982:15:8","nodeType":"YulExpressionStatement","src":"1982:15:8"}]},"name":"panic_error_0x41","nativeSrc":"1823:180:8","nodeType":"YulFunctionDefinition","src":"1823:180:8"},{"body":{"nativeSrc":"2037:152:8","nodeType":"YulBlock","src":"2037:152:8","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2054:1:8","nodeType":"YulLiteral","src":"2054:1:8","type":"","value":"0"},{"kind":"number","nativeSrc":"2057:77:8","nodeType":"YulLiteral","src":"2057:77:8","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"2047:6:8","nodeType":"YulIdentifier","src":"2047:6:8"},"nativeSrc":"2047:88:8","nodeType":"YulFunctionCall","src":"2047:88:8"},"nativeSrc":"2047:88:8","nodeType":"YulExpressionStatement","src":"2047:88:8"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2151:1:8","nodeType":"YulLiteral","src":"2151:1:8","type":"","value":"4"},{"kind":"number","nativeSrc":"2154:4:8","nodeType":"YulLiteral","src":"2154:4:8","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"2144:6:8","nodeType":"YulIdentifier","src":"2144:6:8"},"nativeSrc":"2144:15:8","nodeType":"YulFunctionCall","src":"2144:15:8"},"nativeSrc":"2144:15:8","nodeType":"YulExpressionStatement","src":"2144:15:8"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2175:1:8","nodeType":"YulLiteral","src":"2175:1:8","type":"","value":"0"},{"kind":"number","nativeSrc":"2178:4:8","nodeType":"YulLiteral","src":"2178:4:8","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"2168:6:8","nodeType":"YulIdentifier","src":"2168:6:8"},"nativeSrc":"2168:15:8","nodeType":"YulFunctionCall","src":"2168:15:8"},"nativeSrc":"2168:15:8","nodeType":"YulExpressionStatement","src":"2168:15:8"}]},"name":"panic_error_0x22","nativeSrc":"2009:180:8","nodeType":"YulFunctionDefinition","src":"2009:180:8"},{"body":{"nativeSrc":"2246:269:8","nodeType":"YulBlock","src":"2246:269:8","statements":[{"nativeSrc":"2256:22:8","nodeType":"YulAssignment","src":"2256:22:8","value":{"arguments":[{"name":"data","nativeSrc":"2270:4:8","nodeType":"YulIdentifier","src":"2270:4:8"},{"kind":"number","nativeSrc":"2276:1:8","nodeType":"YulLiteral","src":"2276:1:8","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"2266:3:8","nodeType":"YulIdentifier","src":"2266:3:8"},"nativeSrc":"2266:12:8","nodeType":"YulFunctionCall","src":"2266:12:8"},"variableNames":[{"name":"length","nativeSrc":"2256:6:8","nodeType":"YulIdentifier","src":"2256:6:8"}]},{"nativeSrc":"2287:38:8","nodeType":"YulVariableDeclaration","src":"2287:38:8","value":{"arguments":[{"name":"data","nativeSrc":"2317:4:8","nodeType":"YulIdentifier","src":"2317:4:8"},{"kind":"number","nativeSrc":"2323:1:8","nodeType":"YulLiteral","src":"2323:1:8","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"2313:3:8","nodeType":"YulIdentifier","src":"2313:3:8"},"nativeSrc":"2313:12:8","nodeType":"YulFunctionCall","src":"2313:12:8"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"2291:18:8","nodeType":"YulTypedName","src":"2291:18:8","type":""}]},{"body":{"nativeSrc":"2364:51:8","nodeType":"YulBlock","src":"2364:51:8","statements":[{"nativeSrc":"2378:27:8","nodeType":"YulAssignment","src":"2378:27:8","value":{"arguments":[{"name":"length","nativeSrc":"2392:6:8","nodeType":"YulIdentifier","src":"2392:6:8"},{"kind":"number","nativeSrc":"2400:4:8","nodeType":"YulLiteral","src":"2400:4:8","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"2388:3:8","nodeType":"YulIdentifier","src":"2388:3:8"},"nativeSrc":"2388:17:8","nodeType":"YulFunctionCall","src":"2388:17:8"},"variableNames":[{"name":"length","nativeSrc":"2378:6:8","nodeType":"YulIdentifier","src":"2378:6:8"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"2344:18:8","nodeType":"YulIdentifier","src":"2344:18:8"}],"functionName":{"name":"iszero","nativeSrc":"2337:6:8","nodeType":"YulIdentifier","src":"2337:6:8"},"nativeSrc":"2337:26:8","nodeType":"YulFunctionCall","src":"2337:26:8"},"nativeSrc":"2334:81:8","nodeType":"YulIf","src":"2334:81:8"},{"body":{"nativeSrc":"2467:42:8","nodeType":"YulBlock","src":"2467:42:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"2481:16:8","nodeType":"YulIdentifier","src":"2481:16:8"},"nativeSrc":"2481:18:8","nodeType":"YulFunctionCall","src":"2481:18:8"},"nativeSrc":"2481:18:8","nodeType":"YulExpressionStatement","src":"2481:18:8"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"2431:18:8","nodeType":"YulIdentifier","src":"2431:18:8"},{"arguments":[{"name":"length","nativeSrc":"2454:6:8","nodeType":"YulIdentifier","src":"2454:6:8"},{"kind":"number","nativeSrc":"2462:2:8","nodeType":"YulLiteral","src":"2462:2:8","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"2451:2:8","nodeType":"YulIdentifier","src":"2451:2:8"},"nativeSrc":"2451:14:8","nodeType":"YulFunctionCall","src":"2451:14:8"}],"functionName":{"name":"eq","nativeSrc":"2428:2:8","nodeType":"YulIdentifier","src":"2428:2:8"},"nativeSrc":"2428:38:8","nodeType":"YulFunctionCall","src":"2428:38:8"},"nativeSrc":"2425:84:8","nodeType":"YulIf","src":"2425:84:8"}]},"name":"extract_byte_array_length","nativeSrc":"2195:320:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"2230:4:8","nodeType":"YulTypedName","src":"2230:4:8","type":""}],"returnVariables":[{"name":"length","nativeSrc":"2239:6:8","nodeType":"YulTypedName","src":"2239:6:8","type":""}],"src":"2195:320:8"},{"body":{"nativeSrc":"2575:87:8","nodeType":"YulBlock","src":"2575:87:8","statements":[{"nativeSrc":"2585:11:8","nodeType":"YulAssignment","src":"2585:11:8","value":{"name":"ptr","nativeSrc":"2593:3:8","nodeType":"YulIdentifier","src":"2593:3:8"},"variableNames":[{"name":"data","nativeSrc":"2585:4:8","nodeType":"YulIdentifier","src":"2585:4:8"}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2613:1:8","nodeType":"YulLiteral","src":"2613:1:8","type":"","value":"0"},{"name":"ptr","nativeSrc":"2616:3:8","nodeType":"YulIdentifier","src":"2616:3:8"}],"functionName":{"name":"mstore","nativeSrc":"2606:6:8","nodeType":"YulIdentifier","src":"2606:6:8"},"nativeSrc":"2606:14:8","nodeType":"YulFunctionCall","src":"2606:14:8"},"nativeSrc":"2606:14:8","nodeType":"YulExpressionStatement","src":"2606:14:8"},{"nativeSrc":"2629:26:8","nodeType":"YulAssignment","src":"2629:26:8","value":{"arguments":[{"kind":"number","nativeSrc":"2647:1:8","nodeType":"YulLiteral","src":"2647:1:8","type":"","value":"0"},{"kind":"number","nativeSrc":"2650:4:8","nodeType":"YulLiteral","src":"2650:4:8","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"2637:9:8","nodeType":"YulIdentifier","src":"2637:9:8"},"nativeSrc":"2637:18:8","nodeType":"YulFunctionCall","src":"2637:18:8"},"variableNames":[{"name":"data","nativeSrc":"2629:4:8","nodeType":"YulIdentifier","src":"2629:4:8"}]}]},"name":"array_dataslot_t_string_storage","nativeSrc":"2521:141:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"2562:3:8","nodeType":"YulTypedName","src":"2562:3:8","type":""}],"returnVariables":[{"name":"data","nativeSrc":"2570:4:8","nodeType":"YulTypedName","src":"2570:4:8","type":""}],"src":"2521:141:8"},{"body":{"nativeSrc":"2712:49:8","nodeType":"YulBlock","src":"2712:49:8","statements":[{"nativeSrc":"2722:33:8","nodeType":"YulAssignment","src":"2722:33:8","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2740:5:8","nodeType":"YulIdentifier","src":"2740:5:8"},{"kind":"number","nativeSrc":"2747:2:8","nodeType":"YulLiteral","src":"2747:2:8","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"2736:3:8","nodeType":"YulIdentifier","src":"2736:3:8"},"nativeSrc":"2736:14:8","nodeType":"YulFunctionCall","src":"2736:14:8"},{"kind":"number","nativeSrc":"2752:2:8","nodeType":"YulLiteral","src":"2752:2:8","type":"","value":"32"}],"functionName":{"name":"div","nativeSrc":"2732:3:8","nodeType":"YulIdentifier","src":"2732:3:8"},"nativeSrc":"2732:23:8","nodeType":"YulFunctionCall","src":"2732:23:8"},"variableNames":[{"name":"result","nativeSrc":"2722:6:8","nodeType":"YulIdentifier","src":"2722:6:8"}]}]},"name":"divide_by_32_ceil","nativeSrc":"2668:93:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2695:5:8","nodeType":"YulTypedName","src":"2695:5:8","type":""}],"returnVariables":[{"name":"result","nativeSrc":"2705:6:8","nodeType":"YulTypedName","src":"2705:6:8","type":""}],"src":"2668:93:8"},{"body":{"nativeSrc":"2820:54:8","nodeType":"YulBlock","src":"2820:54:8","statements":[{"nativeSrc":"2830:37:8","nodeType":"YulAssignment","src":"2830:37:8","value":{"arguments":[{"name":"bits","nativeSrc":"2855:4:8","nodeType":"YulIdentifier","src":"2855:4:8"},{"name":"value","nativeSrc":"2861:5:8","nodeType":"YulIdentifier","src":"2861:5:8"}],"functionName":{"name":"shl","nativeSrc":"2851:3:8","nodeType":"YulIdentifier","src":"2851:3:8"},"nativeSrc":"2851:16:8","nodeType":"YulFunctionCall","src":"2851:16:8"},"variableNames":[{"name":"newValue","nativeSrc":"2830:8:8","nodeType":"YulIdentifier","src":"2830:8:8"}]}]},"name":"shift_left_dynamic","nativeSrc":"2767:107:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"2795:4:8","nodeType":"YulTypedName","src":"2795:4:8","type":""},{"name":"value","nativeSrc":"2801:5:8","nodeType":"YulTypedName","src":"2801:5:8","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"2811:8:8","nodeType":"YulTypedName","src":"2811:8:8","type":""}],"src":"2767:107:8"},{"body":{"nativeSrc":"2956:317:8","nodeType":"YulBlock","src":"2956:317:8","statements":[{"nativeSrc":"2966:35:8","nodeType":"YulVariableDeclaration","src":"2966:35:8","value":{"arguments":[{"name":"shiftBytes","nativeSrc":"2987:10:8","nodeType":"YulIdentifier","src":"2987:10:8"},{"kind":"number","nativeSrc":"2999:1:8","nodeType":"YulLiteral","src":"2999:1:8","type":"","value":"8"}],"functionName":{"name":"mul","nativeSrc":"2983:3:8","nodeType":"YulIdentifier","src":"2983:3:8"},"nativeSrc":"2983:18:8","nodeType":"YulFunctionCall","src":"2983:18:8"},"variables":[{"name":"shiftBits","nativeSrc":"2970:9:8","nodeType":"YulTypedName","src":"2970:9:8","type":""}]},{"nativeSrc":"3010:109:8","nodeType":"YulVariableDeclaration","src":"3010:109:8","value":{"arguments":[{"name":"shiftBits","nativeSrc":"3041:9:8","nodeType":"YulIdentifier","src":"3041:9:8"},{"kind":"number","nativeSrc":"3052:66:8","nodeType":"YulLiteral","src":"3052:66:8","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"3022:18:8","nodeType":"YulIdentifier","src":"3022:18:8"},"nativeSrc":"3022:97:8","nodeType":"YulFunctionCall","src":"3022:97:8"},"variables":[{"name":"mask","nativeSrc":"3014:4:8","nodeType":"YulTypedName","src":"3014:4:8","type":""}]},{"nativeSrc":"3128:51:8","nodeType":"YulAssignment","src":"3128:51:8","value":{"arguments":[{"name":"shiftBits","nativeSrc":"3159:9:8","nodeType":"YulIdentifier","src":"3159:9:8"},{"name":"toInsert","nativeSrc":"3170:8:8","nodeType":"YulIdentifier","src":"3170:8:8"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"3140:18:8","nodeType":"YulIdentifier","src":"3140:18:8"},"nativeSrc":"3140:39:8","nodeType":"YulFunctionCall","src":"3140:39:8"},"variableNames":[{"name":"toInsert","nativeSrc":"3128:8:8","nodeType":"YulIdentifier","src":"3128:8:8"}]},{"nativeSrc":"3188:30:8","nodeType":"YulAssignment","src":"3188:30:8","value":{"arguments":[{"name":"value","nativeSrc":"3201:5:8","nodeType":"YulIdentifier","src":"3201:5:8"},{"arguments":[{"name":"mask","nativeSrc":"3212:4:8","nodeType":"YulIdentifier","src":"3212:4:8"}],"functionName":{"name":"not","nativeSrc":"3208:3:8","nodeType":"YulIdentifier","src":"3208:3:8"},"nativeSrc":"3208:9:8","nodeType":"YulFunctionCall","src":"3208:9:8"}],"functionName":{"name":"and","nativeSrc":"3197:3:8","nodeType":"YulIdentifier","src":"3197:3:8"},"nativeSrc":"3197:21:8","nodeType":"YulFunctionCall","src":"3197:21:8"},"variableNames":[{"name":"value","nativeSrc":"3188:5:8","nodeType":"YulIdentifier","src":"3188:5:8"}]},{"nativeSrc":"3227:40:8","nodeType":"YulAssignment","src":"3227:40:8","value":{"arguments":[{"name":"value","nativeSrc":"3240:5:8","nodeType":"YulIdentifier","src":"3240:5:8"},{"arguments":[{"name":"toInsert","nativeSrc":"3251:8:8","nodeType":"YulIdentifier","src":"3251:8:8"},{"name":"mask","nativeSrc":"3261:4:8","nodeType":"YulIdentifier","src":"3261:4:8"}],"functionName":{"name":"and","nativeSrc":"3247:3:8","nodeType":"YulIdentifier","src":"3247:3:8"},"nativeSrc":"3247:19:8","nodeType":"YulFunctionCall","src":"3247:19:8"}],"functionName":{"name":"or","nativeSrc":"3237:2:8","nodeType":"YulIdentifier","src":"3237:2:8"},"nativeSrc":"3237:30:8","nodeType":"YulFunctionCall","src":"3237:30:8"},"variableNames":[{"name":"result","nativeSrc":"3227:6:8","nodeType":"YulIdentifier","src":"3227:6:8"}]}]},"name":"update_byte_slice_dynamic32","nativeSrc":"2880:393:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2917:5:8","nodeType":"YulTypedName","src":"2917:5:8","type":""},{"name":"shiftBytes","nativeSrc":"2924:10:8","nodeType":"YulTypedName","src":"2924:10:8","type":""},{"name":"toInsert","nativeSrc":"2936:8:8","nodeType":"YulTypedName","src":"2936:8:8","type":""}],"returnVariables":[{"name":"result","nativeSrc":"2949:6:8","nodeType":"YulTypedName","src":"2949:6:8","type":""}],"src":"2880:393:8"},{"body":{"nativeSrc":"3324:32:8","nodeType":"YulBlock","src":"3324:32:8","statements":[{"nativeSrc":"3334:16:8","nodeType":"YulAssignment","src":"3334:16:8","value":{"name":"value","nativeSrc":"3345:5:8","nodeType":"YulIdentifier","src":"3345:5:8"},"variableNames":[{"name":"cleaned","nativeSrc":"3334:7:8","nodeType":"YulIdentifier","src":"3334:7:8"}]}]},"name":"cleanup_t_uint256","nativeSrc":"3279:77:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3306:5:8","nodeType":"YulTypedName","src":"3306:5:8","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"3316:7:8","nodeType":"YulTypedName","src":"3316:7:8","type":""}],"src":"3279:77:8"},{"body":{"nativeSrc":"3394:28:8","nodeType":"YulBlock","src":"3394:28:8","statements":[{"nativeSrc":"3404:12:8","nodeType":"YulAssignment","src":"3404:12:8","value":{"name":"value","nativeSrc":"3411:5:8","nodeType":"YulIdentifier","src":"3411:5:8"},"variableNames":[{"name":"ret","nativeSrc":"3404:3:8","nodeType":"YulIdentifier","src":"3404:3:8"}]}]},"name":"identity","nativeSrc":"3362:60:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3380:5:8","nodeType":"YulTypedName","src":"3380:5:8","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"3390:3:8","nodeType":"YulTypedName","src":"3390:3:8","type":""}],"src":"3362:60:8"},{"body":{"nativeSrc":"3488:82:8","nodeType":"YulBlock","src":"3488:82:8","statements":[{"nativeSrc":"3498:66:8","nodeType":"YulAssignment","src":"3498:66:8","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3556:5:8","nodeType":"YulIdentifier","src":"3556:5:8"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"3538:17:8","nodeType":"YulIdentifier","src":"3538:17:8"},"nativeSrc":"3538:24:8","nodeType":"YulFunctionCall","src":"3538:24:8"}],"functionName":{"name":"identity","nativeSrc":"3529:8:8","nodeType":"YulIdentifier","src":"3529:8:8"},"nativeSrc":"3529:34:8","nodeType":"YulFunctionCall","src":"3529:34:8"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"3511:17:8","nodeType":"YulIdentifier","src":"3511:17:8"},"nativeSrc":"3511:53:8","nodeType":"YulFunctionCall","src":"3511:53:8"},"variableNames":[{"name":"converted","nativeSrc":"3498:9:8","nodeType":"YulIdentifier","src":"3498:9:8"}]}]},"name":"convert_t_uint256_to_t_uint256","nativeSrc":"3428:142:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3468:5:8","nodeType":"YulTypedName","src":"3468:5:8","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"3478:9:8","nodeType":"YulTypedName","src":"3478:9:8","type":""}],"src":"3428:142:8"},{"body":{"nativeSrc":"3623:28:8","nodeType":"YulBlock","src":"3623:28:8","statements":[{"nativeSrc":"3633:12:8","nodeType":"YulAssignment","src":"3633:12:8","value":{"name":"value","nativeSrc":"3640:5:8","nodeType":"YulIdentifier","src":"3640:5:8"},"variableNames":[{"name":"ret","nativeSrc":"3633:3:8","nodeType":"YulIdentifier","src":"3633:3:8"}]}]},"name":"prepare_store_t_uint256","nativeSrc":"3576:75:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3609:5:8","nodeType":"YulTypedName","src":"3609:5:8","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"3619:3:8","nodeType":"YulTypedName","src":"3619:3:8","type":""}],"src":"3576:75:8"},{"body":{"nativeSrc":"3733:193:8","nodeType":"YulBlock","src":"3733:193:8","statements":[{"nativeSrc":"3743:63:8","nodeType":"YulVariableDeclaration","src":"3743:63:8","value":{"arguments":[{"name":"value_0","nativeSrc":"3798:7:8","nodeType":"YulIdentifier","src":"3798:7:8"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nativeSrc":"3767:30:8","nodeType":"YulIdentifier","src":"3767:30:8"},"nativeSrc":"3767:39:8","nodeType":"YulFunctionCall","src":"3767:39:8"},"variables":[{"name":"convertedValue_0","nativeSrc":"3747:16:8","nodeType":"YulTypedName","src":"3747:16:8","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"3822:4:8","nodeType":"YulIdentifier","src":"3822:4:8"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"3862:4:8","nodeType":"YulIdentifier","src":"3862:4:8"}],"functionName":{"name":"sload","nativeSrc":"3856:5:8","nodeType":"YulIdentifier","src":"3856:5:8"},"nativeSrc":"3856:11:8","nodeType":"YulFunctionCall","src":"3856:11:8"},{"name":"offset","nativeSrc":"3869:6:8","nodeType":"YulIdentifier","src":"3869:6:8"},{"arguments":[{"name":"convertedValue_0","nativeSrc":"3901:16:8","nodeType":"YulIdentifier","src":"3901:16:8"}],"functionName":{"name":"prepare_store_t_uint256","nativeSrc":"3877:23:8","nodeType":"YulIdentifier","src":"3877:23:8"},"nativeSrc":"3877:41:8","nodeType":"YulFunctionCall","src":"3877:41:8"}],"functionName":{"name":"update_byte_slice_dynamic32","nativeSrc":"3828:27:8","nodeType":"YulIdentifier","src":"3828:27:8"},"nativeSrc":"3828:91:8","nodeType":"YulFunctionCall","src":"3828:91:8"}],"functionName":{"name":"sstore","nativeSrc":"3815:6:8","nodeType":"YulIdentifier","src":"3815:6:8"},"nativeSrc":"3815:105:8","nodeType":"YulFunctionCall","src":"3815:105:8"},"nativeSrc":"3815:105:8","nodeType":"YulExpressionStatement","src":"3815:105:8"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"3657:269:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"3710:4:8","nodeType":"YulTypedName","src":"3710:4:8","type":""},{"name":"offset","nativeSrc":"3716:6:8","nodeType":"YulTypedName","src":"3716:6:8","type":""},{"name":"value_0","nativeSrc":"3724:7:8","nodeType":"YulTypedName","src":"3724:7:8","type":""}],"src":"3657:269:8"},{"body":{"nativeSrc":"3981:24:8","nodeType":"YulBlock","src":"3981:24:8","statements":[{"nativeSrc":"3991:8:8","nodeType":"YulAssignment","src":"3991:8:8","value":{"kind":"number","nativeSrc":"3998:1:8","nodeType":"YulLiteral","src":"3998:1:8","type":"","value":"0"},"variableNames":[{"name":"ret","nativeSrc":"3991:3:8","nodeType":"YulIdentifier","src":"3991:3:8"}]}]},"name":"zero_value_for_split_t_uint256","nativeSrc":"3932:73:8","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nativeSrc":"3977:3:8","nodeType":"YulTypedName","src":"3977:3:8","type":""}],"src":"3932:73:8"},{"body":{"nativeSrc":"4064:136:8","nodeType":"YulBlock","src":"4064:136:8","statements":[{"nativeSrc":"4074:46:8","nodeType":"YulVariableDeclaration","src":"4074:46:8","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nativeSrc":"4088:30:8","nodeType":"YulIdentifier","src":"4088:30:8"},"nativeSrc":"4088:32:8","nodeType":"YulFunctionCall","src":"4088:32:8"},"variables":[{"name":"zero_0","nativeSrc":"4078:6:8","nodeType":"YulTypedName","src":"4078:6:8","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"4173:4:8","nodeType":"YulIdentifier","src":"4173:4:8"},{"name":"offset","nativeSrc":"4179:6:8","nodeType":"YulIdentifier","src":"4179:6:8"},{"name":"zero_0","nativeSrc":"4187:6:8","nodeType":"YulIdentifier","src":"4187:6:8"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"4129:43:8","nodeType":"YulIdentifier","src":"4129:43:8"},"nativeSrc":"4129:65:8","nodeType":"YulFunctionCall","src":"4129:65:8"},"nativeSrc":"4129:65:8","nodeType":"YulExpressionStatement","src":"4129:65:8"}]},"name":"storage_set_to_zero_t_uint256","nativeSrc":"4011:189:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"4050:4:8","nodeType":"YulTypedName","src":"4050:4:8","type":""},{"name":"offset","nativeSrc":"4056:6:8","nodeType":"YulTypedName","src":"4056:6:8","type":""}],"src":"4011:189:8"},{"body":{"nativeSrc":"4256:136:8","nodeType":"YulBlock","src":"4256:136:8","statements":[{"body":{"nativeSrc":"4323:63:8","nodeType":"YulBlock","src":"4323:63:8","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"4367:5:8","nodeType":"YulIdentifier","src":"4367:5:8"},{"kind":"number","nativeSrc":"4374:1:8","nodeType":"YulLiteral","src":"4374:1:8","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nativeSrc":"4337:29:8","nodeType":"YulIdentifier","src":"4337:29:8"},"nativeSrc":"4337:39:8","nodeType":"YulFunctionCall","src":"4337:39:8"},"nativeSrc":"4337:39:8","nodeType":"YulExpressionStatement","src":"4337:39:8"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"4276:5:8","nodeType":"YulIdentifier","src":"4276:5:8"},{"name":"end","nativeSrc":"4283:3:8","nodeType":"YulIdentifier","src":"4283:3:8"}],"functionName":{"name":"lt","nativeSrc":"4273:2:8","nodeType":"YulIdentifier","src":"4273:2:8"},"nativeSrc":"4273:14:8","nodeType":"YulFunctionCall","src":"4273:14:8"},"nativeSrc":"4266:120:8","nodeType":"YulForLoop","post":{"nativeSrc":"4288:26:8","nodeType":"YulBlock","src":"4288:26:8","statements":[{"nativeSrc":"4290:22:8","nodeType":"YulAssignment","src":"4290:22:8","value":{"arguments":[{"name":"start","nativeSrc":"4303:5:8","nodeType":"YulIdentifier","src":"4303:5:8"},{"kind":"number","nativeSrc":"4310:1:8","nodeType":"YulLiteral","src":"4310:1:8","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"4299:3:8","nodeType":"YulIdentifier","src":"4299:3:8"},"nativeSrc":"4299:13:8","nodeType":"YulFunctionCall","src":"4299:13:8"},"variableNames":[{"name":"start","nativeSrc":"4290:5:8","nodeType":"YulIdentifier","src":"4290:5:8"}]}]},"pre":{"nativeSrc":"4270:2:8","nodeType":"YulBlock","src":"4270:2:8","statements":[]},"src":"4266:120:8"}]},"name":"clear_storage_range_t_bytes1","nativeSrc":"4206:186:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nativeSrc":"4244:5:8","nodeType":"YulTypedName","src":"4244:5:8","type":""},{"name":"end","nativeSrc":"4251:3:8","nodeType":"YulTypedName","src":"4251:3:8","type":""}],"src":"4206:186:8"},{"body":{"nativeSrc":"4477:464:8","nodeType":"YulBlock","src":"4477:464:8","statements":[{"body":{"nativeSrc":"4503:431:8","nodeType":"YulBlock","src":"4503:431:8","statements":[{"nativeSrc":"4517:54:8","nodeType":"YulVariableDeclaration","src":"4517:54:8","value":{"arguments":[{"name":"array","nativeSrc":"4565:5:8","nodeType":"YulIdentifier","src":"4565:5:8"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"4533:31:8","nodeType":"YulIdentifier","src":"4533:31:8"},"nativeSrc":"4533:38:8","nodeType":"YulFunctionCall","src":"4533:38:8"},"variables":[{"name":"dataArea","nativeSrc":"4521:8:8","nodeType":"YulTypedName","src":"4521:8:8","type":""}]},{"nativeSrc":"4584:63:8","nodeType":"YulVariableDeclaration","src":"4584:63:8","value":{"arguments":[{"name":"dataArea","nativeSrc":"4607:8:8","nodeType":"YulIdentifier","src":"4607:8:8"},{"arguments":[{"name":"startIndex","nativeSrc":"4635:10:8","nodeType":"YulIdentifier","src":"4635:10:8"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"4617:17:8","nodeType":"YulIdentifier","src":"4617:17:8"},"nativeSrc":"4617:29:8","nodeType":"YulFunctionCall","src":"4617:29:8"}],"functionName":{"name":"add","nativeSrc":"4603:3:8","nodeType":"YulIdentifier","src":"4603:3:8"},"nativeSrc":"4603:44:8","nodeType":"YulFunctionCall","src":"4603:44:8"},"variables":[{"name":"deleteStart","nativeSrc":"4588:11:8","nodeType":"YulTypedName","src":"4588:11:8","type":""}]},{"body":{"nativeSrc":"4804:27:8","nodeType":"YulBlock","src":"4804:27:8","statements":[{"nativeSrc":"4806:23:8","nodeType":"YulAssignment","src":"4806:23:8","value":{"name":"dataArea","nativeSrc":"4821:8:8","nodeType":"YulIdentifier","src":"4821:8:8"},"variableNames":[{"name":"deleteStart","nativeSrc":"4806:11:8","nodeType":"YulIdentifier","src":"4806:11:8"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"4788:10:8","nodeType":"YulIdentifier","src":"4788:10:8"},{"kind":"number","nativeSrc":"4800:2:8","nodeType":"YulLiteral","src":"4800:2:8","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"4785:2:8","nodeType":"YulIdentifier","src":"4785:2:8"},"nativeSrc":"4785:18:8","nodeType":"YulFunctionCall","src":"4785:18:8"},"nativeSrc":"4782:49:8","nodeType":"YulIf","src":"4782:49:8"},{"expression":{"arguments":[{"name":"deleteStart","nativeSrc":"4873:11:8","nodeType":"YulIdentifier","src":"4873:11:8"},{"arguments":[{"name":"dataArea","nativeSrc":"4890:8:8","nodeType":"YulIdentifier","src":"4890:8:8"},{"arguments":[{"name":"len","nativeSrc":"4918:3:8","nodeType":"YulIdentifier","src":"4918:3:8"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"4900:17:8","nodeType":"YulIdentifier","src":"4900:17:8"},"nativeSrc":"4900:22:8","nodeType":"YulFunctionCall","src":"4900:22:8"}],"functionName":{"name":"add","nativeSrc":"4886:3:8","nodeType":"YulIdentifier","src":"4886:3:8"},"nativeSrc":"4886:37:8","nodeType":"YulFunctionCall","src":"4886:37:8"}],"functionName":{"name":"clear_storage_range_t_bytes1","nativeSrc":"4844:28:8","nodeType":"YulIdentifier","src":"4844:28:8"},"nativeSrc":"4844:80:8","nodeType":"YulFunctionCall","src":"4844:80:8"},"nativeSrc":"4844:80:8","nodeType":"YulExpressionStatement","src":"4844:80:8"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"4494:3:8","nodeType":"YulIdentifier","src":"4494:3:8"},{"kind":"number","nativeSrc":"4499:2:8","nodeType":"YulLiteral","src":"4499:2:8","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"4491:2:8","nodeType":"YulIdentifier","src":"4491:2:8"},"nativeSrc":"4491:11:8","nodeType":"YulFunctionCall","src":"4491:11:8"},"nativeSrc":"4488:446:8","nodeType":"YulIf","src":"4488:446:8"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"4398:543:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"4453:5:8","nodeType":"YulTypedName","src":"4453:5:8","type":""},{"name":"len","nativeSrc":"4460:3:8","nodeType":"YulTypedName","src":"4460:3:8","type":""},{"name":"startIndex","nativeSrc":"4465:10:8","nodeType":"YulTypedName","src":"4465:10:8","type":""}],"src":"4398:543:8"},{"body":{"nativeSrc":"5010:54:8","nodeType":"YulBlock","src":"5010:54:8","statements":[{"nativeSrc":"5020:37:8","nodeType":"YulAssignment","src":"5020:37:8","value":{"arguments":[{"name":"bits","nativeSrc":"5045:4:8","nodeType":"YulIdentifier","src":"5045:4:8"},{"name":"value","nativeSrc":"5051:5:8","nodeType":"YulIdentifier","src":"5051:5:8"}],"functionName":{"name":"shr","nativeSrc":"5041:3:8","nodeType":"YulIdentifier","src":"5041:3:8"},"nativeSrc":"5041:16:8","nodeType":"YulFunctionCall","src":"5041:16:8"},"variableNames":[{"name":"newValue","nativeSrc":"5020:8:8","nodeType":"YulIdentifier","src":"5020:8:8"}]}]},"name":"shift_right_unsigned_dynamic","nativeSrc":"4947:117:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"4985:4:8","nodeType":"YulTypedName","src":"4985:4:8","type":""},{"name":"value","nativeSrc":"4991:5:8","nodeType":"YulTypedName","src":"4991:5:8","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"5001:8:8","nodeType":"YulTypedName","src":"5001:8:8","type":""}],"src":"4947:117:8"},{"body":{"nativeSrc":"5121:118:8","nodeType":"YulBlock","src":"5121:118:8","statements":[{"nativeSrc":"5131:68:8","nodeType":"YulVariableDeclaration","src":"5131:68:8","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"5180:1:8","nodeType":"YulLiteral","src":"5180:1:8","type":"","value":"8"},{"name":"bytes","nativeSrc":"5183:5:8","nodeType":"YulIdentifier","src":"5183:5:8"}],"functionName":{"name":"mul","nativeSrc":"5176:3:8","nodeType":"YulIdentifier","src":"5176:3:8"},"nativeSrc":"5176:13:8","nodeType":"YulFunctionCall","src":"5176:13:8"},{"arguments":[{"kind":"number","nativeSrc":"5195:1:8","nodeType":"YulLiteral","src":"5195:1:8","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"5191:3:8","nodeType":"YulIdentifier","src":"5191:3:8"},"nativeSrc":"5191:6:8","nodeType":"YulFunctionCall","src":"5191:6:8"}],"functionName":{"name":"shift_right_unsigned_dynamic","nativeSrc":"5147:28:8","nodeType":"YulIdentifier","src":"5147:28:8"},"nativeSrc":"5147:51:8","nodeType":"YulFunctionCall","src":"5147:51:8"}],"functionName":{"name":"not","nativeSrc":"5143:3:8","nodeType":"YulIdentifier","src":"5143:3:8"},"nativeSrc":"5143:56:8","nodeType":"YulFunctionCall","src":"5143:56:8"},"variables":[{"name":"mask","nativeSrc":"5135:4:8","nodeType":"YulTypedName","src":"5135:4:8","type":""}]},{"nativeSrc":"5208:25:8","nodeType":"YulAssignment","src":"5208:25:8","value":{"arguments":[{"name":"data","nativeSrc":"5222:4:8","nodeType":"YulIdentifier","src":"5222:4:8"},{"name":"mask","nativeSrc":"5228:4:8","nodeType":"YulIdentifier","src":"5228:4:8"}],"functionName":{"name":"and","nativeSrc":"5218:3:8","nodeType":"YulIdentifier","src":"5218:3:8"},"nativeSrc":"5218:15:8","nodeType":"YulFunctionCall","src":"5218:15:8"},"variableNames":[{"name":"result","nativeSrc":"5208:6:8","nodeType":"YulIdentifier","src":"5208:6:8"}]}]},"name":"mask_bytes_dynamic","nativeSrc":"5070:169:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"5098:4:8","nodeType":"YulTypedName","src":"5098:4:8","type":""},{"name":"bytes","nativeSrc":"5104:5:8","nodeType":"YulTypedName","src":"5104:5:8","type":""}],"returnVariables":[{"name":"result","nativeSrc":"5114:6:8","nodeType":"YulTypedName","src":"5114:6:8","type":""}],"src":"5070:169:8"},{"body":{"nativeSrc":"5325:214:8","nodeType":"YulBlock","src":"5325:214:8","statements":[{"nativeSrc":"5458:37:8","nodeType":"YulAssignment","src":"5458:37:8","value":{"arguments":[{"name":"data","nativeSrc":"5485:4:8","nodeType":"YulIdentifier","src":"5485:4:8"},{"name":"len","nativeSrc":"5491:3:8","nodeType":"YulIdentifier","src":"5491:3:8"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"5466:18:8","nodeType":"YulIdentifier","src":"5466:18:8"},"nativeSrc":"5466:29:8","nodeType":"YulFunctionCall","src":"5466:29:8"},"variableNames":[{"name":"data","nativeSrc":"5458:4:8","nodeType":"YulIdentifier","src":"5458:4:8"}]},{"nativeSrc":"5504:29:8","nodeType":"YulAssignment","src":"5504:29:8","value":{"arguments":[{"name":"data","nativeSrc":"5515:4:8","nodeType":"YulIdentifier","src":"5515:4:8"},{"arguments":[{"kind":"number","nativeSrc":"5525:1:8","nodeType":"YulLiteral","src":"5525:1:8","type":"","value":"2"},{"name":"len","nativeSrc":"5528:3:8","nodeType":"YulIdentifier","src":"5528:3:8"}],"functionName":{"name":"mul","nativeSrc":"5521:3:8","nodeType":"YulIdentifier","src":"5521:3:8"},"nativeSrc":"5521:11:8","nodeType":"YulFunctionCall","src":"5521:11:8"}],"functionName":{"name":"or","nativeSrc":"5512:2:8","nodeType":"YulIdentifier","src":"5512:2:8"},"nativeSrc":"5512:21:8","nodeType":"YulFunctionCall","src":"5512:21:8"},"variableNames":[{"name":"used","nativeSrc":"5504:4:8","nodeType":"YulIdentifier","src":"5504:4:8"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"5244:295:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"5306:4:8","nodeType":"YulTypedName","src":"5306:4:8","type":""},{"name":"len","nativeSrc":"5312:3:8","nodeType":"YulTypedName","src":"5312:3:8","type":""}],"returnVariables":[{"name":"used","nativeSrc":"5320:4:8","nodeType":"YulTypedName","src":"5320:4:8","type":""}],"src":"5244:295:8"},{"body":{"nativeSrc":"5636:1303:8","nodeType":"YulBlock","src":"5636:1303:8","statements":[{"nativeSrc":"5647:51:8","nodeType":"YulVariableDeclaration","src":"5647:51:8","value":{"arguments":[{"name":"src","nativeSrc":"5694:3:8","nodeType":"YulIdentifier","src":"5694:3:8"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"5661:32:8","nodeType":"YulIdentifier","src":"5661:32:8"},"nativeSrc":"5661:37:8","nodeType":"YulFunctionCall","src":"5661:37:8"},"variables":[{"name":"newLen","nativeSrc":"5651:6:8","nodeType":"YulTypedName","src":"5651:6:8","type":""}]},{"body":{"nativeSrc":"5783:22:8","nodeType":"YulBlock","src":"5783:22:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"5785:16:8","nodeType":"YulIdentifier","src":"5785:16:8"},"nativeSrc":"5785:18:8","nodeType":"YulFunctionCall","src":"5785:18:8"},"nativeSrc":"5785:18:8","nodeType":"YulExpressionStatement","src":"5785:18:8"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"5755:6:8","nodeType":"YulIdentifier","src":"5755:6:8"},{"kind":"number","nativeSrc":"5763:18:8","nodeType":"YulLiteral","src":"5763:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"5752:2:8","nodeType":"YulIdentifier","src":"5752:2:8"},"nativeSrc":"5752:30:8","nodeType":"YulFunctionCall","src":"5752:30:8"},"nativeSrc":"5749:56:8","nodeType":"YulIf","src":"5749:56:8"},{"nativeSrc":"5815:52:8","nodeType":"YulVariableDeclaration","src":"5815:52:8","value":{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"5861:4:8","nodeType":"YulIdentifier","src":"5861:4:8"}],"functionName":{"name":"sload","nativeSrc":"5855:5:8","nodeType":"YulIdentifier","src":"5855:5:8"},"nativeSrc":"5855:11:8","nodeType":"YulFunctionCall","src":"5855:11:8"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"5829:25:8","nodeType":"YulIdentifier","src":"5829:25:8"},"nativeSrc":"5829:38:8","nodeType":"YulFunctionCall","src":"5829:38:8"},"variables":[{"name":"oldLen","nativeSrc":"5819:6:8","nodeType":"YulTypedName","src":"5819:6:8","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"5960:4:8","nodeType":"YulIdentifier","src":"5960:4:8"},{"name":"oldLen","nativeSrc":"5966:6:8","nodeType":"YulIdentifier","src":"5966:6:8"},{"name":"newLen","nativeSrc":"5974:6:8","nodeType":"YulIdentifier","src":"5974:6:8"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"5914:45:8","nodeType":"YulIdentifier","src":"5914:45:8"},"nativeSrc":"5914:67:8","nodeType":"YulFunctionCall","src":"5914:67:8"},"nativeSrc":"5914:67:8","nodeType":"YulExpressionStatement","src":"5914:67:8"},{"nativeSrc":"5991:18:8","nodeType":"YulVariableDeclaration","src":"5991:18:8","value":{"kind":"number","nativeSrc":"6008:1:8","nodeType":"YulLiteral","src":"6008:1:8","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"5995:9:8","nodeType":"YulTypedName","src":"5995:9:8","type":""}]},{"nativeSrc":"6019:17:8","nodeType":"YulAssignment","src":"6019:17:8","value":{"kind":"number","nativeSrc":"6032:4:8","nodeType":"YulLiteral","src":"6032:4:8","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"6019:9:8","nodeType":"YulIdentifier","src":"6019:9:8"}]},{"cases":[{"body":{"nativeSrc":"6083:611:8","nodeType":"YulBlock","src":"6083:611:8","statements":[{"nativeSrc":"6097:37:8","nodeType":"YulVariableDeclaration","src":"6097:37:8","value":{"arguments":[{"name":"newLen","nativeSrc":"6116:6:8","nodeType":"YulIdentifier","src":"6116:6:8"},{"arguments":[{"kind":"number","nativeSrc":"6128:4:8","nodeType":"YulLiteral","src":"6128:4:8","type":"","value":"0x1f"}],"functionName":{"name":"not","nativeSrc":"6124:3:8","nodeType":"YulIdentifier","src":"6124:3:8"},"nativeSrc":"6124:9:8","nodeType":"YulFunctionCall","src":"6124:9:8"}],"functionName":{"name":"and","nativeSrc":"6112:3:8","nodeType":"YulIdentifier","src":"6112:3:8"},"nativeSrc":"6112:22:8","nodeType":"YulFunctionCall","src":"6112:22:8"},"variables":[{"name":"loopEnd","nativeSrc":"6101:7:8","nodeType":"YulTypedName","src":"6101:7:8","type":""}]},{"nativeSrc":"6148:51:8","nodeType":"YulVariableDeclaration","src":"6148:51:8","value":{"arguments":[{"name":"slot","nativeSrc":"6194:4:8","nodeType":"YulIdentifier","src":"6194:4:8"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"6162:31:8","nodeType":"YulIdentifier","src":"6162:31:8"},"nativeSrc":"6162:37:8","nodeType":"YulFunctionCall","src":"6162:37:8"},"variables":[{"name":"dstPtr","nativeSrc":"6152:6:8","nodeType":"YulTypedName","src":"6152:6:8","type":""}]},{"nativeSrc":"6212:10:8","nodeType":"YulVariableDeclaration","src":"6212:10:8","value":{"kind":"number","nativeSrc":"6221:1:8","nodeType":"YulLiteral","src":"6221:1:8","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"6216:1:8","nodeType":"YulTypedName","src":"6216:1:8","type":""}]},{"body":{"nativeSrc":"6280:163:8","nodeType":"YulBlock","src":"6280:163:8","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"6305:6:8","nodeType":"YulIdentifier","src":"6305:6:8"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"6323:3:8","nodeType":"YulIdentifier","src":"6323:3:8"},{"name":"srcOffset","nativeSrc":"6328:9:8","nodeType":"YulIdentifier","src":"6328:9:8"}],"functionName":{"name":"add","nativeSrc":"6319:3:8","nodeType":"YulIdentifier","src":"6319:3:8"},"nativeSrc":"6319:19:8","nodeType":"YulFunctionCall","src":"6319:19:8"}],"functionName":{"name":"mload","nativeSrc":"6313:5:8","nodeType":"YulIdentifier","src":"6313:5:8"},"nativeSrc":"6313:26:8","nodeType":"YulFunctionCall","src":"6313:26:8"}],"functionName":{"name":"sstore","nativeSrc":"6298:6:8","nodeType":"YulIdentifier","src":"6298:6:8"},"nativeSrc":"6298:42:8","nodeType":"YulFunctionCall","src":"6298:42:8"},"nativeSrc":"6298:42:8","nodeType":"YulExpressionStatement","src":"6298:42:8"},{"nativeSrc":"6357:24:8","nodeType":"YulAssignment","src":"6357:24:8","value":{"arguments":[{"name":"dstPtr","nativeSrc":"6371:6:8","nodeType":"YulIdentifier","src":"6371:6:8"},{"kind":"number","nativeSrc":"6379:1:8","nodeType":"YulLiteral","src":"6379:1:8","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"6367:3:8","nodeType":"YulIdentifier","src":"6367:3:8"},"nativeSrc":"6367:14:8","nodeType":"YulFunctionCall","src":"6367:14:8"},"variableNames":[{"name":"dstPtr","nativeSrc":"6357:6:8","nodeType":"YulIdentifier","src":"6357:6:8"}]},{"nativeSrc":"6398:31:8","nodeType":"YulAssignment","src":"6398:31:8","value":{"arguments":[{"name":"srcOffset","nativeSrc":"6415:9:8","nodeType":"YulIdentifier","src":"6415:9:8"},{"kind":"number","nativeSrc":"6426:2:8","nodeType":"YulLiteral","src":"6426:2:8","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6411:3:8","nodeType":"YulIdentifier","src":"6411:3:8"},"nativeSrc":"6411:18:8","nodeType":"YulFunctionCall","src":"6411:18:8"},"variableNames":[{"name":"srcOffset","nativeSrc":"6398:9:8","nodeType":"YulIdentifier","src":"6398:9:8"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"6246:1:8","nodeType":"YulIdentifier","src":"6246:1:8"},{"name":"loopEnd","nativeSrc":"6249:7:8","nodeType":"YulIdentifier","src":"6249:7:8"}],"functionName":{"name":"lt","nativeSrc":"6243:2:8","nodeType":"YulIdentifier","src":"6243:2:8"},"nativeSrc":"6243:14:8","nodeType":"YulFunctionCall","src":"6243:14:8"},"nativeSrc":"6235:208:8","nodeType":"YulForLoop","post":{"nativeSrc":"6258:21:8","nodeType":"YulBlock","src":"6258:21:8","statements":[{"nativeSrc":"6260:17:8","nodeType":"YulAssignment","src":"6260:17:8","value":{"arguments":[{"name":"i","nativeSrc":"6269:1:8","nodeType":"YulIdentifier","src":"6269:1:8"},{"kind":"number","nativeSrc":"6272:4:8","nodeType":"YulLiteral","src":"6272:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6265:3:8","nodeType":"YulIdentifier","src":"6265:3:8"},"nativeSrc":"6265:12:8","nodeType":"YulFunctionCall","src":"6265:12:8"},"variableNames":[{"name":"i","nativeSrc":"6260:1:8","nodeType":"YulIdentifier","src":"6260:1:8"}]}]},"pre":{"nativeSrc":"6239:3:8","nodeType":"YulBlock","src":"6239:3:8","statements":[]},"src":"6235:208:8"},{"body":{"nativeSrc":"6479:156:8","nodeType":"YulBlock","src":"6479:156:8","statements":[{"nativeSrc":"6497:43:8","nodeType":"YulVariableDeclaration","src":"6497:43:8","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"6524:3:8","nodeType":"YulIdentifier","src":"6524:3:8"},{"name":"srcOffset","nativeSrc":"6529:9:8","nodeType":"YulIdentifier","src":"6529:9:8"}],"functionName":{"name":"add","nativeSrc":"6520:3:8","nodeType":"YulIdentifier","src":"6520:3:8"},"nativeSrc":"6520:19:8","nodeType":"YulFunctionCall","src":"6520:19:8"}],"functionName":{"name":"mload","nativeSrc":"6514:5:8","nodeType":"YulIdentifier","src":"6514:5:8"},"nativeSrc":"6514:26:8","nodeType":"YulFunctionCall","src":"6514:26:8"},"variables":[{"name":"lastValue","nativeSrc":"6501:9:8","nodeType":"YulTypedName","src":"6501:9:8","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"6564:6:8","nodeType":"YulIdentifier","src":"6564:6:8"},{"arguments":[{"name":"lastValue","nativeSrc":"6591:9:8","nodeType":"YulIdentifier","src":"6591:9:8"},{"arguments":[{"name":"newLen","nativeSrc":"6606:6:8","nodeType":"YulIdentifier","src":"6606:6:8"},{"kind":"number","nativeSrc":"6614:4:8","nodeType":"YulLiteral","src":"6614:4:8","type":"","value":"0x1f"}],"functionName":{"name":"and","nativeSrc":"6602:3:8","nodeType":"YulIdentifier","src":"6602:3:8"},"nativeSrc":"6602:17:8","nodeType":"YulFunctionCall","src":"6602:17:8"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"6572:18:8","nodeType":"YulIdentifier","src":"6572:18:8"},"nativeSrc":"6572:48:8","nodeType":"YulFunctionCall","src":"6572:48:8"}],"functionName":{"name":"sstore","nativeSrc":"6557:6:8","nodeType":"YulIdentifier","src":"6557:6:8"},"nativeSrc":"6557:64:8","nodeType":"YulFunctionCall","src":"6557:64:8"},"nativeSrc":"6557:64:8","nodeType":"YulExpressionStatement","src":"6557:64:8"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"6462:7:8","nodeType":"YulIdentifier","src":"6462:7:8"},{"name":"newLen","nativeSrc":"6471:6:8","nodeType":"YulIdentifier","src":"6471:6:8"}],"functionName":{"name":"lt","nativeSrc":"6459:2:8","nodeType":"YulIdentifier","src":"6459:2:8"},"nativeSrc":"6459:19:8","nodeType":"YulFunctionCall","src":"6459:19:8"},"nativeSrc":"6456:179:8","nodeType":"YulIf","src":"6456:179:8"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"6655:4:8","nodeType":"YulIdentifier","src":"6655:4:8"},{"arguments":[{"arguments":[{"name":"newLen","nativeSrc":"6669:6:8","nodeType":"YulIdentifier","src":"6669:6:8"},{"kind":"number","nativeSrc":"6677:1:8","nodeType":"YulLiteral","src":"6677:1:8","type":"","value":"2"}],"functionName":{"name":"mul","nativeSrc":"6665:3:8","nodeType":"YulIdentifier","src":"6665:3:8"},"nativeSrc":"6665:14:8","nodeType":"YulFunctionCall","src":"6665:14:8"},{"kind":"number","nativeSrc":"6681:1:8","nodeType":"YulLiteral","src":"6681:1:8","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"6661:3:8","nodeType":"YulIdentifier","src":"6661:3:8"},"nativeSrc":"6661:22:8","nodeType":"YulFunctionCall","src":"6661:22:8"}],"functionName":{"name":"sstore","nativeSrc":"6648:6:8","nodeType":"YulIdentifier","src":"6648:6:8"},"nativeSrc":"6648:36:8","nodeType":"YulFunctionCall","src":"6648:36:8"},"nativeSrc":"6648:36:8","nodeType":"YulExpressionStatement","src":"6648:36:8"}]},"nativeSrc":"6076:618:8","nodeType":"YulCase","src":"6076:618:8","value":{"kind":"number","nativeSrc":"6081:1:8","nodeType":"YulLiteral","src":"6081:1:8","type":"","value":"1"}},{"body":{"nativeSrc":"6711:222:8","nodeType":"YulBlock","src":"6711:222:8","statements":[{"nativeSrc":"6725:14:8","nodeType":"YulVariableDeclaration","src":"6725:14:8","value":{"kind":"number","nativeSrc":"6738:1:8","nodeType":"YulLiteral","src":"6738:1:8","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"6729:5:8","nodeType":"YulTypedName","src":"6729:5:8","type":""}]},{"body":{"nativeSrc":"6762:67:8","nodeType":"YulBlock","src":"6762:67:8","statements":[{"nativeSrc":"6780:35:8","nodeType":"YulAssignment","src":"6780:35:8","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"6799:3:8","nodeType":"YulIdentifier","src":"6799:3:8"},{"name":"srcOffset","nativeSrc":"6804:9:8","nodeType":"YulIdentifier","src":"6804:9:8"}],"functionName":{"name":"add","nativeSrc":"6795:3:8","nodeType":"YulIdentifier","src":"6795:3:8"},"nativeSrc":"6795:19:8","nodeType":"YulFunctionCall","src":"6795:19:8"}],"functionName":{"name":"mload","nativeSrc":"6789:5:8","nodeType":"YulIdentifier","src":"6789:5:8"},"nativeSrc":"6789:26:8","nodeType":"YulFunctionCall","src":"6789:26:8"},"variableNames":[{"name":"value","nativeSrc":"6780:5:8","nodeType":"YulIdentifier","src":"6780:5:8"}]}]},"condition":{"name":"newLen","nativeSrc":"6755:6:8","nodeType":"YulIdentifier","src":"6755:6:8"},"nativeSrc":"6752:77:8","nodeType":"YulIf","src":"6752:77:8"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"6849:4:8","nodeType":"YulIdentifier","src":"6849:4:8"},{"arguments":[{"name":"value","nativeSrc":"6908:5:8","nodeType":"YulIdentifier","src":"6908:5:8"},{"name":"newLen","nativeSrc":"6915:6:8","nodeType":"YulIdentifier","src":"6915:6:8"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"6855:52:8","nodeType":"YulIdentifier","src":"6855:52:8"},"nativeSrc":"6855:67:8","nodeType":"YulFunctionCall","src":"6855:67:8"}],"functionName":{"name":"sstore","nativeSrc":"6842:6:8","nodeType":"YulIdentifier","src":"6842:6:8"},"nativeSrc":"6842:81:8","nodeType":"YulFunctionCall","src":"6842:81:8"},"nativeSrc":"6842:81:8","nodeType":"YulExpressionStatement","src":"6842:81:8"}]},"nativeSrc":"6703:230:8","nodeType":"YulCase","src":"6703:230:8","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"6056:6:8","nodeType":"YulIdentifier","src":"6056:6:8"},{"kind":"number","nativeSrc":"6064:2:8","nodeType":"YulLiteral","src":"6064:2:8","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"6053:2:8","nodeType":"YulIdentifier","src":"6053:2:8"},"nativeSrc":"6053:14:8","nodeType":"YulFunctionCall","src":"6053:14:8"},"nativeSrc":"6046:887:8","nodeType":"YulSwitch","src":"6046:887:8"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"5544:1395:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"5625:4:8","nodeType":"YulTypedName","src":"5625:4:8","type":""},{"name":"src","nativeSrc":"5631:3:8","nodeType":"YulTypedName","src":"5631:3:8","type":""}],"src":"5544:1395:8"},{"body":{"nativeSrc":"7010:53:8","nodeType":"YulBlock","src":"7010:53:8","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"7027:3:8","nodeType":"YulIdentifier","src":"7027:3:8"},{"arguments":[{"name":"value","nativeSrc":"7050:5:8","nodeType":"YulIdentifier","src":"7050:5:8"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"7032:17:8","nodeType":"YulIdentifier","src":"7032:17:8"},"nativeSrc":"7032:24:8","nodeType":"YulFunctionCall","src":"7032:24:8"}],"functionName":{"name":"mstore","nativeSrc":"7020:6:8","nodeType":"YulIdentifier","src":"7020:6:8"},"nativeSrc":"7020:37:8","nodeType":"YulFunctionCall","src":"7020:37:8"},"nativeSrc":"7020:37:8","nodeType":"YulExpressionStatement","src":"7020:37:8"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"6945:118:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6998:5:8","nodeType":"YulTypedName","src":"6998:5:8","type":""},{"name":"pos","nativeSrc":"7005:3:8","nodeType":"YulTypedName","src":"7005:3:8","type":""}],"src":"6945:118:8"},{"body":{"nativeSrc":"7167:124:8","nodeType":"YulBlock","src":"7167:124:8","statements":[{"nativeSrc":"7177:26:8","nodeType":"YulAssignment","src":"7177:26:8","value":{"arguments":[{"name":"headStart","nativeSrc":"7189:9:8","nodeType":"YulIdentifier","src":"7189:9:8"},{"kind":"number","nativeSrc":"7200:2:8","nodeType":"YulLiteral","src":"7200:2:8","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7185:3:8","nodeType":"YulIdentifier","src":"7185:3:8"},"nativeSrc":"7185:18:8","nodeType":"YulFunctionCall","src":"7185:18:8"},"variableNames":[{"name":"tail","nativeSrc":"7177:4:8","nodeType":"YulIdentifier","src":"7177:4:8"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"7257:6:8","nodeType":"YulIdentifier","src":"7257:6:8"},{"arguments":[{"name":"headStart","nativeSrc":"7270:9:8","nodeType":"YulIdentifier","src":"7270:9:8"},{"kind":"number","nativeSrc":"7281:1:8","nodeType":"YulLiteral","src":"7281:1:8","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"7266:3:8","nodeType":"YulIdentifier","src":"7266:3:8"},"nativeSrc":"7266:17:8","nodeType":"YulFunctionCall","src":"7266:17:8"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"7213:43:8","nodeType":"YulIdentifier","src":"7213:43:8"},"nativeSrc":"7213:71:8","nodeType":"YulFunctionCall","src":"7213:71:8"},"nativeSrc":"7213:71:8","nodeType":"YulExpressionStatement","src":"7213:71:8"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"7069:222:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7139:9:8","nodeType":"YulTypedName","src":"7139:9:8","type":""},{"name":"value0","nativeSrc":"7151:6:8","nodeType":"YulTypedName","src":"7151:6:8","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7162:4:8","nodeType":"YulTypedName","src":"7162:4:8","type":""}],"src":"7069:222:8"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bytes32_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bytes32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":8,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b5060405162001da438038062001da48339818101604052810190620000379190620002cb565b816040518060400160405280600f81526020017f416e74656b204d6e6d20546f6b656e00000000000000000000000000000000008152506040518060400160405280600381526020017f4d4e4d00000000000000000000000000000000000000000000000000000000008152508160039081620000b591906200058c565b508060049081620000c791906200058c565b505050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036200013f5760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040162000136919062000684565b60405180910390fd5b62000150816200016060201b60201c565b50806006819055505050620006a1565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000258826200022b565b9050919050565b6200026a816200024b565b81146200027657600080fd5b50565b6000815190506200028a816200025f565b92915050565b6000819050919050565b620002a58162000290565b8114620002b157600080fd5b50565b600081519050620002c5816200029a565b92915050565b60008060408385031215620002e557620002e462000226565b5b6000620002f58582860162000279565b92505060206200030885828601620002b4565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200039457607f821691505b602082108103620003aa57620003a96200034c565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620004147fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620003d5565b620004208683620003d5565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006200046d62000467620004618462000438565b62000442565b62000438565b9050919050565b6000819050919050565b62000489836200044c565b620004a1620004988262000474565b848454620003e2565b825550505050565b600090565b620004b8620004a9565b620004c58184846200047e565b505050565b5b81811015620004ed57620004e1600082620004ae565b600181019050620004cb565b5050565b601f8211156200053c576200050681620003b0565b6200051184620003c5565b8101602085101562000521578190505b620005396200053085620003c5565b830182620004ca565b50505b505050565b600082821c905092915050565b6000620005616000198460080262000541565b1980831691505092915050565b60006200057c83836200054e565b9150826002028217905092915050565b620005978262000312565b67ffffffffffffffff811115620005b357620005b26200031d565b5b620005bf82546200037b565b620005cc828285620004f1565b600060209050601f831160018114620006045760008415620005ef578287015190505b620005fb85826200056e565b8655506200066b565b601f1984166200061486620003b0565b60005b828110156200063e5784890151825560018201915060208501945060208101905062000617565b868310156200065e57848901516200065a601f8916826200054e565b8355505b6001600288020188555050505b505050505050565b6200067e816200024b565b82525050565b60006020820190506200069b600083018462000673565b92915050565b6116f380620006b16000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c8063715018a61161009757806395d89b411161006657806395d89b4114610262578063a9059cbb14610280578063dd62ed3e146102b0578063f2fde38b146102e0576100f5565b8063715018a6146102025780637bf322701461020c5780637cb64759146102285780638da5cb5b14610244576100f5565b806323b872dd116100d357806323b872dd146101665780632eb4a7ab14610196578063313ce567146101b457806370a08231146101d2576100f5565b806306fdde03146100fa578063095ea7b31461011857806318160ddd14610148575b600080fd5b6101026102fc565b60405161010f91906110e9565b60405180910390f35b610132600480360381019061012d91906111a9565b61038e565b60405161013f9190611204565b60405180910390f35b6101506103b1565b60405161015d919061122e565b60405180910390f35b610180600480360381019061017b9190611249565b6103bb565b60405161018d9190611204565b60405180910390f35b61019e6103ea565b6040516101ab91906112b5565b60405180910390f35b6101bc6103f0565b6040516101c991906112ec565b60405180910390f35b6101ec60048036038101906101e79190611307565b6103f9565b6040516101f9919061122e565b60405180910390f35b61020a610441565b005b61022660048036038101906102219190611399565b610455565b005b610242600480360381019061023d9190611425565b61059b565b005b61024c6105ad565b6040516102599190611461565b60405180910390f35b61026a6105d7565b60405161027791906110e9565b60405180910390f35b61029a600480360381019061029591906111a9565b610669565b6040516102a79190611204565b60405180910390f35b6102ca60048036038101906102c5919061147c565b61068c565b6040516102d7919061122e565b60405180910390f35b6102fa60048036038101906102f59190611307565b610713565b005b60606003805461030b906114eb565b80601f0160208091040260200160405190810160405280929190818152602001828054610337906114eb565b80156103845780601f1061035957610100808354040283529160200191610384565b820191906000526020600020905b81548152906001019060200180831161036757829003601f168201915b5050505050905090565b600080610399610799565b90506103a68185856107a1565b600191505092915050565b6000600254905090565b6000806103c6610799565b90506103d38582856107b3565b6103de858585610847565b60019150509392505050565b60065481565b60006012905090565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b61044961093b565b61045360006109c2565b565b610460338383610a88565b61049f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049690611568565b60405180910390fd5b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161561052c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610523906115d4565b60405180910390fd5b6001600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555061059683671bc16d674ec80000610b32565b505050565b6105a361093b565b8060068190555050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600480546105e6906114eb565b80601f0160208091040260200160405190810160405280929190818152602001828054610612906114eb565b801561065f5780601f106106345761010080835404028352916020019161065f565b820191906000526020600020905b81548152906001019060200180831161064257829003601f168201915b5050505050905090565b600080610674610799565b9050610681818585610847565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b61071b61093b565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361078d5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016107849190611461565b60405180910390fd5b610796816109c2565b50565b600033905090565b6107ae8383836001610bb4565b505050565b60006107bf848461068c565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146108415781811015610831578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610828939291906115f4565b60405180910390fd5b61084084848484036000610bb4565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036108b95760006040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016108b09190611461565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361092b5760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016109229190611461565b60405180910390fd5b610936838383610d8b565b505050565b610943610799565b73ffffffffffffffffffffffffffffffffffffffff166109616105ad565b73ffffffffffffffffffffffffffffffffffffffff16146109c057610984610799565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016109b79190611461565b60405180910390fd5b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008084604051602001610a9c9190611461565b60405160208183030381529060405280519060200120604051602001610ac291906112b5565b604051602081830303815290604052805190602001209050610b28848480806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505060065483610fb0565b9150509392505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ba45760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610b9b9190611461565b60405180910390fd5b610bb060008383610d8b565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610c265760006040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610c1d9190611461565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610c985760006040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610c8f9190611461565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015610d85578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610d7c919061122e565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610ddd578060026000828254610dd1919061165a565b92505081905550610eb0565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610e69578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610e60939291906115f4565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ef95780600260008282540392505081905550610f46565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610fa3919061122e565b60405180910390a3505050565b600082610fbd8584610fc7565b1490509392505050565b60008082905060005b845181101561100c57610ffd82868381518110610ff057610fef61168e565b5b6020026020010151611017565b91508080600101915050610fd0565b508091505092915050565b600081831061102f5761102a8284611042565b61103a565b6110398383611042565b5b905092915050565b600082600052816020526040600020905092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611093578082015181840152602081019050611078565b60008484015250505050565b6000601f19601f8301169050919050565b60006110bb82611059565b6110c58185611064565b93506110d5818560208601611075565b6110de8161109f565b840191505092915050565b6000602082019050818103600083015261110381846110b0565b905092915050565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061114082611115565b9050919050565b61115081611135565b811461115b57600080fd5b50565b60008135905061116d81611147565b92915050565b6000819050919050565b61118681611173565b811461119157600080fd5b50565b6000813590506111a38161117d565b92915050565b600080604083850312156111c0576111bf61110b565b5b60006111ce8582860161115e565b92505060206111df85828601611194565b9150509250929050565b60008115159050919050565b6111fe816111e9565b82525050565b600060208201905061121960008301846111f5565b92915050565b61122881611173565b82525050565b6000602082019050611243600083018461121f565b92915050565b6000806000606084860312156112625761126161110b565b5b60006112708682870161115e565b93505060206112818682870161115e565b925050604061129286828701611194565b9150509250925092565b6000819050919050565b6112af8161129c565b82525050565b60006020820190506112ca60008301846112a6565b92915050565b600060ff82169050919050565b6112e6816112d0565b82525050565b600060208201905061130160008301846112dd565b92915050565b60006020828403121561131d5761131c61110b565b5b600061132b8482850161115e565b91505092915050565b600080fd5b600080fd5b600080fd5b60008083601f84011261135957611358611334565b5b8235905067ffffffffffffffff81111561137657611375611339565b5b6020830191508360208202830111156113925761139161133e565b5b9250929050565b6000806000604084860312156113b2576113b161110b565b5b60006113c08682870161115e565b935050602084013567ffffffffffffffff8111156113e1576113e0611110565b5b6113ed86828701611343565b92509250509250925092565b6114028161129c565b811461140d57600080fd5b50565b60008135905061141f816113f9565b92915050565b60006020828403121561143b5761143a61110b565b5b600061144984828501611410565b91505092915050565b61145b81611135565b82525050565b60006020820190506114766000830184611452565b92915050565b600080604083850312156114935761149261110b565b5b60006114a18582860161115e565b92505060206114b28582860161115e565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061150357607f821691505b602082108103611516576115156114bc565b5b50919050565b7f4e6f742057686974656c69737465640000000000000000000000000000000000600082015250565b6000611552600f83611064565b915061155d8261151c565b602082019050919050565b6000602082019050818103600083015261158181611545565b9050919050565b7f546f6b656e7320616c7265616479206d696e7465640000000000000000000000600082015250565b60006115be601583611064565b91506115c982611588565b602082019050919050565b600060208201905081810360008301526115ed816115b1565b9050919050565b60006060820190506116096000830186611452565b611616602083018561121f565b611623604083018461121f565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061166582611173565b915061167083611173565b92508282019050808211156116885761168761162b565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea2646970667358221220a63d53a36cf11ed8bd02b14cb766379d08b244092393c05e3d8a6dd2362066c864736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1DA4 CODESIZE SUB DUP1 PUSH3 0x1DA4 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x2CB JUMP JUMPDEST DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x416E74656B204D6E6D20546F6B656E0000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D4E4D0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0xB5 SWAP2 SWAP1 PUSH3 0x58C JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0xC7 SWAP2 SWAP1 PUSH3 0x58C JUMP JUMPDEST POP POP POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x13F JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x136 SWAP2 SWAP1 PUSH3 0x684 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x150 DUP2 PUSH3 0x160 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP POP POP PUSH3 0x6A1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x258 DUP3 PUSH3 0x22B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x26A DUP2 PUSH3 0x24B JUMP JUMPDEST DUP2 EQ PUSH3 0x276 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x28A DUP2 PUSH3 0x25F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2A5 DUP2 PUSH3 0x290 JUMP JUMPDEST DUP2 EQ PUSH3 0x2B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x2C5 DUP2 PUSH3 0x29A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x2E5 JUMPI PUSH3 0x2E4 PUSH3 0x226 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x2F5 DUP6 DUP3 DUP7 ADD PUSH3 0x279 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x308 DUP6 DUP3 DUP7 ADD PUSH3 0x2B4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x394 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x3AA JUMPI PUSH3 0x3A9 PUSH3 0x34C JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x414 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x3D5 JUMP JUMPDEST PUSH3 0x420 DUP7 DUP4 PUSH3 0x3D5 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x46D PUSH3 0x467 PUSH3 0x461 DUP5 PUSH3 0x438 JUMP JUMPDEST PUSH3 0x442 JUMP JUMPDEST PUSH3 0x438 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x489 DUP4 PUSH3 0x44C JUMP JUMPDEST PUSH3 0x4A1 PUSH3 0x498 DUP3 PUSH3 0x474 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x3E2 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x4B8 PUSH3 0x4A9 JUMP JUMPDEST PUSH3 0x4C5 DUP2 DUP5 DUP5 PUSH3 0x47E JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x4ED JUMPI PUSH3 0x4E1 PUSH1 0x0 DUP3 PUSH3 0x4AE JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x4CB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x53C JUMPI PUSH3 0x506 DUP2 PUSH3 0x3B0 JUMP JUMPDEST PUSH3 0x511 DUP5 PUSH3 0x3C5 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x521 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x539 PUSH3 0x530 DUP6 PUSH3 0x3C5 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x4CA JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x561 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x541 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x57C DUP4 DUP4 PUSH3 0x54E JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x597 DUP3 PUSH3 0x312 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x5B3 JUMPI PUSH3 0x5B2 PUSH3 0x31D JUMP JUMPDEST JUMPDEST PUSH3 0x5BF DUP3 SLOAD PUSH3 0x37B JUMP JUMPDEST PUSH3 0x5CC DUP3 DUP3 DUP6 PUSH3 0x4F1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x604 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x5EF JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x5FB DUP6 DUP3 PUSH3 0x56E JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x66B JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x614 DUP7 PUSH3 0x3B0 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x63E JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x617 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x65E JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x65A PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x54E JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH3 0x67E DUP2 PUSH3 0x24B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x69B PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x673 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16F3 DUP1 PUSH3 0x6B1 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x262 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x280 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2B0 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2E0 JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x202 JUMPI DUP1 PUSH4 0x7BF32270 EQ PUSH2 0x20C JUMPI DUP1 PUSH4 0x7CB64759 EQ PUSH2 0x228 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x244 JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0x2EB4A7AB EQ PUSH2 0x196 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1D2 JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x148 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x102 PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10F SWAP2 SWAP1 PUSH2 0x10E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x132 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12D SWAP2 SWAP1 PUSH2 0x11A9 JUMP JUMPDEST PUSH2 0x38E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13F SWAP2 SWAP1 PUSH2 0x1204 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x150 PUSH2 0x3B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15D SWAP2 SWAP1 PUSH2 0x122E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x180 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17B SWAP2 SWAP1 PUSH2 0x1249 JUMP JUMPDEST PUSH2 0x3BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x1204 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19E PUSH2 0x3EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0x12B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BC PUSH2 0x3F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0x12EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E7 SWAP2 SWAP1 PUSH2 0x1307 JUMP JUMPDEST PUSH2 0x3F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0x122E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20A PUSH2 0x441 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x226 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x221 SWAP2 SWAP1 PUSH2 0x1399 JUMP JUMPDEST PUSH2 0x455 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x242 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23D SWAP2 SWAP1 PUSH2 0x1425 JUMP JUMPDEST PUSH2 0x59B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x24C PUSH2 0x5AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x259 SWAP2 SWAP1 PUSH2 0x1461 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26A PUSH2 0x5D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x277 SWAP2 SWAP1 PUSH2 0x10E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x295 SWAP2 SWAP1 PUSH2 0x11A9 JUMP JUMPDEST PUSH2 0x669 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A7 SWAP2 SWAP1 PUSH2 0x1204 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C5 SWAP2 SWAP1 PUSH2 0x147C JUMP JUMPDEST PUSH2 0x68C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D7 SWAP2 SWAP1 PUSH2 0x122E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F5 SWAP2 SWAP1 PUSH2 0x1307 JUMP JUMPDEST PUSH2 0x713 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x30B SWAP1 PUSH2 0x14EB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x337 SWAP1 PUSH2 0x14EB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x384 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x359 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x384 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x367 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x399 PUSH2 0x799 JUMP JUMPDEST SWAP1 POP PUSH2 0x3A6 DUP2 DUP6 DUP6 PUSH2 0x7A1 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3C6 PUSH2 0x799 JUMP JUMPDEST SWAP1 POP PUSH2 0x3D3 DUP6 DUP3 DUP6 PUSH2 0x7B3 JUMP JUMPDEST PUSH2 0x3DE DUP6 DUP6 DUP6 PUSH2 0x847 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x449 PUSH2 0x93B JUMP JUMPDEST PUSH2 0x453 PUSH1 0x0 PUSH2 0x9C2 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x460 CALLER DUP4 DUP4 PUSH2 0xA88 JUMP JUMPDEST PUSH2 0x49F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x496 SWAP1 PUSH2 0x1568 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x52C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x523 SWAP1 PUSH2 0x15D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x596 DUP4 PUSH8 0x1BC16D674EC80000 PUSH2 0xB32 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x5A3 PUSH2 0x93B JUMP JUMPDEST DUP1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x5E6 SWAP1 PUSH2 0x14EB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x612 SWAP1 PUSH2 0x14EB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x65F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x634 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x65F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x642 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x674 PUSH2 0x799 JUMP JUMPDEST SWAP1 POP PUSH2 0x681 DUP2 DUP6 DUP6 PUSH2 0x847 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x71B PUSH2 0x93B JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x78D JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x784 SWAP2 SWAP1 PUSH2 0x1461 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x796 DUP2 PUSH2 0x9C2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7AE DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xBB4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7BF DUP5 DUP5 PUSH2 0x68C JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x841 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x831 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x828 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x15F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x840 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0xBB4 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8B9 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B0 SWAP2 SWAP1 PUSH2 0x1461 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x92B JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x922 SWAP2 SWAP1 PUSH2 0x1461 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x936 DUP4 DUP4 DUP4 PUSH2 0xD8B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x943 PUSH2 0x799 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x961 PUSH2 0x5AD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9C0 JUMPI PUSH2 0x984 PUSH2 0x799 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9B7 SWAP2 SWAP1 PUSH2 0x1461 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xA9C SWAP2 SWAP1 PUSH2 0x1461 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xAC2 SWAP2 SWAP1 PUSH2 0x12B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0xB28 DUP5 DUP5 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH1 0x6 SLOAD DUP4 PUSH2 0xFB0 JUMP JUMPDEST SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBA4 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB9B SWAP2 SWAP1 PUSH2 0x1461 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBB0 PUSH1 0x0 DUP4 DUP4 PUSH2 0xD8B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC26 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC1D SWAP2 SWAP1 PUSH2 0x1461 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC98 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC8F SWAP2 SWAP1 PUSH2 0x1461 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xD85 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xD7C SWAP2 SWAP1 PUSH2 0x122E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDDD JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xDD1 SWAP2 SWAP1 PUSH2 0x165A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xEB0 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xE69 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE60 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x15F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEF9 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xF46 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xFA3 SWAP2 SWAP1 PUSH2 0x122E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xFBD DUP6 DUP5 PUSH2 0xFC7 JUMP JUMPDEST EQ SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x100C JUMPI PUSH2 0xFFD DUP3 DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xFF0 JUMPI PUSH2 0xFEF PUSH2 0x168E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1017 JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xFD0 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x102F JUMPI PUSH2 0x102A DUP3 DUP5 PUSH2 0x1042 JUMP JUMPDEST PUSH2 0x103A JUMP JUMPDEST PUSH2 0x1039 DUP4 DUP4 PUSH2 0x1042 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1093 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1078 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10BB DUP3 PUSH2 0x1059 JUMP JUMPDEST PUSH2 0x10C5 DUP2 DUP6 PUSH2 0x1064 JUMP JUMPDEST SWAP4 POP PUSH2 0x10D5 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1075 JUMP JUMPDEST PUSH2 0x10DE DUP2 PUSH2 0x109F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1103 DUP2 DUP5 PUSH2 0x10B0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1140 DUP3 PUSH2 0x1115 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1150 DUP2 PUSH2 0x1135 JUMP JUMPDEST DUP2 EQ PUSH2 0x115B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x116D DUP2 PUSH2 0x1147 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1186 DUP2 PUSH2 0x1173 JUMP JUMPDEST DUP2 EQ PUSH2 0x1191 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11A3 DUP2 PUSH2 0x117D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11C0 JUMPI PUSH2 0x11BF PUSH2 0x110B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x11CE DUP6 DUP3 DUP7 ADD PUSH2 0x115E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x11DF DUP6 DUP3 DUP7 ADD PUSH2 0x1194 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11FE DUP2 PUSH2 0x11E9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1219 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x11F5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1228 DUP2 PUSH2 0x1173 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1243 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x121F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1262 JUMPI PUSH2 0x1261 PUSH2 0x110B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1270 DUP7 DUP3 DUP8 ADD PUSH2 0x115E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1281 DUP7 DUP3 DUP8 ADD PUSH2 0x115E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1292 DUP7 DUP3 DUP8 ADD PUSH2 0x1194 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12AF DUP2 PUSH2 0x129C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12CA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x12A6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12E6 DUP2 PUSH2 0x12D0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1301 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x12DD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x131D JUMPI PUSH2 0x131C PUSH2 0x110B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x132B DUP5 DUP3 DUP6 ADD PUSH2 0x115E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1359 JUMPI PUSH2 0x1358 PUSH2 0x1334 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1376 JUMPI PUSH2 0x1375 PUSH2 0x1339 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1392 JUMPI PUSH2 0x1391 PUSH2 0x133E JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x13B2 JUMPI PUSH2 0x13B1 PUSH2 0x110B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13C0 DUP7 DUP3 DUP8 ADD PUSH2 0x115E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x13E1 JUMPI PUSH2 0x13E0 PUSH2 0x1110 JUMP JUMPDEST JUMPDEST PUSH2 0x13ED DUP7 DUP3 DUP8 ADD PUSH2 0x1343 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x1402 DUP2 PUSH2 0x129C JUMP JUMPDEST DUP2 EQ PUSH2 0x140D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x141F DUP2 PUSH2 0x13F9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x143B JUMPI PUSH2 0x143A PUSH2 0x110B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1449 DUP5 DUP3 DUP6 ADD PUSH2 0x1410 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x145B DUP2 PUSH2 0x1135 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1476 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1452 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1493 JUMPI PUSH2 0x1492 PUSH2 0x110B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x14A1 DUP6 DUP3 DUP7 ADD PUSH2 0x115E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x14B2 DUP6 DUP3 DUP7 ADD PUSH2 0x115E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1503 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1516 JUMPI PUSH2 0x1515 PUSH2 0x14BC JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F742057686974656C69737465640000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1552 PUSH1 0xF DUP4 PUSH2 0x1064 JUMP JUMPDEST SWAP2 POP PUSH2 0x155D DUP3 PUSH2 0x151C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1581 DUP2 PUSH2 0x1545 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F6B656E7320616C7265616479206D696E7465640000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15BE PUSH1 0x15 DUP4 PUSH2 0x1064 JUMP JUMPDEST SWAP2 POP PUSH2 0x15C9 DUP3 PUSH2 0x1588 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x15ED DUP2 PUSH2 0x15B1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1609 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1452 JUMP JUMPDEST PUSH2 0x1616 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x121F JUMP JUMPDEST PUSH2 0x1623 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x121F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1665 DUP3 PUSH2 0x1173 JUMP JUMPDEST SWAP2 POP PUSH2 0x1670 DUP4 PUSH2 0x1173 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1688 JUMPI PUSH2 0x1687 PUSH2 0x162B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA6 RETURNDATASIZE MSTORE8 LOG3 PUSH13 0xF11ED8BD02B14CB766379D08B2 PREVRANDAO MULMOD 0x23 SWAP4 0xC0 MCOPY RETURNDATASIZE DUP11 PUSH14 0xD2362066C864736F6C6343000818 STOP CALLER ","sourceMap":"360:2101:7:-:0;;;805:172;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;917:13;1896:113:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1970:5;1962;:13;;;;;;:::i;:::-;;1995:7;1985;:17;;;;;;:::i;:::-;;1896:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;959:11:7::2;946:10;:24;;;;805:172:::0;;360:2101;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:8:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:77::-;882:7;911:5;900:16;;845:77;;;:::o;928:122::-;1001:24;1019:5;1001:24;:::i;:::-;994:5;991:35;981:63;;1040:1;1037;1030:12;981:63;928:122;:::o;1056:143::-;1113:5;1144:6;1138:13;1129:22;;1160:33;1187:5;1160:33;:::i;:::-;1056:143;;;;:::o;1205:507::-;1284:6;1292;1341:2;1329:9;1320:7;1316:23;1312:32;1309:119;;;1347:79;;:::i;:::-;1309:119;1467:1;1492:64;1548:7;1539:6;1528:9;1524:22;1492:64;:::i;:::-;1482:74;;1438:128;1605:2;1631:64;1687:7;1678:6;1667:9;1663:22;1631:64;:::i;:::-;1621:74;;1576:129;1205:507;;;;;:::o;1718:99::-;1770:6;1804:5;1798:12;1788:22;;1718:99;;;:::o;1823:180::-;1871:77;1868:1;1861:88;1968:4;1965:1;1958:15;1992:4;1989:1;1982:15;2009:180;2057:77;2054:1;2047:88;2154:4;2151:1;2144:15;2178:4;2175:1;2168:15;2195:320;2239:6;2276:1;2270:4;2266:12;2256:22;;2323:1;2317:4;2313:12;2344:18;2334:81;;2400:4;2392:6;2388:17;2378:27;;2334:81;2462:2;2454:6;2451:14;2431:18;2428:38;2425:84;;2481:18;;:::i;:::-;2425:84;2246:269;2195:320;;;:::o;2521:141::-;2570:4;2593:3;2585:11;;2616:3;2613:1;2606:14;2650:4;2647:1;2637:18;2629:26;;2521:141;;;:::o;2668:93::-;2705:6;2752:2;2747;2740:5;2736:14;2732:23;2722:33;;2668:93;;;:::o;2767:107::-;2811:8;2861:5;2855:4;2851:16;2830:37;;2767:107;;;;:::o;2880:393::-;2949:6;2999:1;2987:10;2983:18;3022:97;3052:66;3041:9;3022:97;:::i;:::-;3140:39;3170:8;3159:9;3140:39;:::i;:::-;3128:51;;3212:4;3208:9;3201:5;3197:21;3188:30;;3261:4;3251:8;3247:19;3240:5;3237:30;3227:40;;2956:317;;2880:393;;;;;:::o;3279:77::-;3316:7;3345:5;3334:16;;3279:77;;;:::o;3362:60::-;3390:3;3411:5;3404:12;;3362:60;;;:::o;3428:142::-;3478:9;3511:53;3529:34;3538:24;3556:5;3538:24;:::i;:::-;3529:34;:::i;:::-;3511:53;:::i;:::-;3498:66;;3428:142;;;:::o;3576:75::-;3619:3;3640:5;3633:12;;3576:75;;;:::o;3657:269::-;3767:39;3798:7;3767:39;:::i;:::-;3828:91;3877:41;3901:16;3877:41;:::i;:::-;3869:6;3862:4;3856:11;3828:91;:::i;:::-;3822:4;3815:105;3733:193;3657:269;;;:::o;3932:73::-;3977:3;3932:73;:::o;4011:189::-;4088:32;;:::i;:::-;4129:65;4187:6;4179;4173:4;4129:65;:::i;:::-;4064:136;4011:189;;:::o;4206:186::-;4266:120;4283:3;4276:5;4273:14;4266:120;;;4337:39;4374:1;4367:5;4337:39;:::i;:::-;4310:1;4303:5;4299:13;4290:22;;4266:120;;;4206:186;;:::o;4398:543::-;4499:2;4494:3;4491:11;4488:446;;;4533:38;4565:5;4533:38;:::i;:::-;4617:29;4635:10;4617:29;:::i;:::-;4607:8;4603:44;4800:2;4788:10;4785:18;4782:49;;;4821:8;4806:23;;4782:49;4844:80;4900:22;4918:3;4900:22;:::i;:::-;4890:8;4886:37;4873:11;4844:80;:::i;:::-;4503:431;;4488:446;4398:543;;;:::o;4947:117::-;5001:8;5051:5;5045:4;5041:16;5020:37;;4947:117;;;;:::o;5070:169::-;5114:6;5147:51;5195:1;5191:6;5183:5;5180:1;5176:13;5147:51;:::i;:::-;5143:56;5228:4;5222;5218:15;5208:25;;5121:118;5070:169;;;;:::o;5244:295::-;5320:4;5466:29;5491:3;5485:4;5466:29;:::i;:::-;5458:37;;5528:3;5525:1;5521:11;5515:4;5512:21;5504:29;;5244:295;;;;:::o;5544:1395::-;5661:37;5694:3;5661:37;:::i;:::-;5763:18;5755:6;5752:30;5749:56;;;5785:18;;:::i;:::-;5749:56;5829:38;5861:4;5855:11;5829:38;:::i;:::-;5914:67;5974:6;5966;5960:4;5914:67;:::i;:::-;6008:1;6032:4;6019:17;;6064:2;6056:6;6053:14;6081:1;6076:618;;;;6738:1;6755:6;6752:77;;;6804:9;6799:3;6795:19;6789:26;6780:35;;6752:77;6855:67;6915:6;6908:5;6855:67;:::i;:::-;6849:4;6842:81;6711:222;6046:887;;6076:618;6128:4;6124:9;6116:6;6112:22;6162:37;6194:4;6162:37;:::i;:::-;6221:1;6235:208;6249:7;6246:1;6243:14;6235:208;;;6328:9;6323:3;6319:19;6313:26;6305:6;6298:42;6379:1;6371:6;6367:14;6357:24;;6426:2;6415:9;6411:18;6398:31;;6272:4;6269:1;6265:12;6260:17;;6235:208;;;6471:6;6462:7;6459:19;6456:179;;;6529:9;6524:3;6520:19;6514:26;6572:48;6614:4;6606:6;6602:17;6591:9;6572:48;:::i;:::-;6564:6;6557:64;6479:156;6456:179;6681:1;6677;6669:6;6665:14;6661:22;6655:4;6648:36;6083:611;;;6046:887;;5636:1303;;;5544:1395;;:::o;6945:118::-;7032:24;7050:5;7032:24;:::i;:::-;7027:3;7020:37;6945:118;;:::o;7069:222::-;7162:4;7200:2;7189:9;7185:18;7177:26;;7213:71;7281:1;7270:9;7266:17;7257:6;7213:71;:::i;:::-;7069:222;;;;:::o;360:2101:7:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_approve_690":{"entryPoint":1953,"id":690,"parameterSlots":3,"returnSlots":0},"@_approve_750":{"entryPoint":2996,"id":750,"parameterSlots":4,"returnSlots":0},"@_checkOwner_84":{"entryPoint":2363,"id":84,"parameterSlots":0,"returnSlots":0},"@_efficientHash_1469":{"entryPoint":4162,"id":1469,"parameterSlots":2,"returnSlots":1},"@_hashPair_1457":{"entryPoint":4119,"id":1457,"parameterSlots":2,"returnSlots":1},"@_mint_639":{"entryPoint":2866,"id":639,"parameterSlots":2,"returnSlots":0},"@_msgSender_915":{"entryPoint":1945,"id":915,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_798":{"entryPoint":1971,"id":798,"parameterSlots":3,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":2498,"id":146,"parameterSlots":1,"returnSlots":0},"@_transfer_529":{"entryPoint":2119,"id":529,"parameterSlots":3,"returnSlots":0},"@_update_606":{"entryPoint":3467,"id":606,"parameterSlots":3,"returnSlots":0},"@allowance_426":{"entryPoint":1676,"id":426,"parameterSlots":2,"returnSlots":1},"@approve_450":{"entryPoint":910,"id":450,"parameterSlots":2,"returnSlots":1},"@balanceOf_385":{"entryPoint":1017,"id":385,"parameterSlots":1,"returnSlots":1},"@decimals_363":{"entryPoint":1008,"id":363,"parameterSlots":0,"returnSlots":1},"@isWhitelisted_1553":{"entryPoint":2696,"id":1553,"parameterSlots":3,"returnSlots":1},"@merkleRoot_1481":{"entryPoint":1002,"id":1481,"parameterSlots":0,"returnSlots":0},"@mint_1593":{"entryPoint":1109,"id":1593,"parameterSlots":3,"returnSlots":0},"@name_345":{"entryPoint":764,"id":345,"parameterSlots":0,"returnSlots":1},"@owner_67":{"entryPoint":1453,"id":67,"parameterSlots":0,"returnSlots":1},"@processProof_1021":{"entryPoint":4039,"id":1021,"parameterSlots":2,"returnSlots":1},"@renounceOwnership_98":{"entryPoint":1089,"id":98,"parameterSlots":0,"returnSlots":0},"@setMerkleRoot_1520":{"entryPoint":1435,"id":1520,"parameterSlots":1,"returnSlots":0},"@symbol_354":{"entryPoint":1495,"id":354,"parameterSlots":0,"returnSlots":1},"@totalSupply_372":{"entryPoint":945,"id":372,"parameterSlots":0,"returnSlots":1},"@transferFrom_482":{"entryPoint":955,"id":482,"parameterSlots":3,"returnSlots":1},"@transferOwnership_126":{"entryPoint":1811,"id":126,"parameterSlots":1,"returnSlots":0},"@transfer_409":{"entryPoint":1641,"id":409,"parameterSlots":2,"returnSlots":1},"@verify_960":{"entryPoint":4016,"id":960,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":4446,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_bytes32_$dyn_calldata_ptr":{"entryPoint":4931,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_bytes32":{"entryPoint":5136,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":4500,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":4871,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":5244,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":4681,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_array$_t_bytes32_$dyn_calldata_ptr":{"entryPoint":5017,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":4521,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32":{"entryPoint":5157,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":5202,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":4597,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":4774,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":4272,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_ac4ee45368755067e98bcabb5ab6f92b0a070c5f5367426552e5a625dd61b5e4_to_t_string_memory_ptr_fromStack":{"entryPoint":5553,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_ea2ff205e74795d23c54c2e44a18bbafce9858e9cd78e091fb1af6ef9ede78ff_to_t_string_memory_ptr_fromStack":{"entryPoint":5445,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":4639,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":4829,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":5217,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":5620,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":4612,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":4789,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4329,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ac4ee45368755067e98bcabb5ab6f92b0a070c5f5367426552e5a625dd61b5e4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5588,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ea2ff205e74795d23c54c2e44a18bbafce9858e9cd78e091fb1af6ef9ede78ff__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5480,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":4654,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":4844,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":4185,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":4196,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":5722,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":4405,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":4585,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":4764,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":4373,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":4467,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":4816,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":4213,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":5355,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":5675,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":5308,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":5774,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":4921,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":4916,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":4926,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":4368,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":4363,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":4255,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_ac4ee45368755067e98bcabb5ab6f92b0a070c5f5367426552e5a625dd61b5e4":{"entryPoint":5512,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_ea2ff205e74795d23c54c2e44a18bbafce9858e9cd78e091fb1af6ef9ede78ff":{"entryPoint":5404,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":4423,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":5113,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":4477,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:12201:8","nodeType":"YulBlock","src":"0:12201:8","statements":[{"body":{"nativeSrc":"66:40:8","nodeType":"YulBlock","src":"66:40:8","statements":[{"nativeSrc":"77:22:8","nodeType":"YulAssignment","src":"77:22:8","value":{"arguments":[{"name":"value","nativeSrc":"93:5:8","nodeType":"YulIdentifier","src":"93:5:8"}],"functionName":{"name":"mload","nativeSrc":"87:5:8","nodeType":"YulIdentifier","src":"87:5:8"},"nativeSrc":"87:12:8","nodeType":"YulFunctionCall","src":"87:12:8"},"variableNames":[{"name":"length","nativeSrc":"77:6:8","nodeType":"YulIdentifier","src":"77:6:8"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"7:99:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"49:5:8","nodeType":"YulTypedName","src":"49:5:8","type":""}],"returnVariables":[{"name":"length","nativeSrc":"59:6:8","nodeType":"YulTypedName","src":"59:6:8","type":""}],"src":"7:99:8"},{"body":{"nativeSrc":"208:73:8","nodeType":"YulBlock","src":"208:73:8","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"225:3:8","nodeType":"YulIdentifier","src":"225:3:8"},{"name":"length","nativeSrc":"230:6:8","nodeType":"YulIdentifier","src":"230:6:8"}],"functionName":{"name":"mstore","nativeSrc":"218:6:8","nodeType":"YulIdentifier","src":"218:6:8"},"nativeSrc":"218:19:8","nodeType":"YulFunctionCall","src":"218:19:8"},"nativeSrc":"218:19:8","nodeType":"YulExpressionStatement","src":"218:19:8"},{"nativeSrc":"246:29:8","nodeType":"YulAssignment","src":"246:29:8","value":{"arguments":[{"name":"pos","nativeSrc":"265:3:8","nodeType":"YulIdentifier","src":"265:3:8"},{"kind":"number","nativeSrc":"270:4:8","nodeType":"YulLiteral","src":"270:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"261:3:8","nodeType":"YulIdentifier","src":"261:3:8"},"nativeSrc":"261:14:8","nodeType":"YulFunctionCall","src":"261:14:8"},"variableNames":[{"name":"updated_pos","nativeSrc":"246:11:8","nodeType":"YulIdentifier","src":"246:11:8"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"112:169:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"180:3:8","nodeType":"YulTypedName","src":"180:3:8","type":""},{"name":"length","nativeSrc":"185:6:8","nodeType":"YulTypedName","src":"185:6:8","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"196:11:8","nodeType":"YulTypedName","src":"196:11:8","type":""}],"src":"112:169:8"},{"body":{"nativeSrc":"349:184:8","nodeType":"YulBlock","src":"349:184:8","statements":[{"nativeSrc":"359:10:8","nodeType":"YulVariableDeclaration","src":"359:10:8","value":{"kind":"number","nativeSrc":"368:1:8","nodeType":"YulLiteral","src":"368:1:8","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"363:1:8","nodeType":"YulTypedName","src":"363:1:8","type":""}]},{"body":{"nativeSrc":"428:63:8","nodeType":"YulBlock","src":"428:63:8","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"453:3:8","nodeType":"YulIdentifier","src":"453:3:8"},{"name":"i","nativeSrc":"458:1:8","nodeType":"YulIdentifier","src":"458:1:8"}],"functionName":{"name":"add","nativeSrc":"449:3:8","nodeType":"YulIdentifier","src":"449:3:8"},"nativeSrc":"449:11:8","nodeType":"YulFunctionCall","src":"449:11:8"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"472:3:8","nodeType":"YulIdentifier","src":"472:3:8"},{"name":"i","nativeSrc":"477:1:8","nodeType":"YulIdentifier","src":"477:1:8"}],"functionName":{"name":"add","nativeSrc":"468:3:8","nodeType":"YulIdentifier","src":"468:3:8"},"nativeSrc":"468:11:8","nodeType":"YulFunctionCall","src":"468:11:8"}],"functionName":{"name":"mload","nativeSrc":"462:5:8","nodeType":"YulIdentifier","src":"462:5:8"},"nativeSrc":"462:18:8","nodeType":"YulFunctionCall","src":"462:18:8"}],"functionName":{"name":"mstore","nativeSrc":"442:6:8","nodeType":"YulIdentifier","src":"442:6:8"},"nativeSrc":"442:39:8","nodeType":"YulFunctionCall","src":"442:39:8"},"nativeSrc":"442:39:8","nodeType":"YulExpressionStatement","src":"442:39:8"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"389:1:8","nodeType":"YulIdentifier","src":"389:1:8"},{"name":"length","nativeSrc":"392:6:8","nodeType":"YulIdentifier","src":"392:6:8"}],"functionName":{"name":"lt","nativeSrc":"386:2:8","nodeType":"YulIdentifier","src":"386:2:8"},"nativeSrc":"386:13:8","nodeType":"YulFunctionCall","src":"386:13:8"},"nativeSrc":"378:113:8","nodeType":"YulForLoop","post":{"nativeSrc":"400:19:8","nodeType":"YulBlock","src":"400:19:8","statements":[{"nativeSrc":"402:15:8","nodeType":"YulAssignment","src":"402:15:8","value":{"arguments":[{"name":"i","nativeSrc":"411:1:8","nodeType":"YulIdentifier","src":"411:1:8"},{"kind":"number","nativeSrc":"414:2:8","nodeType":"YulLiteral","src":"414:2:8","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"407:3:8","nodeType":"YulIdentifier","src":"407:3:8"},"nativeSrc":"407:10:8","nodeType":"YulFunctionCall","src":"407:10:8"},"variableNames":[{"name":"i","nativeSrc":"402:1:8","nodeType":"YulIdentifier","src":"402:1:8"}]}]},"pre":{"nativeSrc":"382:3:8","nodeType":"YulBlock","src":"382:3:8","statements":[]},"src":"378:113:8"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"511:3:8","nodeType":"YulIdentifier","src":"511:3:8"},{"name":"length","nativeSrc":"516:6:8","nodeType":"YulIdentifier","src":"516:6:8"}],"functionName":{"name":"add","nativeSrc":"507:3:8","nodeType":"YulIdentifier","src":"507:3:8"},"nativeSrc":"507:16:8","nodeType":"YulFunctionCall","src":"507:16:8"},{"kind":"number","nativeSrc":"525:1:8","nodeType":"YulLiteral","src":"525:1:8","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"500:6:8","nodeType":"YulIdentifier","src":"500:6:8"},"nativeSrc":"500:27:8","nodeType":"YulFunctionCall","src":"500:27:8"},"nativeSrc":"500:27:8","nodeType":"YulExpressionStatement","src":"500:27:8"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"287:246:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"331:3:8","nodeType":"YulTypedName","src":"331:3:8","type":""},{"name":"dst","nativeSrc":"336:3:8","nodeType":"YulTypedName","src":"336:3:8","type":""},{"name":"length","nativeSrc":"341:6:8","nodeType":"YulTypedName","src":"341:6:8","type":""}],"src":"287:246:8"},{"body":{"nativeSrc":"587:54:8","nodeType":"YulBlock","src":"587:54:8","statements":[{"nativeSrc":"597:38:8","nodeType":"YulAssignment","src":"597:38:8","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"615:5:8","nodeType":"YulIdentifier","src":"615:5:8"},{"kind":"number","nativeSrc":"622:2:8","nodeType":"YulLiteral","src":"622:2:8","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"611:3:8","nodeType":"YulIdentifier","src":"611:3:8"},"nativeSrc":"611:14:8","nodeType":"YulFunctionCall","src":"611:14:8"},{"arguments":[{"kind":"number","nativeSrc":"631:2:8","nodeType":"YulLiteral","src":"631:2:8","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"627:3:8","nodeType":"YulIdentifier","src":"627:3:8"},"nativeSrc":"627:7:8","nodeType":"YulFunctionCall","src":"627:7:8"}],"functionName":{"name":"and","nativeSrc":"607:3:8","nodeType":"YulIdentifier","src":"607:3:8"},"nativeSrc":"607:28:8","nodeType":"YulFunctionCall","src":"607:28:8"},"variableNames":[{"name":"result","nativeSrc":"597:6:8","nodeType":"YulIdentifier","src":"597:6:8"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"539:102:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"570:5:8","nodeType":"YulTypedName","src":"570:5:8","type":""}],"returnVariables":[{"name":"result","nativeSrc":"580:6:8","nodeType":"YulTypedName","src":"580:6:8","type":""}],"src":"539:102:8"},{"body":{"nativeSrc":"739:285:8","nodeType":"YulBlock","src":"739:285:8","statements":[{"nativeSrc":"749:53:8","nodeType":"YulVariableDeclaration","src":"749:53:8","value":{"arguments":[{"name":"value","nativeSrc":"796:5:8","nodeType":"YulIdentifier","src":"796:5:8"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"763:32:8","nodeType":"YulIdentifier","src":"763:32:8"},"nativeSrc":"763:39:8","nodeType":"YulFunctionCall","src":"763:39:8"},"variables":[{"name":"length","nativeSrc":"753:6:8","nodeType":"YulTypedName","src":"753:6:8","type":""}]},{"nativeSrc":"811:78:8","nodeType":"YulAssignment","src":"811:78:8","value":{"arguments":[{"name":"pos","nativeSrc":"877:3:8","nodeType":"YulIdentifier","src":"877:3:8"},{"name":"length","nativeSrc":"882:6:8","nodeType":"YulIdentifier","src":"882:6:8"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"818:58:8","nodeType":"YulIdentifier","src":"818:58:8"},"nativeSrc":"818:71:8","nodeType":"YulFunctionCall","src":"818:71:8"},"variableNames":[{"name":"pos","nativeSrc":"811:3:8","nodeType":"YulIdentifier","src":"811:3:8"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"937:5:8","nodeType":"YulIdentifier","src":"937:5:8"},{"kind":"number","nativeSrc":"944:4:8","nodeType":"YulLiteral","src":"944:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"933:3:8","nodeType":"YulIdentifier","src":"933:3:8"},"nativeSrc":"933:16:8","nodeType":"YulFunctionCall","src":"933:16:8"},{"name":"pos","nativeSrc":"951:3:8","nodeType":"YulIdentifier","src":"951:3:8"},{"name":"length","nativeSrc":"956:6:8","nodeType":"YulIdentifier","src":"956:6:8"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"898:34:8","nodeType":"YulIdentifier","src":"898:34:8"},"nativeSrc":"898:65:8","nodeType":"YulFunctionCall","src":"898:65:8"},"nativeSrc":"898:65:8","nodeType":"YulExpressionStatement","src":"898:65:8"},{"nativeSrc":"972:46:8","nodeType":"YulAssignment","src":"972:46:8","value":{"arguments":[{"name":"pos","nativeSrc":"983:3:8","nodeType":"YulIdentifier","src":"983:3:8"},{"arguments":[{"name":"length","nativeSrc":"1010:6:8","nodeType":"YulIdentifier","src":"1010:6:8"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"988:21:8","nodeType":"YulIdentifier","src":"988:21:8"},"nativeSrc":"988:29:8","nodeType":"YulFunctionCall","src":"988:29:8"}],"functionName":{"name":"add","nativeSrc":"979:3:8","nodeType":"YulIdentifier","src":"979:3:8"},"nativeSrc":"979:39:8","nodeType":"YulFunctionCall","src":"979:39:8"},"variableNames":[{"name":"end","nativeSrc":"972:3:8","nodeType":"YulIdentifier","src":"972:3:8"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"647:377:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"720:5:8","nodeType":"YulTypedName","src":"720:5:8","type":""},{"name":"pos","nativeSrc":"727:3:8","nodeType":"YulTypedName","src":"727:3:8","type":""}],"returnVariables":[{"name":"end","nativeSrc":"735:3:8","nodeType":"YulTypedName","src":"735:3:8","type":""}],"src":"647:377:8"},{"body":{"nativeSrc":"1148:195:8","nodeType":"YulBlock","src":"1148:195:8","statements":[{"nativeSrc":"1158:26:8","nodeType":"YulAssignment","src":"1158:26:8","value":{"arguments":[{"name":"headStart","nativeSrc":"1170:9:8","nodeType":"YulIdentifier","src":"1170:9:8"},{"kind":"number","nativeSrc":"1181:2:8","nodeType":"YulLiteral","src":"1181:2:8","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1166:3:8","nodeType":"YulIdentifier","src":"1166:3:8"},"nativeSrc":"1166:18:8","nodeType":"YulFunctionCall","src":"1166:18:8"},"variableNames":[{"name":"tail","nativeSrc":"1158:4:8","nodeType":"YulIdentifier","src":"1158:4:8"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1205:9:8","nodeType":"YulIdentifier","src":"1205:9:8"},{"kind":"number","nativeSrc":"1216:1:8","nodeType":"YulLiteral","src":"1216:1:8","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"1201:3:8","nodeType":"YulIdentifier","src":"1201:3:8"},"nativeSrc":"1201:17:8","nodeType":"YulFunctionCall","src":"1201:17:8"},{"arguments":[{"name":"tail","nativeSrc":"1224:4:8","nodeType":"YulIdentifier","src":"1224:4:8"},{"name":"headStart","nativeSrc":"1230:9:8","nodeType":"YulIdentifier","src":"1230:9:8"}],"functionName":{"name":"sub","nativeSrc":"1220:3:8","nodeType":"YulIdentifier","src":"1220:3:8"},"nativeSrc":"1220:20:8","nodeType":"YulFunctionCall","src":"1220:20:8"}],"functionName":{"name":"mstore","nativeSrc":"1194:6:8","nodeType":"YulIdentifier","src":"1194:6:8"},"nativeSrc":"1194:47:8","nodeType":"YulFunctionCall","src":"1194:47:8"},"nativeSrc":"1194:47:8","nodeType":"YulExpressionStatement","src":"1194:47:8"},{"nativeSrc":"1250:86:8","nodeType":"YulAssignment","src":"1250:86:8","value":{"arguments":[{"name":"value0","nativeSrc":"1322:6:8","nodeType":"YulIdentifier","src":"1322:6:8"},{"name":"tail","nativeSrc":"1331:4:8","nodeType":"YulIdentifier","src":"1331:4:8"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"1258:63:8","nodeType":"YulIdentifier","src":"1258:63:8"},"nativeSrc":"1258:78:8","nodeType":"YulFunctionCall","src":"1258:78:8"},"variableNames":[{"name":"tail","nativeSrc":"1250:4:8","nodeType":"YulIdentifier","src":"1250:4:8"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"1030:313:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1120:9:8","nodeType":"YulTypedName","src":"1120:9:8","type":""},{"name":"value0","nativeSrc":"1132:6:8","nodeType":"YulTypedName","src":"1132:6:8","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1143:4:8","nodeType":"YulTypedName","src":"1143:4:8","type":""}],"src":"1030:313:8"},{"body":{"nativeSrc":"1389:35:8","nodeType":"YulBlock","src":"1389:35:8","statements":[{"nativeSrc":"1399:19:8","nodeType":"YulAssignment","src":"1399:19:8","value":{"arguments":[{"kind":"number","nativeSrc":"1415:2:8","nodeType":"YulLiteral","src":"1415:2:8","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"1409:5:8","nodeType":"YulIdentifier","src":"1409:5:8"},"nativeSrc":"1409:9:8","nodeType":"YulFunctionCall","src":"1409:9:8"},"variableNames":[{"name":"memPtr","nativeSrc":"1399:6:8","nodeType":"YulIdentifier","src":"1399:6:8"}]}]},"name":"allocate_unbounded","nativeSrc":"1349:75:8","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"1382:6:8","nodeType":"YulTypedName","src":"1382:6:8","type":""}],"src":"1349:75:8"},{"body":{"nativeSrc":"1519:28:8","nodeType":"YulBlock","src":"1519:28:8","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1536:1:8","nodeType":"YulLiteral","src":"1536:1:8","type":"","value":"0"},{"kind":"number","nativeSrc":"1539:1:8","nodeType":"YulLiteral","src":"1539:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1529:6:8","nodeType":"YulIdentifier","src":"1529:6:8"},"nativeSrc":"1529:12:8","nodeType":"YulFunctionCall","src":"1529:12:8"},"nativeSrc":"1529:12:8","nodeType":"YulExpressionStatement","src":"1529:12:8"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"1430:117:8","nodeType":"YulFunctionDefinition","src":"1430:117:8"},{"body":{"nativeSrc":"1642:28:8","nodeType":"YulBlock","src":"1642:28:8","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1659:1:8","nodeType":"YulLiteral","src":"1659:1:8","type":"","value":"0"},{"kind":"number","nativeSrc":"1662:1:8","nodeType":"YulLiteral","src":"1662:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1652:6:8","nodeType":"YulIdentifier","src":"1652:6:8"},"nativeSrc":"1652:12:8","nodeType":"YulFunctionCall","src":"1652:12:8"},"nativeSrc":"1652:12:8","nodeType":"YulExpressionStatement","src":"1652:12:8"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"1553:117:8","nodeType":"YulFunctionDefinition","src":"1553:117:8"},{"body":{"nativeSrc":"1721:81:8","nodeType":"YulBlock","src":"1721:81:8","statements":[{"nativeSrc":"1731:65:8","nodeType":"YulAssignment","src":"1731:65:8","value":{"arguments":[{"name":"value","nativeSrc":"1746:5:8","nodeType":"YulIdentifier","src":"1746:5:8"},{"kind":"number","nativeSrc":"1753:42:8","nodeType":"YulLiteral","src":"1753:42:8","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"1742:3:8","nodeType":"YulIdentifier","src":"1742:3:8"},"nativeSrc":"1742:54:8","nodeType":"YulFunctionCall","src":"1742:54:8"},"variableNames":[{"name":"cleaned","nativeSrc":"1731:7:8","nodeType":"YulIdentifier","src":"1731:7:8"}]}]},"name":"cleanup_t_uint160","nativeSrc":"1676:126:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1703:5:8","nodeType":"YulTypedName","src":"1703:5:8","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1713:7:8","nodeType":"YulTypedName","src":"1713:7:8","type":""}],"src":"1676:126:8"},{"body":{"nativeSrc":"1853:51:8","nodeType":"YulBlock","src":"1853:51:8","statements":[{"nativeSrc":"1863:35:8","nodeType":"YulAssignment","src":"1863:35:8","value":{"arguments":[{"name":"value","nativeSrc":"1892:5:8","nodeType":"YulIdentifier","src":"1892:5:8"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"1874:17:8","nodeType":"YulIdentifier","src":"1874:17:8"},"nativeSrc":"1874:24:8","nodeType":"YulFunctionCall","src":"1874:24:8"},"variableNames":[{"name":"cleaned","nativeSrc":"1863:7:8","nodeType":"YulIdentifier","src":"1863:7:8"}]}]},"name":"cleanup_t_address","nativeSrc":"1808:96:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1835:5:8","nodeType":"YulTypedName","src":"1835:5:8","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1845:7:8","nodeType":"YulTypedName","src":"1845:7:8","type":""}],"src":"1808:96:8"},{"body":{"nativeSrc":"1953:79:8","nodeType":"YulBlock","src":"1953:79:8","statements":[{"body":{"nativeSrc":"2010:16:8","nodeType":"YulBlock","src":"2010:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2019:1:8","nodeType":"YulLiteral","src":"2019:1:8","type":"","value":"0"},{"kind":"number","nativeSrc":"2022:1:8","nodeType":"YulLiteral","src":"2022:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2012:6:8","nodeType":"YulIdentifier","src":"2012:6:8"},"nativeSrc":"2012:12:8","nodeType":"YulFunctionCall","src":"2012:12:8"},"nativeSrc":"2012:12:8","nodeType":"YulExpressionStatement","src":"2012:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1976:5:8","nodeType":"YulIdentifier","src":"1976:5:8"},{"arguments":[{"name":"value","nativeSrc":"2001:5:8","nodeType":"YulIdentifier","src":"2001:5:8"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"1983:17:8","nodeType":"YulIdentifier","src":"1983:17:8"},"nativeSrc":"1983:24:8","nodeType":"YulFunctionCall","src":"1983:24:8"}],"functionName":{"name":"eq","nativeSrc":"1973:2:8","nodeType":"YulIdentifier","src":"1973:2:8"},"nativeSrc":"1973:35:8","nodeType":"YulFunctionCall","src":"1973:35:8"}],"functionName":{"name":"iszero","nativeSrc":"1966:6:8","nodeType":"YulIdentifier","src":"1966:6:8"},"nativeSrc":"1966:43:8","nodeType":"YulFunctionCall","src":"1966:43:8"},"nativeSrc":"1963:63:8","nodeType":"YulIf","src":"1963:63:8"}]},"name":"validator_revert_t_address","nativeSrc":"1910:122:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1946:5:8","nodeType":"YulTypedName","src":"1946:5:8","type":""}],"src":"1910:122:8"},{"body":{"nativeSrc":"2090:87:8","nodeType":"YulBlock","src":"2090:87:8","statements":[{"nativeSrc":"2100:29:8","nodeType":"YulAssignment","src":"2100:29:8","value":{"arguments":[{"name":"offset","nativeSrc":"2122:6:8","nodeType":"YulIdentifier","src":"2122:6:8"}],"functionName":{"name":"calldataload","nativeSrc":"2109:12:8","nodeType":"YulIdentifier","src":"2109:12:8"},"nativeSrc":"2109:20:8","nodeType":"YulFunctionCall","src":"2109:20:8"},"variableNames":[{"name":"value","nativeSrc":"2100:5:8","nodeType":"YulIdentifier","src":"2100:5:8"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"2165:5:8","nodeType":"YulIdentifier","src":"2165:5:8"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"2138:26:8","nodeType":"YulIdentifier","src":"2138:26:8"},"nativeSrc":"2138:33:8","nodeType":"YulFunctionCall","src":"2138:33:8"},"nativeSrc":"2138:33:8","nodeType":"YulExpressionStatement","src":"2138:33:8"}]},"name":"abi_decode_t_address","nativeSrc":"2038:139:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2068:6:8","nodeType":"YulTypedName","src":"2068:6:8","type":""},{"name":"end","nativeSrc":"2076:3:8","nodeType":"YulTypedName","src":"2076:3:8","type":""}],"returnVariables":[{"name":"value","nativeSrc":"2084:5:8","nodeType":"YulTypedName","src":"2084:5:8","type":""}],"src":"2038:139:8"},{"body":{"nativeSrc":"2228:32:8","nodeType":"YulBlock","src":"2228:32:8","statements":[{"nativeSrc":"2238:16:8","nodeType":"YulAssignment","src":"2238:16:8","value":{"name":"value","nativeSrc":"2249:5:8","nodeType":"YulIdentifier","src":"2249:5:8"},"variableNames":[{"name":"cleaned","nativeSrc":"2238:7:8","nodeType":"YulIdentifier","src":"2238:7:8"}]}]},"name":"cleanup_t_uint256","nativeSrc":"2183:77:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2210:5:8","nodeType":"YulTypedName","src":"2210:5:8","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"2220:7:8","nodeType":"YulTypedName","src":"2220:7:8","type":""}],"src":"2183:77:8"},{"body":{"nativeSrc":"2309:79:8","nodeType":"YulBlock","src":"2309:79:8","statements":[{"body":{"nativeSrc":"2366:16:8","nodeType":"YulBlock","src":"2366:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2375:1:8","nodeType":"YulLiteral","src":"2375:1:8","type":"","value":"0"},{"kind":"number","nativeSrc":"2378:1:8","nodeType":"YulLiteral","src":"2378:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2368:6:8","nodeType":"YulIdentifier","src":"2368:6:8"},"nativeSrc":"2368:12:8","nodeType":"YulFunctionCall","src":"2368:12:8"},"nativeSrc":"2368:12:8","nodeType":"YulExpressionStatement","src":"2368:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2332:5:8","nodeType":"YulIdentifier","src":"2332:5:8"},{"arguments":[{"name":"value","nativeSrc":"2357:5:8","nodeType":"YulIdentifier","src":"2357:5:8"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"2339:17:8","nodeType":"YulIdentifier","src":"2339:17:8"},"nativeSrc":"2339:24:8","nodeType":"YulFunctionCall","src":"2339:24:8"}],"functionName":{"name":"eq","nativeSrc":"2329:2:8","nodeType":"YulIdentifier","src":"2329:2:8"},"nativeSrc":"2329:35:8","nodeType":"YulFunctionCall","src":"2329:35:8"}],"functionName":{"name":"iszero","nativeSrc":"2322:6:8","nodeType":"YulIdentifier","src":"2322:6:8"},"nativeSrc":"2322:43:8","nodeType":"YulFunctionCall","src":"2322:43:8"},"nativeSrc":"2319:63:8","nodeType":"YulIf","src":"2319:63:8"}]},"name":"validator_revert_t_uint256","nativeSrc":"2266:122:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2302:5:8","nodeType":"YulTypedName","src":"2302:5:8","type":""}],"src":"2266:122:8"},{"body":{"nativeSrc":"2446:87:8","nodeType":"YulBlock","src":"2446:87:8","statements":[{"nativeSrc":"2456:29:8","nodeType":"YulAssignment","src":"2456:29:8","value":{"arguments":[{"name":"offset","nativeSrc":"2478:6:8","nodeType":"YulIdentifier","src":"2478:6:8"}],"functionName":{"name":"calldataload","nativeSrc":"2465:12:8","nodeType":"YulIdentifier","src":"2465:12:8"},"nativeSrc":"2465:20:8","nodeType":"YulFunctionCall","src":"2465:20:8"},"variableNames":[{"name":"value","nativeSrc":"2456:5:8","nodeType":"YulIdentifier","src":"2456:5:8"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"2521:5:8","nodeType":"YulIdentifier","src":"2521:5:8"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"2494:26:8","nodeType":"YulIdentifier","src":"2494:26:8"},"nativeSrc":"2494:33:8","nodeType":"YulFunctionCall","src":"2494:33:8"},"nativeSrc":"2494:33:8","nodeType":"YulExpressionStatement","src":"2494:33:8"}]},"name":"abi_decode_t_uint256","nativeSrc":"2394:139:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2424:6:8","nodeType":"YulTypedName","src":"2424:6:8","type":""},{"name":"end","nativeSrc":"2432:3:8","nodeType":"YulTypedName","src":"2432:3:8","type":""}],"returnVariables":[{"name":"value","nativeSrc":"2440:5:8","nodeType":"YulTypedName","src":"2440:5:8","type":""}],"src":"2394:139:8"},{"body":{"nativeSrc":"2622:391:8","nodeType":"YulBlock","src":"2622:391:8","statements":[{"body":{"nativeSrc":"2668:83:8","nodeType":"YulBlock","src":"2668:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"2670:77:8","nodeType":"YulIdentifier","src":"2670:77:8"},"nativeSrc":"2670:79:8","nodeType":"YulFunctionCall","src":"2670:79:8"},"nativeSrc":"2670:79:8","nodeType":"YulExpressionStatement","src":"2670:79:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2643:7:8","nodeType":"YulIdentifier","src":"2643:7:8"},{"name":"headStart","nativeSrc":"2652:9:8","nodeType":"YulIdentifier","src":"2652:9:8"}],"functionName":{"name":"sub","nativeSrc":"2639:3:8","nodeType":"YulIdentifier","src":"2639:3:8"},"nativeSrc":"2639:23:8","nodeType":"YulFunctionCall","src":"2639:23:8"},{"kind":"number","nativeSrc":"2664:2:8","nodeType":"YulLiteral","src":"2664:2:8","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"2635:3:8","nodeType":"YulIdentifier","src":"2635:3:8"},"nativeSrc":"2635:32:8","nodeType":"YulFunctionCall","src":"2635:32:8"},"nativeSrc":"2632:119:8","nodeType":"YulIf","src":"2632:119:8"},{"nativeSrc":"2761:117:8","nodeType":"YulBlock","src":"2761:117:8","statements":[{"nativeSrc":"2776:15:8","nodeType":"YulVariableDeclaration","src":"2776:15:8","value":{"kind":"number","nativeSrc":"2790:1:8","nodeType":"YulLiteral","src":"2790:1:8","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"2780:6:8","nodeType":"YulTypedName","src":"2780:6:8","type":""}]},{"nativeSrc":"2805:63:8","nodeType":"YulAssignment","src":"2805:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2840:9:8","nodeType":"YulIdentifier","src":"2840:9:8"},{"name":"offset","nativeSrc":"2851:6:8","nodeType":"YulIdentifier","src":"2851:6:8"}],"functionName":{"name":"add","nativeSrc":"2836:3:8","nodeType":"YulIdentifier","src":"2836:3:8"},"nativeSrc":"2836:22:8","nodeType":"YulFunctionCall","src":"2836:22:8"},{"name":"dataEnd","nativeSrc":"2860:7:8","nodeType":"YulIdentifier","src":"2860:7:8"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"2815:20:8","nodeType":"YulIdentifier","src":"2815:20:8"},"nativeSrc":"2815:53:8","nodeType":"YulFunctionCall","src":"2815:53:8"},"variableNames":[{"name":"value0","nativeSrc":"2805:6:8","nodeType":"YulIdentifier","src":"2805:6:8"}]}]},{"nativeSrc":"2888:118:8","nodeType":"YulBlock","src":"2888:118:8","statements":[{"nativeSrc":"2903:16:8","nodeType":"YulVariableDeclaration","src":"2903:16:8","value":{"kind":"number","nativeSrc":"2917:2:8","nodeType":"YulLiteral","src":"2917:2:8","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"2907:6:8","nodeType":"YulTypedName","src":"2907:6:8","type":""}]},{"nativeSrc":"2933:63:8","nodeType":"YulAssignment","src":"2933:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2968:9:8","nodeType":"YulIdentifier","src":"2968:9:8"},{"name":"offset","nativeSrc":"2979:6:8","nodeType":"YulIdentifier","src":"2979:6:8"}],"functionName":{"name":"add","nativeSrc":"2964:3:8","nodeType":"YulIdentifier","src":"2964:3:8"},"nativeSrc":"2964:22:8","nodeType":"YulFunctionCall","src":"2964:22:8"},{"name":"dataEnd","nativeSrc":"2988:7:8","nodeType":"YulIdentifier","src":"2988:7:8"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"2943:20:8","nodeType":"YulIdentifier","src":"2943:20:8"},"nativeSrc":"2943:53:8","nodeType":"YulFunctionCall","src":"2943:53:8"},"variableNames":[{"name":"value1","nativeSrc":"2933:6:8","nodeType":"YulIdentifier","src":"2933:6:8"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"2539:474:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2584:9:8","nodeType":"YulTypedName","src":"2584:9:8","type":""},{"name":"dataEnd","nativeSrc":"2595:7:8","nodeType":"YulTypedName","src":"2595:7:8","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2607:6:8","nodeType":"YulTypedName","src":"2607:6:8","type":""},{"name":"value1","nativeSrc":"2615:6:8","nodeType":"YulTypedName","src":"2615:6:8","type":""}],"src":"2539:474:8"},{"body":{"nativeSrc":"3061:48:8","nodeType":"YulBlock","src":"3061:48:8","statements":[{"nativeSrc":"3071:32:8","nodeType":"YulAssignment","src":"3071:32:8","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3096:5:8","nodeType":"YulIdentifier","src":"3096:5:8"}],"functionName":{"name":"iszero","nativeSrc":"3089:6:8","nodeType":"YulIdentifier","src":"3089:6:8"},"nativeSrc":"3089:13:8","nodeType":"YulFunctionCall","src":"3089:13:8"}],"functionName":{"name":"iszero","nativeSrc":"3082:6:8","nodeType":"YulIdentifier","src":"3082:6:8"},"nativeSrc":"3082:21:8","nodeType":"YulFunctionCall","src":"3082:21:8"},"variableNames":[{"name":"cleaned","nativeSrc":"3071:7:8","nodeType":"YulIdentifier","src":"3071:7:8"}]}]},"name":"cleanup_t_bool","nativeSrc":"3019:90:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3043:5:8","nodeType":"YulTypedName","src":"3043:5:8","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"3053:7:8","nodeType":"YulTypedName","src":"3053:7:8","type":""}],"src":"3019:90:8"},{"body":{"nativeSrc":"3174:50:8","nodeType":"YulBlock","src":"3174:50:8","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3191:3:8","nodeType":"YulIdentifier","src":"3191:3:8"},{"arguments":[{"name":"value","nativeSrc":"3211:5:8","nodeType":"YulIdentifier","src":"3211:5:8"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"3196:14:8","nodeType":"YulIdentifier","src":"3196:14:8"},"nativeSrc":"3196:21:8","nodeType":"YulFunctionCall","src":"3196:21:8"}],"functionName":{"name":"mstore","nativeSrc":"3184:6:8","nodeType":"YulIdentifier","src":"3184:6:8"},"nativeSrc":"3184:34:8","nodeType":"YulFunctionCall","src":"3184:34:8"},"nativeSrc":"3184:34:8","nodeType":"YulExpressionStatement","src":"3184:34:8"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"3115:109:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3162:5:8","nodeType":"YulTypedName","src":"3162:5:8","type":""},{"name":"pos","nativeSrc":"3169:3:8","nodeType":"YulTypedName","src":"3169:3:8","type":""}],"src":"3115:109:8"},{"body":{"nativeSrc":"3322:118:8","nodeType":"YulBlock","src":"3322:118:8","statements":[{"nativeSrc":"3332:26:8","nodeType":"YulAssignment","src":"3332:26:8","value":{"arguments":[{"name":"headStart","nativeSrc":"3344:9:8","nodeType":"YulIdentifier","src":"3344:9:8"},{"kind":"number","nativeSrc":"3355:2:8","nodeType":"YulLiteral","src":"3355:2:8","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3340:3:8","nodeType":"YulIdentifier","src":"3340:3:8"},"nativeSrc":"3340:18:8","nodeType":"YulFunctionCall","src":"3340:18:8"},"variableNames":[{"name":"tail","nativeSrc":"3332:4:8","nodeType":"YulIdentifier","src":"3332:4:8"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"3406:6:8","nodeType":"YulIdentifier","src":"3406:6:8"},{"arguments":[{"name":"headStart","nativeSrc":"3419:9:8","nodeType":"YulIdentifier","src":"3419:9:8"},{"kind":"number","nativeSrc":"3430:1:8","nodeType":"YulLiteral","src":"3430:1:8","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"3415:3:8","nodeType":"YulIdentifier","src":"3415:3:8"},"nativeSrc":"3415:17:8","nodeType":"YulFunctionCall","src":"3415:17:8"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"3368:37:8","nodeType":"YulIdentifier","src":"3368:37:8"},"nativeSrc":"3368:65:8","nodeType":"YulFunctionCall","src":"3368:65:8"},"nativeSrc":"3368:65:8","nodeType":"YulExpressionStatement","src":"3368:65:8"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"3230:210:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3294:9:8","nodeType":"YulTypedName","src":"3294:9:8","type":""},{"name":"value0","nativeSrc":"3306:6:8","nodeType":"YulTypedName","src":"3306:6:8","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3317:4:8","nodeType":"YulTypedName","src":"3317:4:8","type":""}],"src":"3230:210:8"},{"body":{"nativeSrc":"3511:53:8","nodeType":"YulBlock","src":"3511:53:8","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3528:3:8","nodeType":"YulIdentifier","src":"3528:3:8"},{"arguments":[{"name":"value","nativeSrc":"3551:5:8","nodeType":"YulIdentifier","src":"3551:5:8"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"3533:17:8","nodeType":"YulIdentifier","src":"3533:17:8"},"nativeSrc":"3533:24:8","nodeType":"YulFunctionCall","src":"3533:24:8"}],"functionName":{"name":"mstore","nativeSrc":"3521:6:8","nodeType":"YulIdentifier","src":"3521:6:8"},"nativeSrc":"3521:37:8","nodeType":"YulFunctionCall","src":"3521:37:8"},"nativeSrc":"3521:37:8","nodeType":"YulExpressionStatement","src":"3521:37:8"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"3446:118:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3499:5:8","nodeType":"YulTypedName","src":"3499:5:8","type":""},{"name":"pos","nativeSrc":"3506:3:8","nodeType":"YulTypedName","src":"3506:3:8","type":""}],"src":"3446:118:8"},{"body":{"nativeSrc":"3668:124:8","nodeType":"YulBlock","src":"3668:124:8","statements":[{"nativeSrc":"3678:26:8","nodeType":"YulAssignment","src":"3678:26:8","value":{"arguments":[{"name":"headStart","nativeSrc":"3690:9:8","nodeType":"YulIdentifier","src":"3690:9:8"},{"kind":"number","nativeSrc":"3701:2:8","nodeType":"YulLiteral","src":"3701:2:8","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3686:3:8","nodeType":"YulIdentifier","src":"3686:3:8"},"nativeSrc":"3686:18:8","nodeType":"YulFunctionCall","src":"3686:18:8"},"variableNames":[{"name":"tail","nativeSrc":"3678:4:8","nodeType":"YulIdentifier","src":"3678:4:8"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"3758:6:8","nodeType":"YulIdentifier","src":"3758:6:8"},{"arguments":[{"name":"headStart","nativeSrc":"3771:9:8","nodeType":"YulIdentifier","src":"3771:9:8"},{"kind":"number","nativeSrc":"3782:1:8","nodeType":"YulLiteral","src":"3782:1:8","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"3767:3:8","nodeType":"YulIdentifier","src":"3767:3:8"},"nativeSrc":"3767:17:8","nodeType":"YulFunctionCall","src":"3767:17:8"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"3714:43:8","nodeType":"YulIdentifier","src":"3714:43:8"},"nativeSrc":"3714:71:8","nodeType":"YulFunctionCall","src":"3714:71:8"},"nativeSrc":"3714:71:8","nodeType":"YulExpressionStatement","src":"3714:71:8"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"3570:222:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3640:9:8","nodeType":"YulTypedName","src":"3640:9:8","type":""},{"name":"value0","nativeSrc":"3652:6:8","nodeType":"YulTypedName","src":"3652:6:8","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3663:4:8","nodeType":"YulTypedName","src":"3663:4:8","type":""}],"src":"3570:222:8"},{"body":{"nativeSrc":"3898:519:8","nodeType":"YulBlock","src":"3898:519:8","statements":[{"body":{"nativeSrc":"3944:83:8","nodeType":"YulBlock","src":"3944:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"3946:77:8","nodeType":"YulIdentifier","src":"3946:77:8"},"nativeSrc":"3946:79:8","nodeType":"YulFunctionCall","src":"3946:79:8"},"nativeSrc":"3946:79:8","nodeType":"YulExpressionStatement","src":"3946:79:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3919:7:8","nodeType":"YulIdentifier","src":"3919:7:8"},{"name":"headStart","nativeSrc":"3928:9:8","nodeType":"YulIdentifier","src":"3928:9:8"}],"functionName":{"name":"sub","nativeSrc":"3915:3:8","nodeType":"YulIdentifier","src":"3915:3:8"},"nativeSrc":"3915:23:8","nodeType":"YulFunctionCall","src":"3915:23:8"},{"kind":"number","nativeSrc":"3940:2:8","nodeType":"YulLiteral","src":"3940:2:8","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"3911:3:8","nodeType":"YulIdentifier","src":"3911:3:8"},"nativeSrc":"3911:32:8","nodeType":"YulFunctionCall","src":"3911:32:8"},"nativeSrc":"3908:119:8","nodeType":"YulIf","src":"3908:119:8"},{"nativeSrc":"4037:117:8","nodeType":"YulBlock","src":"4037:117:8","statements":[{"nativeSrc":"4052:15:8","nodeType":"YulVariableDeclaration","src":"4052:15:8","value":{"kind":"number","nativeSrc":"4066:1:8","nodeType":"YulLiteral","src":"4066:1:8","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"4056:6:8","nodeType":"YulTypedName","src":"4056:6:8","type":""}]},{"nativeSrc":"4081:63:8","nodeType":"YulAssignment","src":"4081:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4116:9:8","nodeType":"YulIdentifier","src":"4116:9:8"},{"name":"offset","nativeSrc":"4127:6:8","nodeType":"YulIdentifier","src":"4127:6:8"}],"functionName":{"name":"add","nativeSrc":"4112:3:8","nodeType":"YulIdentifier","src":"4112:3:8"},"nativeSrc":"4112:22:8","nodeType":"YulFunctionCall","src":"4112:22:8"},{"name":"dataEnd","nativeSrc":"4136:7:8","nodeType":"YulIdentifier","src":"4136:7:8"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"4091:20:8","nodeType":"YulIdentifier","src":"4091:20:8"},"nativeSrc":"4091:53:8","nodeType":"YulFunctionCall","src":"4091:53:8"},"variableNames":[{"name":"value0","nativeSrc":"4081:6:8","nodeType":"YulIdentifier","src":"4081:6:8"}]}]},{"nativeSrc":"4164:118:8","nodeType":"YulBlock","src":"4164:118:8","statements":[{"nativeSrc":"4179:16:8","nodeType":"YulVariableDeclaration","src":"4179:16:8","value":{"kind":"number","nativeSrc":"4193:2:8","nodeType":"YulLiteral","src":"4193:2:8","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"4183:6:8","nodeType":"YulTypedName","src":"4183:6:8","type":""}]},{"nativeSrc":"4209:63:8","nodeType":"YulAssignment","src":"4209:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4244:9:8","nodeType":"YulIdentifier","src":"4244:9:8"},{"name":"offset","nativeSrc":"4255:6:8","nodeType":"YulIdentifier","src":"4255:6:8"}],"functionName":{"name":"add","nativeSrc":"4240:3:8","nodeType":"YulIdentifier","src":"4240:3:8"},"nativeSrc":"4240:22:8","nodeType":"YulFunctionCall","src":"4240:22:8"},{"name":"dataEnd","nativeSrc":"4264:7:8","nodeType":"YulIdentifier","src":"4264:7:8"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"4219:20:8","nodeType":"YulIdentifier","src":"4219:20:8"},"nativeSrc":"4219:53:8","nodeType":"YulFunctionCall","src":"4219:53:8"},"variableNames":[{"name":"value1","nativeSrc":"4209:6:8","nodeType":"YulIdentifier","src":"4209:6:8"}]}]},{"nativeSrc":"4292:118:8","nodeType":"YulBlock","src":"4292:118:8","statements":[{"nativeSrc":"4307:16:8","nodeType":"YulVariableDeclaration","src":"4307:16:8","value":{"kind":"number","nativeSrc":"4321:2:8","nodeType":"YulLiteral","src":"4321:2:8","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"4311:6:8","nodeType":"YulTypedName","src":"4311:6:8","type":""}]},{"nativeSrc":"4337:63:8","nodeType":"YulAssignment","src":"4337:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4372:9:8","nodeType":"YulIdentifier","src":"4372:9:8"},{"name":"offset","nativeSrc":"4383:6:8","nodeType":"YulIdentifier","src":"4383:6:8"}],"functionName":{"name":"add","nativeSrc":"4368:3:8","nodeType":"YulIdentifier","src":"4368:3:8"},"nativeSrc":"4368:22:8","nodeType":"YulFunctionCall","src":"4368:22:8"},{"name":"dataEnd","nativeSrc":"4392:7:8","nodeType":"YulIdentifier","src":"4392:7:8"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"4347:20:8","nodeType":"YulIdentifier","src":"4347:20:8"},"nativeSrc":"4347:53:8","nodeType":"YulFunctionCall","src":"4347:53:8"},"variableNames":[{"name":"value2","nativeSrc":"4337:6:8","nodeType":"YulIdentifier","src":"4337:6:8"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nativeSrc":"3798:619:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3852:9:8","nodeType":"YulTypedName","src":"3852:9:8","type":""},{"name":"dataEnd","nativeSrc":"3863:7:8","nodeType":"YulTypedName","src":"3863:7:8","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3875:6:8","nodeType":"YulTypedName","src":"3875:6:8","type":""},{"name":"value1","nativeSrc":"3883:6:8","nodeType":"YulTypedName","src":"3883:6:8","type":""},{"name":"value2","nativeSrc":"3891:6:8","nodeType":"YulTypedName","src":"3891:6:8","type":""}],"src":"3798:619:8"},{"body":{"nativeSrc":"4468:32:8","nodeType":"YulBlock","src":"4468:32:8","statements":[{"nativeSrc":"4478:16:8","nodeType":"YulAssignment","src":"4478:16:8","value":{"name":"value","nativeSrc":"4489:5:8","nodeType":"YulIdentifier","src":"4489:5:8"},"variableNames":[{"name":"cleaned","nativeSrc":"4478:7:8","nodeType":"YulIdentifier","src":"4478:7:8"}]}]},"name":"cleanup_t_bytes32","nativeSrc":"4423:77:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4450:5:8","nodeType":"YulTypedName","src":"4450:5:8","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"4460:7:8","nodeType":"YulTypedName","src":"4460:7:8","type":""}],"src":"4423:77:8"},{"body":{"nativeSrc":"4571:53:8","nodeType":"YulBlock","src":"4571:53:8","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"4588:3:8","nodeType":"YulIdentifier","src":"4588:3:8"},{"arguments":[{"name":"value","nativeSrc":"4611:5:8","nodeType":"YulIdentifier","src":"4611:5:8"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"4593:17:8","nodeType":"YulIdentifier","src":"4593:17:8"},"nativeSrc":"4593:24:8","nodeType":"YulFunctionCall","src":"4593:24:8"}],"functionName":{"name":"mstore","nativeSrc":"4581:6:8","nodeType":"YulIdentifier","src":"4581:6:8"},"nativeSrc":"4581:37:8","nodeType":"YulFunctionCall","src":"4581:37:8"},"nativeSrc":"4581:37:8","nodeType":"YulExpressionStatement","src":"4581:37:8"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"4506:118:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4559:5:8","nodeType":"YulTypedName","src":"4559:5:8","type":""},{"name":"pos","nativeSrc":"4566:3:8","nodeType":"YulTypedName","src":"4566:3:8","type":""}],"src":"4506:118:8"},{"body":{"nativeSrc":"4728:124:8","nodeType":"YulBlock","src":"4728:124:8","statements":[{"nativeSrc":"4738:26:8","nodeType":"YulAssignment","src":"4738:26:8","value":{"arguments":[{"name":"headStart","nativeSrc":"4750:9:8","nodeType":"YulIdentifier","src":"4750:9:8"},{"kind":"number","nativeSrc":"4761:2:8","nodeType":"YulLiteral","src":"4761:2:8","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4746:3:8","nodeType":"YulIdentifier","src":"4746:3:8"},"nativeSrc":"4746:18:8","nodeType":"YulFunctionCall","src":"4746:18:8"},"variableNames":[{"name":"tail","nativeSrc":"4738:4:8","nodeType":"YulIdentifier","src":"4738:4:8"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"4818:6:8","nodeType":"YulIdentifier","src":"4818:6:8"},{"arguments":[{"name":"headStart","nativeSrc":"4831:9:8","nodeType":"YulIdentifier","src":"4831:9:8"},{"kind":"number","nativeSrc":"4842:1:8","nodeType":"YulLiteral","src":"4842:1:8","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"4827:3:8","nodeType":"YulIdentifier","src":"4827:3:8"},"nativeSrc":"4827:17:8","nodeType":"YulFunctionCall","src":"4827:17:8"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"4774:43:8","nodeType":"YulIdentifier","src":"4774:43:8"},"nativeSrc":"4774:71:8","nodeType":"YulFunctionCall","src":"4774:71:8"},"nativeSrc":"4774:71:8","nodeType":"YulExpressionStatement","src":"4774:71:8"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nativeSrc":"4630:222:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4700:9:8","nodeType":"YulTypedName","src":"4700:9:8","type":""},{"name":"value0","nativeSrc":"4712:6:8","nodeType":"YulTypedName","src":"4712:6:8","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4723:4:8","nodeType":"YulTypedName","src":"4723:4:8","type":""}],"src":"4630:222:8"},{"body":{"nativeSrc":"4901:43:8","nodeType":"YulBlock","src":"4901:43:8","statements":[{"nativeSrc":"4911:27:8","nodeType":"YulAssignment","src":"4911:27:8","value":{"arguments":[{"name":"value","nativeSrc":"4926:5:8","nodeType":"YulIdentifier","src":"4926:5:8"},{"kind":"number","nativeSrc":"4933:4:8","nodeType":"YulLiteral","src":"4933:4:8","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"4922:3:8","nodeType":"YulIdentifier","src":"4922:3:8"},"nativeSrc":"4922:16:8","nodeType":"YulFunctionCall","src":"4922:16:8"},"variableNames":[{"name":"cleaned","nativeSrc":"4911:7:8","nodeType":"YulIdentifier","src":"4911:7:8"}]}]},"name":"cleanup_t_uint8","nativeSrc":"4858:86:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4883:5:8","nodeType":"YulTypedName","src":"4883:5:8","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"4893:7:8","nodeType":"YulTypedName","src":"4893:7:8","type":""}],"src":"4858:86:8"},{"body":{"nativeSrc":"5011:51:8","nodeType":"YulBlock","src":"5011:51:8","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"5028:3:8","nodeType":"YulIdentifier","src":"5028:3:8"},{"arguments":[{"name":"value","nativeSrc":"5049:5:8","nodeType":"YulIdentifier","src":"5049:5:8"}],"functionName":{"name":"cleanup_t_uint8","nativeSrc":"5033:15:8","nodeType":"YulIdentifier","src":"5033:15:8"},"nativeSrc":"5033:22:8","nodeType":"YulFunctionCall","src":"5033:22:8"}],"functionName":{"name":"mstore","nativeSrc":"5021:6:8","nodeType":"YulIdentifier","src":"5021:6:8"},"nativeSrc":"5021:35:8","nodeType":"YulFunctionCall","src":"5021:35:8"},"nativeSrc":"5021:35:8","nodeType":"YulExpressionStatement","src":"5021:35:8"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"4950:112:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4999:5:8","nodeType":"YulTypedName","src":"4999:5:8","type":""},{"name":"pos","nativeSrc":"5006:3:8","nodeType":"YulTypedName","src":"5006:3:8","type":""}],"src":"4950:112:8"},{"body":{"nativeSrc":"5162:120:8","nodeType":"YulBlock","src":"5162:120:8","statements":[{"nativeSrc":"5172:26:8","nodeType":"YulAssignment","src":"5172:26:8","value":{"arguments":[{"name":"headStart","nativeSrc":"5184:9:8","nodeType":"YulIdentifier","src":"5184:9:8"},{"kind":"number","nativeSrc":"5195:2:8","nodeType":"YulLiteral","src":"5195:2:8","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5180:3:8","nodeType":"YulIdentifier","src":"5180:3:8"},"nativeSrc":"5180:18:8","nodeType":"YulFunctionCall","src":"5180:18:8"},"variableNames":[{"name":"tail","nativeSrc":"5172:4:8","nodeType":"YulIdentifier","src":"5172:4:8"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"5248:6:8","nodeType":"YulIdentifier","src":"5248:6:8"},{"arguments":[{"name":"headStart","nativeSrc":"5261:9:8","nodeType":"YulIdentifier","src":"5261:9:8"},{"kind":"number","nativeSrc":"5272:1:8","nodeType":"YulLiteral","src":"5272:1:8","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"5257:3:8","nodeType":"YulIdentifier","src":"5257:3:8"},"nativeSrc":"5257:17:8","nodeType":"YulFunctionCall","src":"5257:17:8"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"5208:39:8","nodeType":"YulIdentifier","src":"5208:39:8"},"nativeSrc":"5208:67:8","nodeType":"YulFunctionCall","src":"5208:67:8"},"nativeSrc":"5208:67:8","nodeType":"YulExpressionStatement","src":"5208:67:8"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nativeSrc":"5068:214:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5134:9:8","nodeType":"YulTypedName","src":"5134:9:8","type":""},{"name":"value0","nativeSrc":"5146:6:8","nodeType":"YulTypedName","src":"5146:6:8","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5157:4:8","nodeType":"YulTypedName","src":"5157:4:8","type":""}],"src":"5068:214:8"},{"body":{"nativeSrc":"5354:263:8","nodeType":"YulBlock","src":"5354:263:8","statements":[{"body":{"nativeSrc":"5400:83:8","nodeType":"YulBlock","src":"5400:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"5402:77:8","nodeType":"YulIdentifier","src":"5402:77:8"},"nativeSrc":"5402:79:8","nodeType":"YulFunctionCall","src":"5402:79:8"},"nativeSrc":"5402:79:8","nodeType":"YulExpressionStatement","src":"5402:79:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5375:7:8","nodeType":"YulIdentifier","src":"5375:7:8"},{"name":"headStart","nativeSrc":"5384:9:8","nodeType":"YulIdentifier","src":"5384:9:8"}],"functionName":{"name":"sub","nativeSrc":"5371:3:8","nodeType":"YulIdentifier","src":"5371:3:8"},"nativeSrc":"5371:23:8","nodeType":"YulFunctionCall","src":"5371:23:8"},{"kind":"number","nativeSrc":"5396:2:8","nodeType":"YulLiteral","src":"5396:2:8","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"5367:3:8","nodeType":"YulIdentifier","src":"5367:3:8"},"nativeSrc":"5367:32:8","nodeType":"YulFunctionCall","src":"5367:32:8"},"nativeSrc":"5364:119:8","nodeType":"YulIf","src":"5364:119:8"},{"nativeSrc":"5493:117:8","nodeType":"YulBlock","src":"5493:117:8","statements":[{"nativeSrc":"5508:15:8","nodeType":"YulVariableDeclaration","src":"5508:15:8","value":{"kind":"number","nativeSrc":"5522:1:8","nodeType":"YulLiteral","src":"5522:1:8","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"5512:6:8","nodeType":"YulTypedName","src":"5512:6:8","type":""}]},{"nativeSrc":"5537:63:8","nodeType":"YulAssignment","src":"5537:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5572:9:8","nodeType":"YulIdentifier","src":"5572:9:8"},{"name":"offset","nativeSrc":"5583:6:8","nodeType":"YulIdentifier","src":"5583:6:8"}],"functionName":{"name":"add","nativeSrc":"5568:3:8","nodeType":"YulIdentifier","src":"5568:3:8"},"nativeSrc":"5568:22:8","nodeType":"YulFunctionCall","src":"5568:22:8"},{"name":"dataEnd","nativeSrc":"5592:7:8","nodeType":"YulIdentifier","src":"5592:7:8"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"5547:20:8","nodeType":"YulIdentifier","src":"5547:20:8"},"nativeSrc":"5547:53:8","nodeType":"YulFunctionCall","src":"5547:53:8"},"variableNames":[{"name":"value0","nativeSrc":"5537:6:8","nodeType":"YulIdentifier","src":"5537:6:8"}]}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"5288:329:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5324:9:8","nodeType":"YulTypedName","src":"5324:9:8","type":""},{"name":"dataEnd","nativeSrc":"5335:7:8","nodeType":"YulTypedName","src":"5335:7:8","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5347:6:8","nodeType":"YulTypedName","src":"5347:6:8","type":""}],"src":"5288:329:8"},{"body":{"nativeSrc":"5712:28:8","nodeType":"YulBlock","src":"5712:28:8","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5729:1:8","nodeType":"YulLiteral","src":"5729:1:8","type":"","value":"0"},{"kind":"number","nativeSrc":"5732:1:8","nodeType":"YulLiteral","src":"5732:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5722:6:8","nodeType":"YulIdentifier","src":"5722:6:8"},"nativeSrc":"5722:12:8","nodeType":"YulFunctionCall","src":"5722:12:8"},"nativeSrc":"5722:12:8","nodeType":"YulExpressionStatement","src":"5722:12:8"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"5623:117:8","nodeType":"YulFunctionDefinition","src":"5623:117:8"},{"body":{"nativeSrc":"5835:28:8","nodeType":"YulBlock","src":"5835:28:8","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5852:1:8","nodeType":"YulLiteral","src":"5852:1:8","type":"","value":"0"},{"kind":"number","nativeSrc":"5855:1:8","nodeType":"YulLiteral","src":"5855:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5845:6:8","nodeType":"YulIdentifier","src":"5845:6:8"},"nativeSrc":"5845:12:8","nodeType":"YulFunctionCall","src":"5845:12:8"},"nativeSrc":"5845:12:8","nodeType":"YulExpressionStatement","src":"5845:12:8"}]},"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nativeSrc":"5746:117:8","nodeType":"YulFunctionDefinition","src":"5746:117:8"},{"body":{"nativeSrc":"5958:28:8","nodeType":"YulBlock","src":"5958:28:8","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5975:1:8","nodeType":"YulLiteral","src":"5975:1:8","type":"","value":"0"},{"kind":"number","nativeSrc":"5978:1:8","nodeType":"YulLiteral","src":"5978:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5968:6:8","nodeType":"YulIdentifier","src":"5968:6:8"},"nativeSrc":"5968:12:8","nodeType":"YulFunctionCall","src":"5968:12:8"},"nativeSrc":"5968:12:8","nodeType":"YulExpressionStatement","src":"5968:12:8"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nativeSrc":"5869:117:8","nodeType":"YulFunctionDefinition","src":"5869:117:8"},{"body":{"nativeSrc":"6099:478:8","nodeType":"YulBlock","src":"6099:478:8","statements":[{"body":{"nativeSrc":"6148:83:8","nodeType":"YulBlock","src":"6148:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"6150:77:8","nodeType":"YulIdentifier","src":"6150:77:8"},"nativeSrc":"6150:79:8","nodeType":"YulFunctionCall","src":"6150:79:8"},"nativeSrc":"6150:79:8","nodeType":"YulExpressionStatement","src":"6150:79:8"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"6127:6:8","nodeType":"YulIdentifier","src":"6127:6:8"},{"kind":"number","nativeSrc":"6135:4:8","nodeType":"YulLiteral","src":"6135:4:8","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"6123:3:8","nodeType":"YulIdentifier","src":"6123:3:8"},"nativeSrc":"6123:17:8","nodeType":"YulFunctionCall","src":"6123:17:8"},{"name":"end","nativeSrc":"6142:3:8","nodeType":"YulIdentifier","src":"6142:3:8"}],"functionName":{"name":"slt","nativeSrc":"6119:3:8","nodeType":"YulIdentifier","src":"6119:3:8"},"nativeSrc":"6119:27:8","nodeType":"YulFunctionCall","src":"6119:27:8"}],"functionName":{"name":"iszero","nativeSrc":"6112:6:8","nodeType":"YulIdentifier","src":"6112:6:8"},"nativeSrc":"6112:35:8","nodeType":"YulFunctionCall","src":"6112:35:8"},"nativeSrc":"6109:122:8","nodeType":"YulIf","src":"6109:122:8"},{"nativeSrc":"6240:30:8","nodeType":"YulAssignment","src":"6240:30:8","value":{"arguments":[{"name":"offset","nativeSrc":"6263:6:8","nodeType":"YulIdentifier","src":"6263:6:8"}],"functionName":{"name":"calldataload","nativeSrc":"6250:12:8","nodeType":"YulIdentifier","src":"6250:12:8"},"nativeSrc":"6250:20:8","nodeType":"YulFunctionCall","src":"6250:20:8"},"variableNames":[{"name":"length","nativeSrc":"6240:6:8","nodeType":"YulIdentifier","src":"6240:6:8"}]},{"body":{"nativeSrc":"6313:83:8","nodeType":"YulBlock","src":"6313:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nativeSrc":"6315:77:8","nodeType":"YulIdentifier","src":"6315:77:8"},"nativeSrc":"6315:79:8","nodeType":"YulFunctionCall","src":"6315:79:8"},"nativeSrc":"6315:79:8","nodeType":"YulExpressionStatement","src":"6315:79:8"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"6285:6:8","nodeType":"YulIdentifier","src":"6285:6:8"},{"kind":"number","nativeSrc":"6293:18:8","nodeType":"YulLiteral","src":"6293:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"6282:2:8","nodeType":"YulIdentifier","src":"6282:2:8"},"nativeSrc":"6282:30:8","nodeType":"YulFunctionCall","src":"6282:30:8"},"nativeSrc":"6279:117:8","nodeType":"YulIf","src":"6279:117:8"},{"nativeSrc":"6405:29:8","nodeType":"YulAssignment","src":"6405:29:8","value":{"arguments":[{"name":"offset","nativeSrc":"6421:6:8","nodeType":"YulIdentifier","src":"6421:6:8"},{"kind":"number","nativeSrc":"6429:4:8","nodeType":"YulLiteral","src":"6429:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6417:3:8","nodeType":"YulIdentifier","src":"6417:3:8"},"nativeSrc":"6417:17:8","nodeType":"YulFunctionCall","src":"6417:17:8"},"variableNames":[{"name":"arrayPos","nativeSrc":"6405:8:8","nodeType":"YulIdentifier","src":"6405:8:8"}]},{"body":{"nativeSrc":"6488:83:8","nodeType":"YulBlock","src":"6488:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nativeSrc":"6490:77:8","nodeType":"YulIdentifier","src":"6490:77:8"},"nativeSrc":"6490:79:8","nodeType":"YulFunctionCall","src":"6490:79:8"},"nativeSrc":"6490:79:8","nodeType":"YulExpressionStatement","src":"6490:79:8"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nativeSrc":"6453:8:8","nodeType":"YulIdentifier","src":"6453:8:8"},{"arguments":[{"name":"length","nativeSrc":"6467:6:8","nodeType":"YulIdentifier","src":"6467:6:8"},{"kind":"number","nativeSrc":"6475:4:8","nodeType":"YulLiteral","src":"6475:4:8","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"6463:3:8","nodeType":"YulIdentifier","src":"6463:3:8"},"nativeSrc":"6463:17:8","nodeType":"YulFunctionCall","src":"6463:17:8"}],"functionName":{"name":"add","nativeSrc":"6449:3:8","nodeType":"YulIdentifier","src":"6449:3:8"},"nativeSrc":"6449:32:8","nodeType":"YulFunctionCall","src":"6449:32:8"},{"name":"end","nativeSrc":"6483:3:8","nodeType":"YulIdentifier","src":"6483:3:8"}],"functionName":{"name":"gt","nativeSrc":"6446:2:8","nodeType":"YulIdentifier","src":"6446:2:8"},"nativeSrc":"6446:41:8","nodeType":"YulFunctionCall","src":"6446:41:8"},"nativeSrc":"6443:128:8","nodeType":"YulIf","src":"6443:128:8"}]},"name":"abi_decode_t_array$_t_bytes32_$dyn_calldata_ptr","nativeSrc":"6009:568:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"6066:6:8","nodeType":"YulTypedName","src":"6066:6:8","type":""},{"name":"end","nativeSrc":"6074:3:8","nodeType":"YulTypedName","src":"6074:3:8","type":""}],"returnVariables":[{"name":"arrayPos","nativeSrc":"6082:8:8","nodeType":"YulTypedName","src":"6082:8:8","type":""},{"name":"length","nativeSrc":"6092:6:8","nodeType":"YulTypedName","src":"6092:6:8","type":""}],"src":"6009:568:8"},{"body":{"nativeSrc":"6701:586:8","nodeType":"YulBlock","src":"6701:586:8","statements":[{"body":{"nativeSrc":"6747:83:8","nodeType":"YulBlock","src":"6747:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"6749:77:8","nodeType":"YulIdentifier","src":"6749:77:8"},"nativeSrc":"6749:79:8","nodeType":"YulFunctionCall","src":"6749:79:8"},"nativeSrc":"6749:79:8","nodeType":"YulExpressionStatement","src":"6749:79:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"6722:7:8","nodeType":"YulIdentifier","src":"6722:7:8"},{"name":"headStart","nativeSrc":"6731:9:8","nodeType":"YulIdentifier","src":"6731:9:8"}],"functionName":{"name":"sub","nativeSrc":"6718:3:8","nodeType":"YulIdentifier","src":"6718:3:8"},"nativeSrc":"6718:23:8","nodeType":"YulFunctionCall","src":"6718:23:8"},{"kind":"number","nativeSrc":"6743:2:8","nodeType":"YulLiteral","src":"6743:2:8","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"6714:3:8","nodeType":"YulIdentifier","src":"6714:3:8"},"nativeSrc":"6714:32:8","nodeType":"YulFunctionCall","src":"6714:32:8"},"nativeSrc":"6711:119:8","nodeType":"YulIf","src":"6711:119:8"},{"nativeSrc":"6840:117:8","nodeType":"YulBlock","src":"6840:117:8","statements":[{"nativeSrc":"6855:15:8","nodeType":"YulVariableDeclaration","src":"6855:15:8","value":{"kind":"number","nativeSrc":"6869:1:8","nodeType":"YulLiteral","src":"6869:1:8","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"6859:6:8","nodeType":"YulTypedName","src":"6859:6:8","type":""}]},{"nativeSrc":"6884:63:8","nodeType":"YulAssignment","src":"6884:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6919:9:8","nodeType":"YulIdentifier","src":"6919:9:8"},{"name":"offset","nativeSrc":"6930:6:8","nodeType":"YulIdentifier","src":"6930:6:8"}],"functionName":{"name":"add","nativeSrc":"6915:3:8","nodeType":"YulIdentifier","src":"6915:3:8"},"nativeSrc":"6915:22:8","nodeType":"YulFunctionCall","src":"6915:22:8"},{"name":"dataEnd","nativeSrc":"6939:7:8","nodeType":"YulIdentifier","src":"6939:7:8"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"6894:20:8","nodeType":"YulIdentifier","src":"6894:20:8"},"nativeSrc":"6894:53:8","nodeType":"YulFunctionCall","src":"6894:53:8"},"variableNames":[{"name":"value0","nativeSrc":"6884:6:8","nodeType":"YulIdentifier","src":"6884:6:8"}]}]},{"nativeSrc":"6967:313:8","nodeType":"YulBlock","src":"6967:313:8","statements":[{"nativeSrc":"6982:46:8","nodeType":"YulVariableDeclaration","src":"6982:46:8","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7013:9:8","nodeType":"YulIdentifier","src":"7013:9:8"},{"kind":"number","nativeSrc":"7024:2:8","nodeType":"YulLiteral","src":"7024:2:8","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7009:3:8","nodeType":"YulIdentifier","src":"7009:3:8"},"nativeSrc":"7009:18:8","nodeType":"YulFunctionCall","src":"7009:18:8"}],"functionName":{"name":"calldataload","nativeSrc":"6996:12:8","nodeType":"YulIdentifier","src":"6996:12:8"},"nativeSrc":"6996:32:8","nodeType":"YulFunctionCall","src":"6996:32:8"},"variables":[{"name":"offset","nativeSrc":"6986:6:8","nodeType":"YulTypedName","src":"6986:6:8","type":""}]},{"body":{"nativeSrc":"7075:83:8","nodeType":"YulBlock","src":"7075:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"7077:77:8","nodeType":"YulIdentifier","src":"7077:77:8"},"nativeSrc":"7077:79:8","nodeType":"YulFunctionCall","src":"7077:79:8"},"nativeSrc":"7077:79:8","nodeType":"YulExpressionStatement","src":"7077:79:8"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"7047:6:8","nodeType":"YulIdentifier","src":"7047:6:8"},{"kind":"number","nativeSrc":"7055:18:8","nodeType":"YulLiteral","src":"7055:18:8","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"7044:2:8","nodeType":"YulIdentifier","src":"7044:2:8"},"nativeSrc":"7044:30:8","nodeType":"YulFunctionCall","src":"7044:30:8"},"nativeSrc":"7041:117:8","nodeType":"YulIf","src":"7041:117:8"},{"nativeSrc":"7172:98:8","nodeType":"YulAssignment","src":"7172:98:8","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7242:9:8","nodeType":"YulIdentifier","src":"7242:9:8"},{"name":"offset","nativeSrc":"7253:6:8","nodeType":"YulIdentifier","src":"7253:6:8"}],"functionName":{"name":"add","nativeSrc":"7238:3:8","nodeType":"YulIdentifier","src":"7238:3:8"},"nativeSrc":"7238:22:8","nodeType":"YulFunctionCall","src":"7238:22:8"},{"name":"dataEnd","nativeSrc":"7262:7:8","nodeType":"YulIdentifier","src":"7262:7:8"}],"functionName":{"name":"abi_decode_t_array$_t_bytes32_$dyn_calldata_ptr","nativeSrc":"7190:47:8","nodeType":"YulIdentifier","src":"7190:47:8"},"nativeSrc":"7190:80:8","nodeType":"YulFunctionCall","src":"7190:80:8"},"variableNames":[{"name":"value1","nativeSrc":"7172:6:8","nodeType":"YulIdentifier","src":"7172:6:8"},{"name":"value2","nativeSrc":"7180:6:8","nodeType":"YulIdentifier","src":"7180:6:8"}]}]}]},"name":"abi_decode_tuple_t_addresst_array$_t_bytes32_$dyn_calldata_ptr","nativeSrc":"6583:704:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6655:9:8","nodeType":"YulTypedName","src":"6655:9:8","type":""},{"name":"dataEnd","nativeSrc":"6666:7:8","nodeType":"YulTypedName","src":"6666:7:8","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"6678:6:8","nodeType":"YulTypedName","src":"6678:6:8","type":""},{"name":"value1","nativeSrc":"6686:6:8","nodeType":"YulTypedName","src":"6686:6:8","type":""},{"name":"value2","nativeSrc":"6694:6:8","nodeType":"YulTypedName","src":"6694:6:8","type":""}],"src":"6583:704:8"},{"body":{"nativeSrc":"7336:79:8","nodeType":"YulBlock","src":"7336:79:8","statements":[{"body":{"nativeSrc":"7393:16:8","nodeType":"YulBlock","src":"7393:16:8","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7402:1:8","nodeType":"YulLiteral","src":"7402:1:8","type":"","value":"0"},{"kind":"number","nativeSrc":"7405:1:8","nodeType":"YulLiteral","src":"7405:1:8","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"7395:6:8","nodeType":"YulIdentifier","src":"7395:6:8"},"nativeSrc":"7395:12:8","nodeType":"YulFunctionCall","src":"7395:12:8"},"nativeSrc":"7395:12:8","nodeType":"YulExpressionStatement","src":"7395:12:8"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"7359:5:8","nodeType":"YulIdentifier","src":"7359:5:8"},{"arguments":[{"name":"value","nativeSrc":"7384:5:8","nodeType":"YulIdentifier","src":"7384:5:8"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"7366:17:8","nodeType":"YulIdentifier","src":"7366:17:8"},"nativeSrc":"7366:24:8","nodeType":"YulFunctionCall","src":"7366:24:8"}],"functionName":{"name":"eq","nativeSrc":"7356:2:8","nodeType":"YulIdentifier","src":"7356:2:8"},"nativeSrc":"7356:35:8","nodeType":"YulFunctionCall","src":"7356:35:8"}],"functionName":{"name":"iszero","nativeSrc":"7349:6:8","nodeType":"YulIdentifier","src":"7349:6:8"},"nativeSrc":"7349:43:8","nodeType":"YulFunctionCall","src":"7349:43:8"},"nativeSrc":"7346:63:8","nodeType":"YulIf","src":"7346:63:8"}]},"name":"validator_revert_t_bytes32","nativeSrc":"7293:122:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7329:5:8","nodeType":"YulTypedName","src":"7329:5:8","type":""}],"src":"7293:122:8"},{"body":{"nativeSrc":"7473:87:8","nodeType":"YulBlock","src":"7473:87:8","statements":[{"nativeSrc":"7483:29:8","nodeType":"YulAssignment","src":"7483:29:8","value":{"arguments":[{"name":"offset","nativeSrc":"7505:6:8","nodeType":"YulIdentifier","src":"7505:6:8"}],"functionName":{"name":"calldataload","nativeSrc":"7492:12:8","nodeType":"YulIdentifier","src":"7492:12:8"},"nativeSrc":"7492:20:8","nodeType":"YulFunctionCall","src":"7492:20:8"},"variableNames":[{"name":"value","nativeSrc":"7483:5:8","nodeType":"YulIdentifier","src":"7483:5:8"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"7548:5:8","nodeType":"YulIdentifier","src":"7548:5:8"}],"functionName":{"name":"validator_revert_t_bytes32","nativeSrc":"7521:26:8","nodeType":"YulIdentifier","src":"7521:26:8"},"nativeSrc":"7521:33:8","nodeType":"YulFunctionCall","src":"7521:33:8"},"nativeSrc":"7521:33:8","nodeType":"YulExpressionStatement","src":"7521:33:8"}]},"name":"abi_decode_t_bytes32","nativeSrc":"7421:139:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"7451:6:8","nodeType":"YulTypedName","src":"7451:6:8","type":""},{"name":"end","nativeSrc":"7459:3:8","nodeType":"YulTypedName","src":"7459:3:8","type":""}],"returnVariables":[{"name":"value","nativeSrc":"7467:5:8","nodeType":"YulTypedName","src":"7467:5:8","type":""}],"src":"7421:139:8"},{"body":{"nativeSrc":"7632:263:8","nodeType":"YulBlock","src":"7632:263:8","statements":[{"body":{"nativeSrc":"7678:83:8","nodeType":"YulBlock","src":"7678:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"7680:77:8","nodeType":"YulIdentifier","src":"7680:77:8"},"nativeSrc":"7680:79:8","nodeType":"YulFunctionCall","src":"7680:79:8"},"nativeSrc":"7680:79:8","nodeType":"YulExpressionStatement","src":"7680:79:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"7653:7:8","nodeType":"YulIdentifier","src":"7653:7:8"},{"name":"headStart","nativeSrc":"7662:9:8","nodeType":"YulIdentifier","src":"7662:9:8"}],"functionName":{"name":"sub","nativeSrc":"7649:3:8","nodeType":"YulIdentifier","src":"7649:3:8"},"nativeSrc":"7649:23:8","nodeType":"YulFunctionCall","src":"7649:23:8"},{"kind":"number","nativeSrc":"7674:2:8","nodeType":"YulLiteral","src":"7674:2:8","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"7645:3:8","nodeType":"YulIdentifier","src":"7645:3:8"},"nativeSrc":"7645:32:8","nodeType":"YulFunctionCall","src":"7645:32:8"},"nativeSrc":"7642:119:8","nodeType":"YulIf","src":"7642:119:8"},{"nativeSrc":"7771:117:8","nodeType":"YulBlock","src":"7771:117:8","statements":[{"nativeSrc":"7786:15:8","nodeType":"YulVariableDeclaration","src":"7786:15:8","value":{"kind":"number","nativeSrc":"7800:1:8","nodeType":"YulLiteral","src":"7800:1:8","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"7790:6:8","nodeType":"YulTypedName","src":"7790:6:8","type":""}]},{"nativeSrc":"7815:63:8","nodeType":"YulAssignment","src":"7815:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7850:9:8","nodeType":"YulIdentifier","src":"7850:9:8"},{"name":"offset","nativeSrc":"7861:6:8","nodeType":"YulIdentifier","src":"7861:6:8"}],"functionName":{"name":"add","nativeSrc":"7846:3:8","nodeType":"YulIdentifier","src":"7846:3:8"},"nativeSrc":"7846:22:8","nodeType":"YulFunctionCall","src":"7846:22:8"},{"name":"dataEnd","nativeSrc":"7870:7:8","nodeType":"YulIdentifier","src":"7870:7:8"}],"functionName":{"name":"abi_decode_t_bytes32","nativeSrc":"7825:20:8","nodeType":"YulIdentifier","src":"7825:20:8"},"nativeSrc":"7825:53:8","nodeType":"YulFunctionCall","src":"7825:53:8"},"variableNames":[{"name":"value0","nativeSrc":"7815:6:8","nodeType":"YulIdentifier","src":"7815:6:8"}]}]}]},"name":"abi_decode_tuple_t_bytes32","nativeSrc":"7566:329:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7602:9:8","nodeType":"YulTypedName","src":"7602:9:8","type":""},{"name":"dataEnd","nativeSrc":"7613:7:8","nodeType":"YulTypedName","src":"7613:7:8","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"7625:6:8","nodeType":"YulTypedName","src":"7625:6:8","type":""}],"src":"7566:329:8"},{"body":{"nativeSrc":"7966:53:8","nodeType":"YulBlock","src":"7966:53:8","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"7983:3:8","nodeType":"YulIdentifier","src":"7983:3:8"},{"arguments":[{"name":"value","nativeSrc":"8006:5:8","nodeType":"YulIdentifier","src":"8006:5:8"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"7988:17:8","nodeType":"YulIdentifier","src":"7988:17:8"},"nativeSrc":"7988:24:8","nodeType":"YulFunctionCall","src":"7988:24:8"}],"functionName":{"name":"mstore","nativeSrc":"7976:6:8","nodeType":"YulIdentifier","src":"7976:6:8"},"nativeSrc":"7976:37:8","nodeType":"YulFunctionCall","src":"7976:37:8"},"nativeSrc":"7976:37:8","nodeType":"YulExpressionStatement","src":"7976:37:8"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"7901:118:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7954:5:8","nodeType":"YulTypedName","src":"7954:5:8","type":""},{"name":"pos","nativeSrc":"7961:3:8","nodeType":"YulTypedName","src":"7961:3:8","type":""}],"src":"7901:118:8"},{"body":{"nativeSrc":"8123:124:8","nodeType":"YulBlock","src":"8123:124:8","statements":[{"nativeSrc":"8133:26:8","nodeType":"YulAssignment","src":"8133:26:8","value":{"arguments":[{"name":"headStart","nativeSrc":"8145:9:8","nodeType":"YulIdentifier","src":"8145:9:8"},{"kind":"number","nativeSrc":"8156:2:8","nodeType":"YulLiteral","src":"8156:2:8","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8141:3:8","nodeType":"YulIdentifier","src":"8141:3:8"},"nativeSrc":"8141:18:8","nodeType":"YulFunctionCall","src":"8141:18:8"},"variableNames":[{"name":"tail","nativeSrc":"8133:4:8","nodeType":"YulIdentifier","src":"8133:4:8"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"8213:6:8","nodeType":"YulIdentifier","src":"8213:6:8"},{"arguments":[{"name":"headStart","nativeSrc":"8226:9:8","nodeType":"YulIdentifier","src":"8226:9:8"},{"kind":"number","nativeSrc":"8237:1:8","nodeType":"YulLiteral","src":"8237:1:8","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"8222:3:8","nodeType":"YulIdentifier","src":"8222:3:8"},"nativeSrc":"8222:17:8","nodeType":"YulFunctionCall","src":"8222:17:8"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"8169:43:8","nodeType":"YulIdentifier","src":"8169:43:8"},"nativeSrc":"8169:71:8","nodeType":"YulFunctionCall","src":"8169:71:8"},"nativeSrc":"8169:71:8","nodeType":"YulExpressionStatement","src":"8169:71:8"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"8025:222:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8095:9:8","nodeType":"YulTypedName","src":"8095:9:8","type":""},{"name":"value0","nativeSrc":"8107:6:8","nodeType":"YulTypedName","src":"8107:6:8","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8118:4:8","nodeType":"YulTypedName","src":"8118:4:8","type":""}],"src":"8025:222:8"},{"body":{"nativeSrc":"8336:391:8","nodeType":"YulBlock","src":"8336:391:8","statements":[{"body":{"nativeSrc":"8382:83:8","nodeType":"YulBlock","src":"8382:83:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"8384:77:8","nodeType":"YulIdentifier","src":"8384:77:8"},"nativeSrc":"8384:79:8","nodeType":"YulFunctionCall","src":"8384:79:8"},"nativeSrc":"8384:79:8","nodeType":"YulExpressionStatement","src":"8384:79:8"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"8357:7:8","nodeType":"YulIdentifier","src":"8357:7:8"},{"name":"headStart","nativeSrc":"8366:9:8","nodeType":"YulIdentifier","src":"8366:9:8"}],"functionName":{"name":"sub","nativeSrc":"8353:3:8","nodeType":"YulIdentifier","src":"8353:3:8"},"nativeSrc":"8353:23:8","nodeType":"YulFunctionCall","src":"8353:23:8"},{"kind":"number","nativeSrc":"8378:2:8","nodeType":"YulLiteral","src":"8378:2:8","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"8349:3:8","nodeType":"YulIdentifier","src":"8349:3:8"},"nativeSrc":"8349:32:8","nodeType":"YulFunctionCall","src":"8349:32:8"},"nativeSrc":"8346:119:8","nodeType":"YulIf","src":"8346:119:8"},{"nativeSrc":"8475:117:8","nodeType":"YulBlock","src":"8475:117:8","statements":[{"nativeSrc":"8490:15:8","nodeType":"YulVariableDeclaration","src":"8490:15:8","value":{"kind":"number","nativeSrc":"8504:1:8","nodeType":"YulLiteral","src":"8504:1:8","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"8494:6:8","nodeType":"YulTypedName","src":"8494:6:8","type":""}]},{"nativeSrc":"8519:63:8","nodeType":"YulAssignment","src":"8519:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8554:9:8","nodeType":"YulIdentifier","src":"8554:9:8"},{"name":"offset","nativeSrc":"8565:6:8","nodeType":"YulIdentifier","src":"8565:6:8"}],"functionName":{"name":"add","nativeSrc":"8550:3:8","nodeType":"YulIdentifier","src":"8550:3:8"},"nativeSrc":"8550:22:8","nodeType":"YulFunctionCall","src":"8550:22:8"},{"name":"dataEnd","nativeSrc":"8574:7:8","nodeType":"YulIdentifier","src":"8574:7:8"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"8529:20:8","nodeType":"YulIdentifier","src":"8529:20:8"},"nativeSrc":"8529:53:8","nodeType":"YulFunctionCall","src":"8529:53:8"},"variableNames":[{"name":"value0","nativeSrc":"8519:6:8","nodeType":"YulIdentifier","src":"8519:6:8"}]}]},{"nativeSrc":"8602:118:8","nodeType":"YulBlock","src":"8602:118:8","statements":[{"nativeSrc":"8617:16:8","nodeType":"YulVariableDeclaration","src":"8617:16:8","value":{"kind":"number","nativeSrc":"8631:2:8","nodeType":"YulLiteral","src":"8631:2:8","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"8621:6:8","nodeType":"YulTypedName","src":"8621:6:8","type":""}]},{"nativeSrc":"8647:63:8","nodeType":"YulAssignment","src":"8647:63:8","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8682:9:8","nodeType":"YulIdentifier","src":"8682:9:8"},{"name":"offset","nativeSrc":"8693:6:8","nodeType":"YulIdentifier","src":"8693:6:8"}],"functionName":{"name":"add","nativeSrc":"8678:3:8","nodeType":"YulIdentifier","src":"8678:3:8"},"nativeSrc":"8678:22:8","nodeType":"YulFunctionCall","src":"8678:22:8"},{"name":"dataEnd","nativeSrc":"8702:7:8","nodeType":"YulIdentifier","src":"8702:7:8"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"8657:20:8","nodeType":"YulIdentifier","src":"8657:20:8"},"nativeSrc":"8657:53:8","nodeType":"YulFunctionCall","src":"8657:53:8"},"variableNames":[{"name":"value1","nativeSrc":"8647:6:8","nodeType":"YulIdentifier","src":"8647:6:8"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nativeSrc":"8253:474:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8298:9:8","nodeType":"YulTypedName","src":"8298:9:8","type":""},{"name":"dataEnd","nativeSrc":"8309:7:8","nodeType":"YulTypedName","src":"8309:7:8","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"8321:6:8","nodeType":"YulTypedName","src":"8321:6:8","type":""},{"name":"value1","nativeSrc":"8329:6:8","nodeType":"YulTypedName","src":"8329:6:8","type":""}],"src":"8253:474:8"},{"body":{"nativeSrc":"8761:152:8","nodeType":"YulBlock","src":"8761:152:8","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"8778:1:8","nodeType":"YulLiteral","src":"8778:1:8","type":"","value":"0"},{"kind":"number","nativeSrc":"8781:77:8","nodeType":"YulLiteral","src":"8781:77:8","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"8771:6:8","nodeType":"YulIdentifier","src":"8771:6:8"},"nativeSrc":"8771:88:8","nodeType":"YulFunctionCall","src":"8771:88:8"},"nativeSrc":"8771:88:8","nodeType":"YulExpressionStatement","src":"8771:88:8"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"8875:1:8","nodeType":"YulLiteral","src":"8875:1:8","type":"","value":"4"},{"kind":"number","nativeSrc":"8878:4:8","nodeType":"YulLiteral","src":"8878:4:8","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"8868:6:8","nodeType":"YulIdentifier","src":"8868:6:8"},"nativeSrc":"8868:15:8","nodeType":"YulFunctionCall","src":"8868:15:8"},"nativeSrc":"8868:15:8","nodeType":"YulExpressionStatement","src":"8868:15:8"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"8899:1:8","nodeType":"YulLiteral","src":"8899:1:8","type":"","value":"0"},{"kind":"number","nativeSrc":"8902:4:8","nodeType":"YulLiteral","src":"8902:4:8","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"8892:6:8","nodeType":"YulIdentifier","src":"8892:6:8"},"nativeSrc":"8892:15:8","nodeType":"YulFunctionCall","src":"8892:15:8"},"nativeSrc":"8892:15:8","nodeType":"YulExpressionStatement","src":"8892:15:8"}]},"name":"panic_error_0x22","nativeSrc":"8733:180:8","nodeType":"YulFunctionDefinition","src":"8733:180:8"},{"body":{"nativeSrc":"8970:269:8","nodeType":"YulBlock","src":"8970:269:8","statements":[{"nativeSrc":"8980:22:8","nodeType":"YulAssignment","src":"8980:22:8","value":{"arguments":[{"name":"data","nativeSrc":"8994:4:8","nodeType":"YulIdentifier","src":"8994:4:8"},{"kind":"number","nativeSrc":"9000:1:8","nodeType":"YulLiteral","src":"9000:1:8","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"8990:3:8","nodeType":"YulIdentifier","src":"8990:3:8"},"nativeSrc":"8990:12:8","nodeType":"YulFunctionCall","src":"8990:12:8"},"variableNames":[{"name":"length","nativeSrc":"8980:6:8","nodeType":"YulIdentifier","src":"8980:6:8"}]},{"nativeSrc":"9011:38:8","nodeType":"YulVariableDeclaration","src":"9011:38:8","value":{"arguments":[{"name":"data","nativeSrc":"9041:4:8","nodeType":"YulIdentifier","src":"9041:4:8"},{"kind":"number","nativeSrc":"9047:1:8","nodeType":"YulLiteral","src":"9047:1:8","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"9037:3:8","nodeType":"YulIdentifier","src":"9037:3:8"},"nativeSrc":"9037:12:8","nodeType":"YulFunctionCall","src":"9037:12:8"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"9015:18:8","nodeType":"YulTypedName","src":"9015:18:8","type":""}]},{"body":{"nativeSrc":"9088:51:8","nodeType":"YulBlock","src":"9088:51:8","statements":[{"nativeSrc":"9102:27:8","nodeType":"YulAssignment","src":"9102:27:8","value":{"arguments":[{"name":"length","nativeSrc":"9116:6:8","nodeType":"YulIdentifier","src":"9116:6:8"},{"kind":"number","nativeSrc":"9124:4:8","nodeType":"YulLiteral","src":"9124:4:8","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"9112:3:8","nodeType":"YulIdentifier","src":"9112:3:8"},"nativeSrc":"9112:17:8","nodeType":"YulFunctionCall","src":"9112:17:8"},"variableNames":[{"name":"length","nativeSrc":"9102:6:8","nodeType":"YulIdentifier","src":"9102:6:8"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"9068:18:8","nodeType":"YulIdentifier","src":"9068:18:8"}],"functionName":{"name":"iszero","nativeSrc":"9061:6:8","nodeType":"YulIdentifier","src":"9061:6:8"},"nativeSrc":"9061:26:8","nodeType":"YulFunctionCall","src":"9061:26:8"},"nativeSrc":"9058:81:8","nodeType":"YulIf","src":"9058:81:8"},{"body":{"nativeSrc":"9191:42:8","nodeType":"YulBlock","src":"9191:42:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"9205:16:8","nodeType":"YulIdentifier","src":"9205:16:8"},"nativeSrc":"9205:18:8","nodeType":"YulFunctionCall","src":"9205:18:8"},"nativeSrc":"9205:18:8","nodeType":"YulExpressionStatement","src":"9205:18:8"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"9155:18:8","nodeType":"YulIdentifier","src":"9155:18:8"},{"arguments":[{"name":"length","nativeSrc":"9178:6:8","nodeType":"YulIdentifier","src":"9178:6:8"},{"kind":"number","nativeSrc":"9186:2:8","nodeType":"YulLiteral","src":"9186:2:8","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"9175:2:8","nodeType":"YulIdentifier","src":"9175:2:8"},"nativeSrc":"9175:14:8","nodeType":"YulFunctionCall","src":"9175:14:8"}],"functionName":{"name":"eq","nativeSrc":"9152:2:8","nodeType":"YulIdentifier","src":"9152:2:8"},"nativeSrc":"9152:38:8","nodeType":"YulFunctionCall","src":"9152:38:8"},"nativeSrc":"9149:84:8","nodeType":"YulIf","src":"9149:84:8"}]},"name":"extract_byte_array_length","nativeSrc":"8919:320:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"8954:4:8","nodeType":"YulTypedName","src":"8954:4:8","type":""}],"returnVariables":[{"name":"length","nativeSrc":"8963:6:8","nodeType":"YulTypedName","src":"8963:6:8","type":""}],"src":"8919:320:8"},{"body":{"nativeSrc":"9351:59:8","nodeType":"YulBlock","src":"9351:59:8","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"9373:6:8","nodeType":"YulIdentifier","src":"9373:6:8"},{"kind":"number","nativeSrc":"9381:1:8","nodeType":"YulLiteral","src":"9381:1:8","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"9369:3:8","nodeType":"YulIdentifier","src":"9369:3:8"},"nativeSrc":"9369:14:8","nodeType":"YulFunctionCall","src":"9369:14:8"},{"hexValue":"4e6f742057686974656c6973746564","kind":"string","nativeSrc":"9385:17:8","nodeType":"YulLiteral","src":"9385:17:8","type":"","value":"Not Whitelisted"}],"functionName":{"name":"mstore","nativeSrc":"9362:6:8","nodeType":"YulIdentifier","src":"9362:6:8"},"nativeSrc":"9362:41:8","nodeType":"YulFunctionCall","src":"9362:41:8"},"nativeSrc":"9362:41:8","nodeType":"YulExpressionStatement","src":"9362:41:8"}]},"name":"store_literal_in_memory_ea2ff205e74795d23c54c2e44a18bbafce9858e9cd78e091fb1af6ef9ede78ff","nativeSrc":"9245:165:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"9343:6:8","nodeType":"YulTypedName","src":"9343:6:8","type":""}],"src":"9245:165:8"},{"body":{"nativeSrc":"9562:220:8","nodeType":"YulBlock","src":"9562:220:8","statements":[{"nativeSrc":"9572:74:8","nodeType":"YulAssignment","src":"9572:74:8","value":{"arguments":[{"name":"pos","nativeSrc":"9638:3:8","nodeType":"YulIdentifier","src":"9638:3:8"},{"kind":"number","nativeSrc":"9643:2:8","nodeType":"YulLiteral","src":"9643:2:8","type":"","value":"15"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"9579:58:8","nodeType":"YulIdentifier","src":"9579:58:8"},"nativeSrc":"9579:67:8","nodeType":"YulFunctionCall","src":"9579:67:8"},"variableNames":[{"name":"pos","nativeSrc":"9572:3:8","nodeType":"YulIdentifier","src":"9572:3:8"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"9744:3:8","nodeType":"YulIdentifier","src":"9744:3:8"}],"functionName":{"name":"store_literal_in_memory_ea2ff205e74795d23c54c2e44a18bbafce9858e9cd78e091fb1af6ef9ede78ff","nativeSrc":"9655:88:8","nodeType":"YulIdentifier","src":"9655:88:8"},"nativeSrc":"9655:93:8","nodeType":"YulFunctionCall","src":"9655:93:8"},"nativeSrc":"9655:93:8","nodeType":"YulExpressionStatement","src":"9655:93:8"},{"nativeSrc":"9757:19:8","nodeType":"YulAssignment","src":"9757:19:8","value":{"arguments":[{"name":"pos","nativeSrc":"9768:3:8","nodeType":"YulIdentifier","src":"9768:3:8"},{"kind":"number","nativeSrc":"9773:2:8","nodeType":"YulLiteral","src":"9773:2:8","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9764:3:8","nodeType":"YulIdentifier","src":"9764:3:8"},"nativeSrc":"9764:12:8","nodeType":"YulFunctionCall","src":"9764:12:8"},"variableNames":[{"name":"end","nativeSrc":"9757:3:8","nodeType":"YulIdentifier","src":"9757:3:8"}]}]},"name":"abi_encode_t_stringliteral_ea2ff205e74795d23c54c2e44a18bbafce9858e9cd78e091fb1af6ef9ede78ff_to_t_string_memory_ptr_fromStack","nativeSrc":"9416:366:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"9550:3:8","nodeType":"YulTypedName","src":"9550:3:8","type":""}],"returnVariables":[{"name":"end","nativeSrc":"9558:3:8","nodeType":"YulTypedName","src":"9558:3:8","type":""}],"src":"9416:366:8"},{"body":{"nativeSrc":"9959:248:8","nodeType":"YulBlock","src":"9959:248:8","statements":[{"nativeSrc":"9969:26:8","nodeType":"YulAssignment","src":"9969:26:8","value":{"arguments":[{"name":"headStart","nativeSrc":"9981:9:8","nodeType":"YulIdentifier","src":"9981:9:8"},{"kind":"number","nativeSrc":"9992:2:8","nodeType":"YulLiteral","src":"9992:2:8","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9977:3:8","nodeType":"YulIdentifier","src":"9977:3:8"},"nativeSrc":"9977:18:8","nodeType":"YulFunctionCall","src":"9977:18:8"},"variableNames":[{"name":"tail","nativeSrc":"9969:4:8","nodeType":"YulIdentifier","src":"9969:4:8"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10016:9:8","nodeType":"YulIdentifier","src":"10016:9:8"},{"kind":"number","nativeSrc":"10027:1:8","nodeType":"YulLiteral","src":"10027:1:8","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"10012:3:8","nodeType":"YulIdentifier","src":"10012:3:8"},"nativeSrc":"10012:17:8","nodeType":"YulFunctionCall","src":"10012:17:8"},{"arguments":[{"name":"tail","nativeSrc":"10035:4:8","nodeType":"YulIdentifier","src":"10035:4:8"},{"name":"headStart","nativeSrc":"10041:9:8","nodeType":"YulIdentifier","src":"10041:9:8"}],"functionName":{"name":"sub","nativeSrc":"10031:3:8","nodeType":"YulIdentifier","src":"10031:3:8"},"nativeSrc":"10031:20:8","nodeType":"YulFunctionCall","src":"10031:20:8"}],"functionName":{"name":"mstore","nativeSrc":"10005:6:8","nodeType":"YulIdentifier","src":"10005:6:8"},"nativeSrc":"10005:47:8","nodeType":"YulFunctionCall","src":"10005:47:8"},"nativeSrc":"10005:47:8","nodeType":"YulExpressionStatement","src":"10005:47:8"},{"nativeSrc":"10061:139:8","nodeType":"YulAssignment","src":"10061:139:8","value":{"arguments":[{"name":"tail","nativeSrc":"10195:4:8","nodeType":"YulIdentifier","src":"10195:4:8"}],"functionName":{"name":"abi_encode_t_stringliteral_ea2ff205e74795d23c54c2e44a18bbafce9858e9cd78e091fb1af6ef9ede78ff_to_t_string_memory_ptr_fromStack","nativeSrc":"10069:124:8","nodeType":"YulIdentifier","src":"10069:124:8"},"nativeSrc":"10069:131:8","nodeType":"YulFunctionCall","src":"10069:131:8"},"variableNames":[{"name":"tail","nativeSrc":"10061:4:8","nodeType":"YulIdentifier","src":"10061:4:8"}]}]},"name":"abi_encode_tuple_t_stringliteral_ea2ff205e74795d23c54c2e44a18bbafce9858e9cd78e091fb1af6ef9ede78ff__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"9788:419:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9939:9:8","nodeType":"YulTypedName","src":"9939:9:8","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9954:4:8","nodeType":"YulTypedName","src":"9954:4:8","type":""}],"src":"9788:419:8"},{"body":{"nativeSrc":"10319:65:8","nodeType":"YulBlock","src":"10319:65:8","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"10341:6:8","nodeType":"YulIdentifier","src":"10341:6:8"},{"kind":"number","nativeSrc":"10349:1:8","nodeType":"YulLiteral","src":"10349:1:8","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"10337:3:8","nodeType":"YulIdentifier","src":"10337:3:8"},"nativeSrc":"10337:14:8","nodeType":"YulFunctionCall","src":"10337:14:8"},{"hexValue":"546f6b656e7320616c7265616479206d696e746564","kind":"string","nativeSrc":"10353:23:8","nodeType":"YulLiteral","src":"10353:23:8","type":"","value":"Tokens already minted"}],"functionName":{"name":"mstore","nativeSrc":"10330:6:8","nodeType":"YulIdentifier","src":"10330:6:8"},"nativeSrc":"10330:47:8","nodeType":"YulFunctionCall","src":"10330:47:8"},"nativeSrc":"10330:47:8","nodeType":"YulExpressionStatement","src":"10330:47:8"}]},"name":"store_literal_in_memory_ac4ee45368755067e98bcabb5ab6f92b0a070c5f5367426552e5a625dd61b5e4","nativeSrc":"10213:171:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"10311:6:8","nodeType":"YulTypedName","src":"10311:6:8","type":""}],"src":"10213:171:8"},{"body":{"nativeSrc":"10536:220:8","nodeType":"YulBlock","src":"10536:220:8","statements":[{"nativeSrc":"10546:74:8","nodeType":"YulAssignment","src":"10546:74:8","value":{"arguments":[{"name":"pos","nativeSrc":"10612:3:8","nodeType":"YulIdentifier","src":"10612:3:8"},{"kind":"number","nativeSrc":"10617:2:8","nodeType":"YulLiteral","src":"10617:2:8","type":"","value":"21"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"10553:58:8","nodeType":"YulIdentifier","src":"10553:58:8"},"nativeSrc":"10553:67:8","nodeType":"YulFunctionCall","src":"10553:67:8"},"variableNames":[{"name":"pos","nativeSrc":"10546:3:8","nodeType":"YulIdentifier","src":"10546:3:8"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"10718:3:8","nodeType":"YulIdentifier","src":"10718:3:8"}],"functionName":{"name":"store_literal_in_memory_ac4ee45368755067e98bcabb5ab6f92b0a070c5f5367426552e5a625dd61b5e4","nativeSrc":"10629:88:8","nodeType":"YulIdentifier","src":"10629:88:8"},"nativeSrc":"10629:93:8","nodeType":"YulFunctionCall","src":"10629:93:8"},"nativeSrc":"10629:93:8","nodeType":"YulExpressionStatement","src":"10629:93:8"},{"nativeSrc":"10731:19:8","nodeType":"YulAssignment","src":"10731:19:8","value":{"arguments":[{"name":"pos","nativeSrc":"10742:3:8","nodeType":"YulIdentifier","src":"10742:3:8"},{"kind":"number","nativeSrc":"10747:2:8","nodeType":"YulLiteral","src":"10747:2:8","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10738:3:8","nodeType":"YulIdentifier","src":"10738:3:8"},"nativeSrc":"10738:12:8","nodeType":"YulFunctionCall","src":"10738:12:8"},"variableNames":[{"name":"end","nativeSrc":"10731:3:8","nodeType":"YulIdentifier","src":"10731:3:8"}]}]},"name":"abi_encode_t_stringliteral_ac4ee45368755067e98bcabb5ab6f92b0a070c5f5367426552e5a625dd61b5e4_to_t_string_memory_ptr_fromStack","nativeSrc":"10390:366:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"10524:3:8","nodeType":"YulTypedName","src":"10524:3:8","type":""}],"returnVariables":[{"name":"end","nativeSrc":"10532:3:8","nodeType":"YulTypedName","src":"10532:3:8","type":""}],"src":"10390:366:8"},{"body":{"nativeSrc":"10933:248:8","nodeType":"YulBlock","src":"10933:248:8","statements":[{"nativeSrc":"10943:26:8","nodeType":"YulAssignment","src":"10943:26:8","value":{"arguments":[{"name":"headStart","nativeSrc":"10955:9:8","nodeType":"YulIdentifier","src":"10955:9:8"},{"kind":"number","nativeSrc":"10966:2:8","nodeType":"YulLiteral","src":"10966:2:8","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10951:3:8","nodeType":"YulIdentifier","src":"10951:3:8"},"nativeSrc":"10951:18:8","nodeType":"YulFunctionCall","src":"10951:18:8"},"variableNames":[{"name":"tail","nativeSrc":"10943:4:8","nodeType":"YulIdentifier","src":"10943:4:8"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10990:9:8","nodeType":"YulIdentifier","src":"10990:9:8"},{"kind":"number","nativeSrc":"11001:1:8","nodeType":"YulLiteral","src":"11001:1:8","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"10986:3:8","nodeType":"YulIdentifier","src":"10986:3:8"},"nativeSrc":"10986:17:8","nodeType":"YulFunctionCall","src":"10986:17:8"},{"arguments":[{"name":"tail","nativeSrc":"11009:4:8","nodeType":"YulIdentifier","src":"11009:4:8"},{"name":"headStart","nativeSrc":"11015:9:8","nodeType":"YulIdentifier","src":"11015:9:8"}],"functionName":{"name":"sub","nativeSrc":"11005:3:8","nodeType":"YulIdentifier","src":"11005:3:8"},"nativeSrc":"11005:20:8","nodeType":"YulFunctionCall","src":"11005:20:8"}],"functionName":{"name":"mstore","nativeSrc":"10979:6:8","nodeType":"YulIdentifier","src":"10979:6:8"},"nativeSrc":"10979:47:8","nodeType":"YulFunctionCall","src":"10979:47:8"},"nativeSrc":"10979:47:8","nodeType":"YulExpressionStatement","src":"10979:47:8"},{"nativeSrc":"11035:139:8","nodeType":"YulAssignment","src":"11035:139:8","value":{"arguments":[{"name":"tail","nativeSrc":"11169:4:8","nodeType":"YulIdentifier","src":"11169:4:8"}],"functionName":{"name":"abi_encode_t_stringliteral_ac4ee45368755067e98bcabb5ab6f92b0a070c5f5367426552e5a625dd61b5e4_to_t_string_memory_ptr_fromStack","nativeSrc":"11043:124:8","nodeType":"YulIdentifier","src":"11043:124:8"},"nativeSrc":"11043:131:8","nodeType":"YulFunctionCall","src":"11043:131:8"},"variableNames":[{"name":"tail","nativeSrc":"11035:4:8","nodeType":"YulIdentifier","src":"11035:4:8"}]}]},"name":"abi_encode_tuple_t_stringliteral_ac4ee45368755067e98bcabb5ab6f92b0a070c5f5367426552e5a625dd61b5e4__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"10762:419:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10913:9:8","nodeType":"YulTypedName","src":"10913:9:8","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"10928:4:8","nodeType":"YulTypedName","src":"10928:4:8","type":""}],"src":"10762:419:8"},{"body":{"nativeSrc":"11341:288:8","nodeType":"YulBlock","src":"11341:288:8","statements":[{"nativeSrc":"11351:26:8","nodeType":"YulAssignment","src":"11351:26:8","value":{"arguments":[{"name":"headStart","nativeSrc":"11363:9:8","nodeType":"YulIdentifier","src":"11363:9:8"},{"kind":"number","nativeSrc":"11374:2:8","nodeType":"YulLiteral","src":"11374:2:8","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"11359:3:8","nodeType":"YulIdentifier","src":"11359:3:8"},"nativeSrc":"11359:18:8","nodeType":"YulFunctionCall","src":"11359:18:8"},"variableNames":[{"name":"tail","nativeSrc":"11351:4:8","nodeType":"YulIdentifier","src":"11351:4:8"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"11431:6:8","nodeType":"YulIdentifier","src":"11431:6:8"},{"arguments":[{"name":"headStart","nativeSrc":"11444:9:8","nodeType":"YulIdentifier","src":"11444:9:8"},{"kind":"number","nativeSrc":"11455:1:8","nodeType":"YulLiteral","src":"11455:1:8","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"11440:3:8","nodeType":"YulIdentifier","src":"11440:3:8"},"nativeSrc":"11440:17:8","nodeType":"YulFunctionCall","src":"11440:17:8"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"11387:43:8","nodeType":"YulIdentifier","src":"11387:43:8"},"nativeSrc":"11387:71:8","nodeType":"YulFunctionCall","src":"11387:71:8"},"nativeSrc":"11387:71:8","nodeType":"YulExpressionStatement","src":"11387:71:8"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"11512:6:8","nodeType":"YulIdentifier","src":"11512:6:8"},{"arguments":[{"name":"headStart","nativeSrc":"11525:9:8","nodeType":"YulIdentifier","src":"11525:9:8"},{"kind":"number","nativeSrc":"11536:2:8","nodeType":"YulLiteral","src":"11536:2:8","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11521:3:8","nodeType":"YulIdentifier","src":"11521:3:8"},"nativeSrc":"11521:18:8","nodeType":"YulFunctionCall","src":"11521:18:8"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"11468:43:8","nodeType":"YulIdentifier","src":"11468:43:8"},"nativeSrc":"11468:72:8","nodeType":"YulFunctionCall","src":"11468:72:8"},"nativeSrc":"11468:72:8","nodeType":"YulExpressionStatement","src":"11468:72:8"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"11594:6:8","nodeType":"YulIdentifier","src":"11594:6:8"},{"arguments":[{"name":"headStart","nativeSrc":"11607:9:8","nodeType":"YulIdentifier","src":"11607:9:8"},{"kind":"number","nativeSrc":"11618:2:8","nodeType":"YulLiteral","src":"11618:2:8","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"11603:3:8","nodeType":"YulIdentifier","src":"11603:3:8"},"nativeSrc":"11603:18:8","nodeType":"YulFunctionCall","src":"11603:18:8"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"11550:43:8","nodeType":"YulIdentifier","src":"11550:43:8"},"nativeSrc":"11550:72:8","nodeType":"YulFunctionCall","src":"11550:72:8"},"nativeSrc":"11550:72:8","nodeType":"YulExpressionStatement","src":"11550:72:8"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"11187:442:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11297:9:8","nodeType":"YulTypedName","src":"11297:9:8","type":""},{"name":"value2","nativeSrc":"11309:6:8","nodeType":"YulTypedName","src":"11309:6:8","type":""},{"name":"value1","nativeSrc":"11317:6:8","nodeType":"YulTypedName","src":"11317:6:8","type":""},{"name":"value0","nativeSrc":"11325:6:8","nodeType":"YulTypedName","src":"11325:6:8","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"11336:4:8","nodeType":"YulTypedName","src":"11336:4:8","type":""}],"src":"11187:442:8"},{"body":{"nativeSrc":"11663:152:8","nodeType":"YulBlock","src":"11663:152:8","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"11680:1:8","nodeType":"YulLiteral","src":"11680:1:8","type":"","value":"0"},{"kind":"number","nativeSrc":"11683:77:8","nodeType":"YulLiteral","src":"11683:77:8","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"11673:6:8","nodeType":"YulIdentifier","src":"11673:6:8"},"nativeSrc":"11673:88:8","nodeType":"YulFunctionCall","src":"11673:88:8"},"nativeSrc":"11673:88:8","nodeType":"YulExpressionStatement","src":"11673:88:8"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"11777:1:8","nodeType":"YulLiteral","src":"11777:1:8","type":"","value":"4"},{"kind":"number","nativeSrc":"11780:4:8","nodeType":"YulLiteral","src":"11780:4:8","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"11770:6:8","nodeType":"YulIdentifier","src":"11770:6:8"},"nativeSrc":"11770:15:8","nodeType":"YulFunctionCall","src":"11770:15:8"},"nativeSrc":"11770:15:8","nodeType":"YulExpressionStatement","src":"11770:15:8"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"11801:1:8","nodeType":"YulLiteral","src":"11801:1:8","type":"","value":"0"},{"kind":"number","nativeSrc":"11804:4:8","nodeType":"YulLiteral","src":"11804:4:8","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"11794:6:8","nodeType":"YulIdentifier","src":"11794:6:8"},"nativeSrc":"11794:15:8","nodeType":"YulFunctionCall","src":"11794:15:8"},"nativeSrc":"11794:15:8","nodeType":"YulExpressionStatement","src":"11794:15:8"}]},"name":"panic_error_0x11","nativeSrc":"11635:180:8","nodeType":"YulFunctionDefinition","src":"11635:180:8"},{"body":{"nativeSrc":"11865:147:8","nodeType":"YulBlock","src":"11865:147:8","statements":[{"nativeSrc":"11875:25:8","nodeType":"YulAssignment","src":"11875:25:8","value":{"arguments":[{"name":"x","nativeSrc":"11898:1:8","nodeType":"YulIdentifier","src":"11898:1:8"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"11880:17:8","nodeType":"YulIdentifier","src":"11880:17:8"},"nativeSrc":"11880:20:8","nodeType":"YulFunctionCall","src":"11880:20:8"},"variableNames":[{"name":"x","nativeSrc":"11875:1:8","nodeType":"YulIdentifier","src":"11875:1:8"}]},{"nativeSrc":"11909:25:8","nodeType":"YulAssignment","src":"11909:25:8","value":{"arguments":[{"name":"y","nativeSrc":"11932:1:8","nodeType":"YulIdentifier","src":"11932:1:8"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"11914:17:8","nodeType":"YulIdentifier","src":"11914:17:8"},"nativeSrc":"11914:20:8","nodeType":"YulFunctionCall","src":"11914:20:8"},"variableNames":[{"name":"y","nativeSrc":"11909:1:8","nodeType":"YulIdentifier","src":"11909:1:8"}]},{"nativeSrc":"11943:16:8","nodeType":"YulAssignment","src":"11943:16:8","value":{"arguments":[{"name":"x","nativeSrc":"11954:1:8","nodeType":"YulIdentifier","src":"11954:1:8"},{"name":"y","nativeSrc":"11957:1:8","nodeType":"YulIdentifier","src":"11957:1:8"}],"functionName":{"name":"add","nativeSrc":"11950:3:8","nodeType":"YulIdentifier","src":"11950:3:8"},"nativeSrc":"11950:9:8","nodeType":"YulFunctionCall","src":"11950:9:8"},"variableNames":[{"name":"sum","nativeSrc":"11943:3:8","nodeType":"YulIdentifier","src":"11943:3:8"}]},{"body":{"nativeSrc":"11983:22:8","nodeType":"YulBlock","src":"11983:22:8","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"11985:16:8","nodeType":"YulIdentifier","src":"11985:16:8"},"nativeSrc":"11985:18:8","nodeType":"YulFunctionCall","src":"11985:18:8"},"nativeSrc":"11985:18:8","nodeType":"YulExpressionStatement","src":"11985:18:8"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"11975:1:8","nodeType":"YulIdentifier","src":"11975:1:8"},{"name":"sum","nativeSrc":"11978:3:8","nodeType":"YulIdentifier","src":"11978:3:8"}],"functionName":{"name":"gt","nativeSrc":"11972:2:8","nodeType":"YulIdentifier","src":"11972:2:8"},"nativeSrc":"11972:10:8","nodeType":"YulFunctionCall","src":"11972:10:8"},"nativeSrc":"11969:36:8","nodeType":"YulIf","src":"11969:36:8"}]},"name":"checked_add_t_uint256","nativeSrc":"11821:191:8","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"11852:1:8","nodeType":"YulTypedName","src":"11852:1:8","type":""},{"name":"y","nativeSrc":"11855:1:8","nodeType":"YulTypedName","src":"11855:1:8","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"11861:3:8","nodeType":"YulTypedName","src":"11861:3:8","type":""}],"src":"11821:191:8"},{"body":{"nativeSrc":"12046:152:8","nodeType":"YulBlock","src":"12046:152:8","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"12063:1:8","nodeType":"YulLiteral","src":"12063:1:8","type":"","value":"0"},{"kind":"number","nativeSrc":"12066:77:8","nodeType":"YulLiteral","src":"12066:77:8","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"12056:6:8","nodeType":"YulIdentifier","src":"12056:6:8"},"nativeSrc":"12056:88:8","nodeType":"YulFunctionCall","src":"12056:88:8"},"nativeSrc":"12056:88:8","nodeType":"YulExpressionStatement","src":"12056:88:8"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"12160:1:8","nodeType":"YulLiteral","src":"12160:1:8","type":"","value":"4"},{"kind":"number","nativeSrc":"12163:4:8","nodeType":"YulLiteral","src":"12163:4:8","type":"","value":"0x32"}],"functionName":{"name":"mstore","nativeSrc":"12153:6:8","nodeType":"YulIdentifier","src":"12153:6:8"},"nativeSrc":"12153:15:8","nodeType":"YulFunctionCall","src":"12153:15:8"},"nativeSrc":"12153:15:8","nodeType":"YulExpressionStatement","src":"12153:15:8"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"12184:1:8","nodeType":"YulLiteral","src":"12184:1:8","type":"","value":"0"},{"kind":"number","nativeSrc":"12187:4:8","nodeType":"YulLiteral","src":"12187:4:8","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"12177:6:8","nodeType":"YulIdentifier","src":"12177:6:8"},"nativeSrc":"12177:15:8","nodeType":"YulFunctionCall","src":"12177:15:8"},"nativeSrc":"12177:15:8","nodeType":"YulExpressionStatement","src":"12177:15:8"}]},"name":"panic_error_0x32","nativeSrc":"12018:180:8","nodeType":"YulFunctionDefinition","src":"12018:180:8"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // bytes32[]\n    function abi_decode_t_array$_t_bytes32_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_addresst_array$_t_bytes32_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1, value2 := abi_decode_t_array$_t_bytes32_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_ea2ff205e74795d23c54c2e44a18bbafce9858e9cd78e091fb1af6ef9ede78ff(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not Whitelisted\")\n\n    }\n\n    function abi_encode_t_stringliteral_ea2ff205e74795d23c54c2e44a18bbafce9858e9cd78e091fb1af6ef9ede78ff_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_ea2ff205e74795d23c54c2e44a18bbafce9858e9cd78e091fb1af6ef9ede78ff(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ea2ff205e74795d23c54c2e44a18bbafce9858e9cd78e091fb1af6ef9ede78ff__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ea2ff205e74795d23c54c2e44a18bbafce9858e9cd78e091fb1af6ef9ede78ff_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ac4ee45368755067e98bcabb5ab6f92b0a070c5f5367426552e5a625dd61b5e4(memPtr) {\n\n        mstore(add(memPtr, 0), \"Tokens already minted\")\n\n    }\n\n    function abi_encode_t_stringliteral_ac4ee45368755067e98bcabb5ab6f92b0a070c5f5367426552e5a625dd61b5e4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_ac4ee45368755067e98bcabb5ab6f92b0a070c5f5367426552e5a625dd61b5e4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ac4ee45368755067e98bcabb5ab6f92b0a070c5f5367426552e5a625dd61b5e4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ac4ee45368755067e98bcabb5ab6f92b0a070c5f5367426552e5a625dd61b5e4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n}\n","id":8,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100f55760003560e01c8063715018a61161009757806395d89b411161006657806395d89b4114610262578063a9059cbb14610280578063dd62ed3e146102b0578063f2fde38b146102e0576100f5565b8063715018a6146102025780637bf322701461020c5780637cb64759146102285780638da5cb5b14610244576100f5565b806323b872dd116100d357806323b872dd146101665780632eb4a7ab14610196578063313ce567146101b457806370a08231146101d2576100f5565b806306fdde03146100fa578063095ea7b31461011857806318160ddd14610148575b600080fd5b6101026102fc565b60405161010f91906110e9565b60405180910390f35b610132600480360381019061012d91906111a9565b61038e565b60405161013f9190611204565b60405180910390f35b6101506103b1565b60405161015d919061122e565b60405180910390f35b610180600480360381019061017b9190611249565b6103bb565b60405161018d9190611204565b60405180910390f35b61019e6103ea565b6040516101ab91906112b5565b60405180910390f35b6101bc6103f0565b6040516101c991906112ec565b60405180910390f35b6101ec60048036038101906101e79190611307565b6103f9565b6040516101f9919061122e565b60405180910390f35b61020a610441565b005b61022660048036038101906102219190611399565b610455565b005b610242600480360381019061023d9190611425565b61059b565b005b61024c6105ad565b6040516102599190611461565b60405180910390f35b61026a6105d7565b60405161027791906110e9565b60405180910390f35b61029a600480360381019061029591906111a9565b610669565b6040516102a79190611204565b60405180910390f35b6102ca60048036038101906102c5919061147c565b61068c565b6040516102d7919061122e565b60405180910390f35b6102fa60048036038101906102f59190611307565b610713565b005b60606003805461030b906114eb565b80601f0160208091040260200160405190810160405280929190818152602001828054610337906114eb565b80156103845780601f1061035957610100808354040283529160200191610384565b820191906000526020600020905b81548152906001019060200180831161036757829003601f168201915b5050505050905090565b600080610399610799565b90506103a68185856107a1565b600191505092915050565b6000600254905090565b6000806103c6610799565b90506103d38582856107b3565b6103de858585610847565b60019150509392505050565b60065481565b60006012905090565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b61044961093b565b61045360006109c2565b565b610460338383610a88565b61049f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049690611568565b60405180910390fd5b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161561052c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610523906115d4565b60405180910390fd5b6001600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555061059683671bc16d674ec80000610b32565b505050565b6105a361093b565b8060068190555050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600480546105e6906114eb565b80601f0160208091040260200160405190810160405280929190818152602001828054610612906114eb565b801561065f5780601f106106345761010080835404028352916020019161065f565b820191906000526020600020905b81548152906001019060200180831161064257829003601f168201915b5050505050905090565b600080610674610799565b9050610681818585610847565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b61071b61093b565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361078d5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016107849190611461565b60405180910390fd5b610796816109c2565b50565b600033905090565b6107ae8383836001610bb4565b505050565b60006107bf848461068c565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146108415781811015610831578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610828939291906115f4565b60405180910390fd5b61084084848484036000610bb4565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036108b95760006040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016108b09190611461565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361092b5760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016109229190611461565b60405180910390fd5b610936838383610d8b565b505050565b610943610799565b73ffffffffffffffffffffffffffffffffffffffff166109616105ad565b73ffffffffffffffffffffffffffffffffffffffff16146109c057610984610799565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016109b79190611461565b60405180910390fd5b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008084604051602001610a9c9190611461565b60405160208183030381529060405280519060200120604051602001610ac291906112b5565b604051602081830303815290604052805190602001209050610b28848480806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505060065483610fb0565b9150509392505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ba45760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610b9b9190611461565b60405180910390fd5b610bb060008383610d8b565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610c265760006040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610c1d9190611461565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610c985760006040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610c8f9190611461565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015610d85578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610d7c919061122e565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610ddd578060026000828254610dd1919061165a565b92505081905550610eb0565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610e69578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610e60939291906115f4565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ef95780600260008282540392505081905550610f46565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610fa3919061122e565b60405180910390a3505050565b600082610fbd8584610fc7565b1490509392505050565b60008082905060005b845181101561100c57610ffd82868381518110610ff057610fef61168e565b5b6020026020010151611017565b91508080600101915050610fd0565b508091505092915050565b600081831061102f5761102a8284611042565b61103a565b6110398383611042565b5b905092915050565b600082600052816020526040600020905092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611093578082015181840152602081019050611078565b60008484015250505050565b6000601f19601f8301169050919050565b60006110bb82611059565b6110c58185611064565b93506110d5818560208601611075565b6110de8161109f565b840191505092915050565b6000602082019050818103600083015261110381846110b0565b905092915050565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061114082611115565b9050919050565b61115081611135565b811461115b57600080fd5b50565b60008135905061116d81611147565b92915050565b6000819050919050565b61118681611173565b811461119157600080fd5b50565b6000813590506111a38161117d565b92915050565b600080604083850312156111c0576111bf61110b565b5b60006111ce8582860161115e565b92505060206111df85828601611194565b9150509250929050565b60008115159050919050565b6111fe816111e9565b82525050565b600060208201905061121960008301846111f5565b92915050565b61122881611173565b82525050565b6000602082019050611243600083018461121f565b92915050565b6000806000606084860312156112625761126161110b565b5b60006112708682870161115e565b93505060206112818682870161115e565b925050604061129286828701611194565b9150509250925092565b6000819050919050565b6112af8161129c565b82525050565b60006020820190506112ca60008301846112a6565b92915050565b600060ff82169050919050565b6112e6816112d0565b82525050565b600060208201905061130160008301846112dd565b92915050565b60006020828403121561131d5761131c61110b565b5b600061132b8482850161115e565b91505092915050565b600080fd5b600080fd5b600080fd5b60008083601f84011261135957611358611334565b5b8235905067ffffffffffffffff81111561137657611375611339565b5b6020830191508360208202830111156113925761139161133e565b5b9250929050565b6000806000604084860312156113b2576113b161110b565b5b60006113c08682870161115e565b935050602084013567ffffffffffffffff8111156113e1576113e0611110565b5b6113ed86828701611343565b92509250509250925092565b6114028161129c565b811461140d57600080fd5b50565b60008135905061141f816113f9565b92915050565b60006020828403121561143b5761143a61110b565b5b600061144984828501611410565b91505092915050565b61145b81611135565b82525050565b60006020820190506114766000830184611452565b92915050565b600080604083850312156114935761149261110b565b5b60006114a18582860161115e565b92505060206114b28582860161115e565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061150357607f821691505b602082108103611516576115156114bc565b5b50919050565b7f4e6f742057686974656c69737465640000000000000000000000000000000000600082015250565b6000611552600f83611064565b915061155d8261151c565b602082019050919050565b6000602082019050818103600083015261158181611545565b9050919050565b7f546f6b656e7320616c7265616479206d696e7465640000000000000000000000600082015250565b60006115be601583611064565b91506115c982611588565b602082019050919050565b600060208201905081810360008301526115ed816115b1565b9050919050565b60006060820190506116096000830186611452565b611616602083018561121f565b611623604083018461121f565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061166582611173565b915061167083611173565b92508282019050808211156116885761168761162b565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea2646970667358221220a63d53a36cf11ed8bd02b14cb766379d08b244092393c05e3d8a6dd2362066c864736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x262 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x280 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2B0 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2E0 JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x202 JUMPI DUP1 PUSH4 0x7BF32270 EQ PUSH2 0x20C JUMPI DUP1 PUSH4 0x7CB64759 EQ PUSH2 0x228 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x244 JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0x2EB4A7AB EQ PUSH2 0x196 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1D2 JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x148 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x102 PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10F SWAP2 SWAP1 PUSH2 0x10E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x132 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12D SWAP2 SWAP1 PUSH2 0x11A9 JUMP JUMPDEST PUSH2 0x38E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13F SWAP2 SWAP1 PUSH2 0x1204 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x150 PUSH2 0x3B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15D SWAP2 SWAP1 PUSH2 0x122E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x180 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17B SWAP2 SWAP1 PUSH2 0x1249 JUMP JUMPDEST PUSH2 0x3BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x1204 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19E PUSH2 0x3EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0x12B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BC PUSH2 0x3F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0x12EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E7 SWAP2 SWAP1 PUSH2 0x1307 JUMP JUMPDEST PUSH2 0x3F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0x122E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20A PUSH2 0x441 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x226 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x221 SWAP2 SWAP1 PUSH2 0x1399 JUMP JUMPDEST PUSH2 0x455 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x242 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23D SWAP2 SWAP1 PUSH2 0x1425 JUMP JUMPDEST PUSH2 0x59B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x24C PUSH2 0x5AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x259 SWAP2 SWAP1 PUSH2 0x1461 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26A PUSH2 0x5D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x277 SWAP2 SWAP1 PUSH2 0x10E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x295 SWAP2 SWAP1 PUSH2 0x11A9 JUMP JUMPDEST PUSH2 0x669 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A7 SWAP2 SWAP1 PUSH2 0x1204 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C5 SWAP2 SWAP1 PUSH2 0x147C JUMP JUMPDEST PUSH2 0x68C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D7 SWAP2 SWAP1 PUSH2 0x122E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F5 SWAP2 SWAP1 PUSH2 0x1307 JUMP JUMPDEST PUSH2 0x713 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x30B SWAP1 PUSH2 0x14EB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x337 SWAP1 PUSH2 0x14EB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x384 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x359 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x384 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x367 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x399 PUSH2 0x799 JUMP JUMPDEST SWAP1 POP PUSH2 0x3A6 DUP2 DUP6 DUP6 PUSH2 0x7A1 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3C6 PUSH2 0x799 JUMP JUMPDEST SWAP1 POP PUSH2 0x3D3 DUP6 DUP3 DUP6 PUSH2 0x7B3 JUMP JUMPDEST PUSH2 0x3DE DUP6 DUP6 DUP6 PUSH2 0x847 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x449 PUSH2 0x93B JUMP JUMPDEST PUSH2 0x453 PUSH1 0x0 PUSH2 0x9C2 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x460 CALLER DUP4 DUP4 PUSH2 0xA88 JUMP JUMPDEST PUSH2 0x49F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x496 SWAP1 PUSH2 0x1568 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x52C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x523 SWAP1 PUSH2 0x15D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x596 DUP4 PUSH8 0x1BC16D674EC80000 PUSH2 0xB32 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x5A3 PUSH2 0x93B JUMP JUMPDEST DUP1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x5E6 SWAP1 PUSH2 0x14EB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x612 SWAP1 PUSH2 0x14EB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x65F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x634 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x65F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x642 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x674 PUSH2 0x799 JUMP JUMPDEST SWAP1 POP PUSH2 0x681 DUP2 DUP6 DUP6 PUSH2 0x847 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x71B PUSH2 0x93B JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x78D JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x784 SWAP2 SWAP1 PUSH2 0x1461 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x796 DUP2 PUSH2 0x9C2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7AE DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xBB4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7BF DUP5 DUP5 PUSH2 0x68C JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x841 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x831 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x828 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x15F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x840 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0xBB4 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8B9 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B0 SWAP2 SWAP1 PUSH2 0x1461 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x92B JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x922 SWAP2 SWAP1 PUSH2 0x1461 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x936 DUP4 DUP4 DUP4 PUSH2 0xD8B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x943 PUSH2 0x799 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x961 PUSH2 0x5AD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9C0 JUMPI PUSH2 0x984 PUSH2 0x799 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9B7 SWAP2 SWAP1 PUSH2 0x1461 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xA9C SWAP2 SWAP1 PUSH2 0x1461 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xAC2 SWAP2 SWAP1 PUSH2 0x12B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0xB28 DUP5 DUP5 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH1 0x6 SLOAD DUP4 PUSH2 0xFB0 JUMP JUMPDEST SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBA4 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB9B SWAP2 SWAP1 PUSH2 0x1461 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBB0 PUSH1 0x0 DUP4 DUP4 PUSH2 0xD8B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC26 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC1D SWAP2 SWAP1 PUSH2 0x1461 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC98 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC8F SWAP2 SWAP1 PUSH2 0x1461 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xD85 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xD7C SWAP2 SWAP1 PUSH2 0x122E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDDD JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xDD1 SWAP2 SWAP1 PUSH2 0x165A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xEB0 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xE69 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE60 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x15F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEF9 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xF46 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xFA3 SWAP2 SWAP1 PUSH2 0x122E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xFBD DUP6 DUP5 PUSH2 0xFC7 JUMP JUMPDEST EQ SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x100C JUMPI PUSH2 0xFFD DUP3 DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xFF0 JUMPI PUSH2 0xFEF PUSH2 0x168E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1017 JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xFD0 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x102F JUMPI PUSH2 0x102A DUP3 DUP5 PUSH2 0x1042 JUMP JUMPDEST PUSH2 0x103A JUMP JUMPDEST PUSH2 0x1039 DUP4 DUP4 PUSH2 0x1042 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1093 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1078 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10BB DUP3 PUSH2 0x1059 JUMP JUMPDEST PUSH2 0x10C5 DUP2 DUP6 PUSH2 0x1064 JUMP JUMPDEST SWAP4 POP PUSH2 0x10D5 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1075 JUMP JUMPDEST PUSH2 0x10DE DUP2 PUSH2 0x109F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1103 DUP2 DUP5 PUSH2 0x10B0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1140 DUP3 PUSH2 0x1115 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1150 DUP2 PUSH2 0x1135 JUMP JUMPDEST DUP2 EQ PUSH2 0x115B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x116D DUP2 PUSH2 0x1147 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1186 DUP2 PUSH2 0x1173 JUMP JUMPDEST DUP2 EQ PUSH2 0x1191 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11A3 DUP2 PUSH2 0x117D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11C0 JUMPI PUSH2 0x11BF PUSH2 0x110B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x11CE DUP6 DUP3 DUP7 ADD PUSH2 0x115E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x11DF DUP6 DUP3 DUP7 ADD PUSH2 0x1194 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11FE DUP2 PUSH2 0x11E9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1219 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x11F5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1228 DUP2 PUSH2 0x1173 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1243 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x121F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1262 JUMPI PUSH2 0x1261 PUSH2 0x110B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1270 DUP7 DUP3 DUP8 ADD PUSH2 0x115E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1281 DUP7 DUP3 DUP8 ADD PUSH2 0x115E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1292 DUP7 DUP3 DUP8 ADD PUSH2 0x1194 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12AF DUP2 PUSH2 0x129C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12CA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x12A6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12E6 DUP2 PUSH2 0x12D0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1301 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x12DD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x131D JUMPI PUSH2 0x131C PUSH2 0x110B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x132B DUP5 DUP3 DUP6 ADD PUSH2 0x115E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1359 JUMPI PUSH2 0x1358 PUSH2 0x1334 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1376 JUMPI PUSH2 0x1375 PUSH2 0x1339 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1392 JUMPI PUSH2 0x1391 PUSH2 0x133E JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x13B2 JUMPI PUSH2 0x13B1 PUSH2 0x110B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13C0 DUP7 DUP3 DUP8 ADD PUSH2 0x115E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x13E1 JUMPI PUSH2 0x13E0 PUSH2 0x1110 JUMP JUMPDEST JUMPDEST PUSH2 0x13ED DUP7 DUP3 DUP8 ADD PUSH2 0x1343 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x1402 DUP2 PUSH2 0x129C JUMP JUMPDEST DUP2 EQ PUSH2 0x140D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x141F DUP2 PUSH2 0x13F9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x143B JUMPI PUSH2 0x143A PUSH2 0x110B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1449 DUP5 DUP3 DUP6 ADD PUSH2 0x1410 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x145B DUP2 PUSH2 0x1135 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1476 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1452 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1493 JUMPI PUSH2 0x1492 PUSH2 0x110B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x14A1 DUP6 DUP3 DUP7 ADD PUSH2 0x115E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x14B2 DUP6 DUP3 DUP7 ADD PUSH2 0x115E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1503 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1516 JUMPI PUSH2 0x1515 PUSH2 0x14BC JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F742057686974656C69737465640000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1552 PUSH1 0xF DUP4 PUSH2 0x1064 JUMP JUMPDEST SWAP2 POP PUSH2 0x155D DUP3 PUSH2 0x151C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1581 DUP2 PUSH2 0x1545 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F6B656E7320616C7265616479206D696E7465640000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15BE PUSH1 0x15 DUP4 PUSH2 0x1064 JUMP JUMPDEST SWAP2 POP PUSH2 0x15C9 DUP3 PUSH2 0x1588 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x15ED DUP2 PUSH2 0x15B1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1609 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1452 JUMP JUMPDEST PUSH2 0x1616 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x121F JUMP JUMPDEST PUSH2 0x1623 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x121F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1665 DUP3 PUSH2 0x1173 JUMP JUMPDEST SWAP2 POP PUSH2 0x1670 DUP4 PUSH2 0x1173 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1688 JUMPI PUSH2 0x1687 PUSH2 0x162B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA6 RETURNDATASIZE MSTORE8 LOG3 PUSH13 0xF11ED8BD02B14CB766379D08B2 PREVRANDAO MULMOD 0x23 SWAP4 0xC0 MCOPY RETURNDATASIZE DUP11 PUSH14 0xD2362066C864736F6C6343000818 STOP CALLER ","sourceMap":"360:2101:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3144:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5039:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;445:25:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3002:82:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3299:116;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;2030:429:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1087:104;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2276:93:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3610:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3846:140;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2074:89:2;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;4382:13;4398:12;:10;:12::i;:::-;4382:28;;4420:31;4429:5;4436:7;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;:::o;3144:97::-;3196:7;3222:12;;3215:19;;3144:97;:::o;5039:244::-;5126:4;5142:15;5160:12;:10;:12::i;:::-;5142:30;;5182:37;5198:4;5204:7;5213:5;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;5272:4;5265:11;;;5039:244;;;;;:::o;445:25:7:-;;;;:::o;3002:82:2:-;3051:5;3075:2;3068:9;;3002:82;:::o;3299:116::-;3364:7;3390:9;:18;3400:7;3390:18;;;;;;;;;;;;;;;;3383:25;;3299:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;2030:429:7:-;2155:33;2169:10;2181:6;;2155:13;:33::i;:::-;2147:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;2280:9;:21;2290:10;2280:21;;;;;;;;;;;;;;;;;;;;;;;;;2279:22;2271:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;2397:4;2373:9;:21;2383:10;2373:21;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;2429:23;2435:3;545:7;2429:5;:23::i;:::-;2030:429;;;:::o;1087:104::-;1531:13:0;:11;:13::i;:::-;1173:11:7::1;1160:10;:24;;;;1087:104:::0;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2276:93:2:-;2323:13;2355:7;2348:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2276:93;:::o;3610:178::-;3679:4;3695:13;3711:12;:10;:12::i;:::-;3695:28;;3733:27;3743:5;3750:2;3754:5;3733:9;:27::i;:::-;3777:4;3770:11;;;3610:178;;;;:::o;3846:140::-;3926:7;3952:11;:18;3964:5;3952:18;;;;;;;;;;;;;;;:27;3971:7;3952:27;;;;;;;;;;;;;;;;3945:34;;3846:140;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;656:96:5:-;709:7;735:10;728:17;;656:96;:::o;8989:128:2:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;10663:477::-;10762:24;10789:25;10799:5;10806:7;10789:9;:25::i;:::-;10762:52;;10848:17;10828:16;:37;10824:310;;10904:5;10885:16;:24;10881:130;;;10963:7;10972:16;10990:5;10936:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10881:130;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10824:310;10752:388;10663:477;;;:::o;5656:300::-;5755:1;5739:18;;:4;:18;;;5735:86;;5807:1;5780:30;;;;;;;;;;;:::i;:::-;;;;;;;;5735:86;5848:1;5834:16;;:2;:16;;;5830:86;;5902:1;5873:32;;;;;;;;;;;:::i;:::-;;;;;;;;5830:86;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;:::-;5656:300;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;1439:435:7:-;1529:4;1597:12;1654:8;1643:20;;;;;;;;:::i;:::-;;;;;;;;;;;;;1633:31;;;;;;1622:43;;;;;;;;:::i;:::-;;;;;;;;;;;;;1612:54;;;;;;1597:69;;1823:44;1842:6;;1823:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1850:10;;1862:4;1823:18;:44::i;:::-;1816:51;;;1439:435;;;;;:::o;7721:208:2:-;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;:::-;7721:208;;:::o;9949:432::-;10078:1;10061:19;;:5;:19;;;10057:89;;10132:1;10103:32;;;;;;;;;;;:::i;:::-;;;;;;;;10057:89;10178:1;10159:21;;:7;:21;;;10155:90;;10231:1;10203:31;;;;;;;;;;;:::i;:::-;;;;;;;;10155:90;10284:5;10254:11;:18;10266:5;10254:18;;;;;;;;;;;;;;;:27;10273:7;10254:27;;;;;;;;;;;;;;;:35;;;;10303:9;10299:76;;;10349:7;10333:31;;10342:5;10333:31;;;10358:5;10333:31;;;;;;:::i;:::-;;;;;;;;10299:76;9949:432;;;;:::o;6271:1107::-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;1265:154:6:-;1356:4;1408;1379:25;1392:5;1399:4;1379:12;:25::i;:::-;:33;1372:40;;1265:154;;;;;:::o;1967:290::-;2050:7;2069:20;2092:4;2069:27;;2111:9;2106:116;2130:5;:12;2126:1;:16;2106:116;;;2178:33;2188:12;2202:5;2208:1;2202:8;;;;;;;;:::i;:::-;;;;;;;;2178:9;:33::i;:::-;2163:48;;2144:3;;;;;;;2106:116;;;;2238:12;2231:19;;;1967:290;;;;:::o;9229:147::-;9292:7;9322:1;9318;:5;:51;;9349:20;9364:1;9367;9349:14;:20::i;:::-;9318:51;;;9326:20;9341:1;9344;9326:14;:20::i;:::-;9318:51;9311:58;;9229:147;;;;:::o;9496:261::-;9564:13;9668:1;9662:4;9655:15;9696:1;9690:4;9683:15;9736:4;9730;9720:21;9711:30;;9496:261;;;;:::o;7:99:8:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1553:117;1662:1;1659;1652:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:77::-;4460:7;4489:5;4478:16;;4423:77;;;:::o;4506:118::-;4593:24;4611:5;4593:24;:::i;:::-;4588:3;4581:37;4506:118;;:::o;4630:222::-;4723:4;4761:2;4750:9;4746:18;4738:26;;4774:71;4842:1;4831:9;4827:17;4818:6;4774:71;:::i;:::-;4630:222;;;;:::o;4858:86::-;4893:7;4933:4;4926:5;4922:16;4911:27;;4858:86;;;:::o;4950:112::-;5033:22;5049:5;5033:22;:::i;:::-;5028:3;5021:35;4950:112;;:::o;5068:214::-;5157:4;5195:2;5184:9;5180:18;5172:26;;5208:67;5272:1;5261:9;5257:17;5248:6;5208:67;:::i;:::-;5068:214;;;;:::o;5288:329::-;5347:6;5396:2;5384:9;5375:7;5371:23;5367:32;5364:119;;;5402:79;;:::i;:::-;5364:119;5522:1;5547:53;5592:7;5583:6;5572:9;5568:22;5547:53;:::i;:::-;5537:63;;5493:117;5288:329;;;;:::o;5623:117::-;5732:1;5729;5722:12;5746:117;5855:1;5852;5845:12;5869:117;5978:1;5975;5968:12;6009:568;6082:8;6092:6;6142:3;6135:4;6127:6;6123:17;6119:27;6109:122;;6150:79;;:::i;:::-;6109:122;6263:6;6250:20;6240:30;;6293:18;6285:6;6282:30;6279:117;;;6315:79;;:::i;:::-;6279:117;6429:4;6421:6;6417:17;6405:29;;6483:3;6475:4;6467:6;6463:17;6453:8;6449:32;6446:41;6443:128;;;6490:79;;:::i;:::-;6443:128;6009:568;;;;;:::o;6583:704::-;6678:6;6686;6694;6743:2;6731:9;6722:7;6718:23;6714:32;6711:119;;;6749:79;;:::i;:::-;6711:119;6869:1;6894:53;6939:7;6930:6;6919:9;6915:22;6894:53;:::i;:::-;6884:63;;6840:117;7024:2;7013:9;7009:18;6996:32;7055:18;7047:6;7044:30;7041:117;;;7077:79;;:::i;:::-;7041:117;7190:80;7262:7;7253:6;7242:9;7238:22;7190:80;:::i;:::-;7172:98;;;;6967:313;6583:704;;;;;:::o;7293:122::-;7366:24;7384:5;7366:24;:::i;:::-;7359:5;7356:35;7346:63;;7405:1;7402;7395:12;7346:63;7293:122;:::o;7421:139::-;7467:5;7505:6;7492:20;7483:29;;7521:33;7548:5;7521:33;:::i;:::-;7421:139;;;;:::o;7566:329::-;7625:6;7674:2;7662:9;7653:7;7649:23;7645:32;7642:119;;;7680:79;;:::i;:::-;7642:119;7800:1;7825:53;7870:7;7861:6;7850:9;7846:22;7825:53;:::i;:::-;7815:63;;7771:117;7566:329;;;;:::o;7901:118::-;7988:24;8006:5;7988:24;:::i;:::-;7983:3;7976:37;7901:118;;:::o;8025:222::-;8118:4;8156:2;8145:9;8141:18;8133:26;;8169:71;8237:1;8226:9;8222:17;8213:6;8169:71;:::i;:::-;8025:222;;;;:::o;8253:474::-;8321:6;8329;8378:2;8366:9;8357:7;8353:23;8349:32;8346:119;;;8384:79;;:::i;:::-;8346:119;8504:1;8529:53;8574:7;8565:6;8554:9;8550:22;8529:53;:::i;:::-;8519:63;;8475:117;8631:2;8657:53;8702:7;8693:6;8682:9;8678:22;8657:53;:::i;:::-;8647:63;;8602:118;8253:474;;;;;:::o;8733:180::-;8781:77;8778:1;8771:88;8878:4;8875:1;8868:15;8902:4;8899:1;8892:15;8919:320;8963:6;9000:1;8994:4;8990:12;8980:22;;9047:1;9041:4;9037:12;9068:18;9058:81;;9124:4;9116:6;9112:17;9102:27;;9058:81;9186:2;9178:6;9175:14;9155:18;9152:38;9149:84;;9205:18;;:::i;:::-;9149:84;8970:269;8919:320;;;:::o;9245:165::-;9385:17;9381:1;9373:6;9369:14;9362:41;9245:165;:::o;9416:366::-;9558:3;9579:67;9643:2;9638:3;9579:67;:::i;:::-;9572:74;;9655:93;9744:3;9655:93;:::i;:::-;9773:2;9768:3;9764:12;9757:19;;9416:366;;;:::o;9788:419::-;9954:4;9992:2;9981:9;9977:18;9969:26;;10041:9;10035:4;10031:20;10027:1;10016:9;10012:17;10005:47;10069:131;10195:4;10069:131;:::i;:::-;10061:139;;9788:419;;;:::o;10213:171::-;10353:23;10349:1;10341:6;10337:14;10330:47;10213:171;:::o;10390:366::-;10532:3;10553:67;10617:2;10612:3;10553:67;:::i;:::-;10546:74;;10629:93;10718:3;10629:93;:::i;:::-;10747:2;10742:3;10738:12;10731:19;;10390:366;;;:::o;10762:419::-;10928:4;10966:2;10955:9;10951:18;10943:26;;11015:9;11009:4;11005:20;11001:1;10990:9;10986:17;10979:47;11043:131;11169:4;11043:131;:::i;:::-;11035:139;;10762:419;;;:::o;11187:442::-;11336:4;11374:2;11363:9;11359:18;11351:26;;11387:71;11455:1;11444:9;11440:17;11431:6;11387:71;:::i;:::-;11468:72;11536:2;11525:9;11521:18;11512:6;11468:72;:::i;:::-;11550;11618:2;11607:9;11603:18;11594:6;11550:72;:::i;:::-;11187:442;;;;;;:::o;11635:180::-;11683:77;11680:1;11673:88;11780:4;11777:1;11770:15;11804:4;11801:1;11794:15;11821:191;11861:3;11880:20;11898:1;11880:20;:::i;:::-;11875:25;;11914:20;11932:1;11914:20;:::i;:::-;11909:25;;11957:1;11954;11950:9;11943:16;;11978:3;11975:1;11972:10;11969:36;;;11985:18;;:::i;:::-;11969:36;11821:191;;;;:::o;12018:180::-;12066:77;12063:1;12056:88;12163:4;12160:1;12153:15;12187:4;12184:1;12177:15"},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","merkleRoot()":"2eb4a7ab","mint(address,bytes32[])":"7bf32270","name()":"06fdde03","owner()":"8da5cb5b","renounceOwnership()":"715018a6","setMerkleRoot(bytes32)":"7cb64759","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_initialOwner\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_merkleRoot\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"merkleRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"_proof\",\"type\":\"bytes32[]\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_merkleRoot\",\"type\":\"bytes32\"}],\"name\":\"setMerkleRoot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"mint(address,bytes32[])\":{\"params\":{\"_proof\":\"The merkle proof*\",\"_to\":\"The token receiver\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setMerkleRoot(bytes32)\":{\"params\":{\"_merkleRoot\":\"the new merkle root*\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"mint(address,bytes32[])\":{\"notice\":\"Allows a whitelisted user to mint tokens\"},\"setMerkleRoot(bytes32)\":{\"notice\":\"Change the merkle root\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AntekIsERC20.sol\":\"AntekIsERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0x6400c4bee15052e043e5d10315135972529bd1c8012f43da494dc6b4f4661058\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5d3d47d35af4373743a559ea4b9b7ecfe4bab6f0703f410c1e59959b7966ac\",\"dweb:/ipfs/QmTHdoghh4WLu4yURjGEgRk162pcwwdsG52MPGa12GqnGR\"]},\"contracts/AntekIsERC20.sol\":{\"keccak256\":\"0x9ba7e5819d103b36809ad3fe6f623bb881c95edf556f80b0b62d70bd79c8083c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d2ca9f2a903c71cd0f9adec9bd8765b2730fe4e53d2a7a65142361a0f3a3ab34\",\"dweb:/ipfs/QmRvPmAxASzeYMwX4b1sNRcqtFsFDNrMapLZHVXRJpbZk4\"]}},\"version\":1}"}}}}}